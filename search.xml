<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Thymeleaf</title>
      <link href="/posts/20081401.html/"/>
      <url>/posts/20081401.html/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>📌Github项目地址：<a href="https://github.com/BadCode1996/thymeleaf" target="_blank" rel="noopener">thymeleaf</a></p><hr><h1>Thymeleaf简介</h1><p>官方网站：<a href="https://www.thymeleaf.org" target="_blank" rel="noopener">https://www.thymeleaf.org</a></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200814005903.png" alt="1526434145635"></p><p><strong>Thymeleaf</strong>是用来开发Web和独立环境项目的现代服务器端Java模板引擎。</p><p>Thymeleaf的主要目标是为您的开发工作流程带来优雅的<em>自然模板</em> - HTML。可以在直接浏览器中正确显示，并且可以作为静态原型，从而在开发团队中实现更强大的协作。</p><p>借助Spring Framework的模块，可以根据自己的喜好进行自由选择，可插拔功能组件，Thymeleaf是现代HTML5 JVM Web开发的理想选择 - 尽管它可以做的更多。</p><p>Spring官方支持的服务的渲染模板中，并不包含jsp。而是Thymeleaf和Freemarker等，而Thymeleaf与SpringMVC的视图技术，及SpringBoot的自动化配置集成非常完美，几乎没有任何成本，你只用关注Thymeleaf的语法即可。</p><h1>特点</h1><p>特点：</p><ul><li>动静结合：Thymeleaf 在有网络和无网络的环境下皆可运行，即它可以让美工在浏览器查看页面的静态效果，也可以让程序员在服务器查看带数据的动态页面效果。这是由于它支持 html 原型，然后在 html 标签里增加额外的属性来达到模板+数据的展示方式。浏览器解释 html 时会忽略未定义的标签属性，所以 thymeleaf 的模板可以静态地运行；当有数据返回到页面时，Thymeleaf 标签会动态地替换掉静态内容，使页面动态显示。</li><li>开箱即用：它提供标准和spring标准两种方言，可以直接套用模板实现JSTL、 OGNL表达式效果，避免每天套模板、改jstl、改标签的困扰。同时开发人员也可以扩展和创建自定义的方言。</li><li>多方言支持：Thymeleaf 提供spring标准方言和一个与 SpringMVC 完美集成的可选模块，可以快速的实现表单绑定、属性编辑器、国际化等功能。</li><li>与SpringBoot完美整合，SpringBoot提供了Thymeleaf的默认配置，并且为Thymeleaf设置了视图解析器，我们可以像以前操作jsp一样来操作Thymeleaf。代码几乎没有任何区别，就是在模板语法上有区别。</li></ul><h1>环境准备</h1><p>我们来创建一个module，为学习Thymeleaf做准备：</p><h2 id="创建module">创建module</h2><p>使用spring 脚手架创建：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814010629.png" alt="image-20200814010629056"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814010811.png" alt="image-20200814010811179"></p><p>勾选web和Thymeleaf的依赖：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814010905.png" alt="image-20200814010905837"></p><p>项目结构：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814011223.png" alt="20200814011223"></p><p>pom</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.demo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>thymeleaf<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>不需要做任何配置，启动器已经帮我们把Thymeleaf的视图器配置完成：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814012621.png" alt="image-20200814012621222"></p><p>而且，还配置了模板文件（html）的位置，与jsp类似的前缀+ 视图名 + 后缀风格：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814013018.png" alt="image-20200814013018250"></p><ul><li>默认前缀：<code>classpath:/templates/</code></li><li>默认后缀：<code>.html</code></li></ul><p>所以如果我们返回视图：<code>users</code>，会指向到 <code>classpath:/templates/users.html</code></p><p>Thymeleaf默认会开启页面缓存，提高页面并发能力。但会导致我们修改页面不会立即被展现，因此我们关闭缓存：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭Thymeleaf的缓存</span></span><br><span class="line"><span class="meta">spring.thymeleaf.cache</span>=<span class="string">false</span></span><br></pre></td></tr></table></figure><p>另外，修改完毕页面，需要使用快捷键：<code>Ctrl + Shift + F9</code>来刷新工程。</p><h2 id="快速开始">快速开始</h2><p>准备一个controller，控制视图跳转：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloThymeleaf</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"show1"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">show1</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">"msg"</span>,<span class="string">"Hello Thymeleaf"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello1"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建一个html模板命名为<code>hello1.html</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">"$&#123;msg&#125;"</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>，把html 的名称空间，改成：<code>xmlns:th=&quot;http://www.thymeleaf.org&quot;</code> 会有语法提示</p><p>如果没有提示，使用快捷键<code>Ctrl + Alt + S</code>进入设置</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814013652.png" alt="image-20200814013652037"></p><p>勾选Thymeleaf插件即可。</p><p>启动项目，访问页面：localhost:8080/show1</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814015845.png" alt="image-20200814015845146"></p><h1>语法</h1><p>Thymeleaf的主要作用是把model中的数据渲染到html中，因此其语法主要是如何解析model中的数据。从以下方面来学习：</p><ul><li>变量</li><li>方法</li><li>条件判断</li><li>循环</li><li>运算<ul><li>逻辑运算</li><li>布尔运算</li><li>比较运算</li><li>条件运算</li></ul></li><li>其它</li></ul><h2 id="变量">变量</h2><h3 id="变量案例">变量案例</h3><p>我们先新建一个实体类：User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 性别</span></span><br><span class="line"><span class="comment">     * 0男 1女</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span> sex;</span><br><span class="line">    <span class="keyword">private</span> User friend;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// TODO get set and construction </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在Controller中添加数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"show2"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">show2</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setName(<span class="string">"Tom"</span>);</span><br><span class="line">    user.setAge(<span class="number">10</span>);</span><br><span class="line">    user.setSex(<span class="number">0</span>);</span><br><span class="line">    user.setFriend(<span class="keyword">new</span> User(<span class="string">"Jerry"</span>,<span class="number">9</span>,<span class="number">1</span>));</span><br><span class="line">    model.addAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"hello2"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>语法说明：</p></blockquote><p>Thymeleaf通过<code>${}</code>来获取model中的变量，注意这不是el表达式，而是ognl表达式，但是语法非常像。</p><blockquote><p>示例：</p></blockquote><p>我们在<code>hello2.html</code>页面获取user数据：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">    欢迎您：<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;user.name&#125;"</span>&gt;</span>请登录<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814015902.png" alt="image-20200814015902282"></p><p>感觉跟el表达式几乎是一样的。不过区别在于，我们的表达式写在一个名为：<code>th:text</code>的标签属性中，这个叫做<code>指令</code></p><h3 id="动静结合">动静结合</h3><blockquote><p>指令：</p></blockquote><p>Thymeleaf崇尚<code>自然模板</code>，意思就是模板是纯正的html代码，脱离模板引擎，在纯静态环境也可以直接运行。现在如果我们直接在html中编写 <code>${}</code>这样的表达式，显然在静态环境下就会出错，这不符合Thymeleaf的理念。</p><p>Thymeleaf中所有的表达式都需要写在<code>指令</code>中，指令是HTML5中的自定义属性，在Thymeleaf中所有指令都是以<code>th:</code>开头。因为表达式<code>${user.name}</code>是写在自定义属性中，因此在静态环境下，表达式的内容会被当做是普通字符串，浏览器会自动忽略这些指令，这样就不会报错了！</p><p>现在，我们不经过SpringMVC，而是直接用浏览器打开页面看看：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814020231.png" alt="image-20200814020230997"></p><ul><li>静态页面中，<code>th</code>指令不被识别，但是浏览器也不会报错，把它当做一个普通属性处理。这样<code>span</code>的默认值<code>请登录</code>就会展现在页面</li><li>如果是在Thymeleaf环境下，<code>th</code>指令就会被识别和解析，而<code>th:text</code>的含义就是<strong>替换所在标签中的文本内容</strong>，于是<code>user.name</code>的值就替代了 <code>span</code>中默认的请登录</li></ul><p>指令的设计，正是Thymeleaf的高明之处，也是它优于其它模板引擎的原因。动静结合的设计，使得无论是前端开发人员还是后端开发人员可以完美契合。</p><blockquote><p>向下兼容</p></blockquote><p>但是要注意，如果浏览器不支持Html5怎么办？</p><p>如果不支持这种<code>th:</code>的命名空间写法，那么可以把<code>th:text</code>换成 <code>data-th-text</code>，Thymeleaf也可以兼容。</p><blockquote><p>escape</p></blockquote><p>另外，<code>th:text</code>指令出于安全考虑，会把表达式读取到的值进行处理，防止html的注入。</p><p>例如，<code>&lt;p&gt;你好&lt;/p&gt;</code>将会被格式化输出为<code>$lt;p$gt;你好$lt;/p$lt;</code>。</p><p>如果想要不进行格式化输出，而是要输出原始内容，则使用<code>th:utext</code>来代替.</p><h3 id="ognl表达式的语法糖">ognl表达式的语法糖</h3><p>刚才获取变量值，我们使用的是经典的<code>对象.属性名</code>方式。但有些情况下，我们的属性名可能本身也是变量，怎么办？</p><p>ognl提供了类似js的语法方式：</p><p>例如：<code>${user.name}</code> 可以写作<code>${user['name']}</code></p><h2 id="自定义变量">自定义变量</h2><blockquote><p>场景</p></blockquote><p>看下面的案例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Name: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;user.name&#125;"</span>&gt;</span>Jack<span class="tag">&lt;/<span class="name">span</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Age: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;user.age&#125;"</span>&gt;</span>21<span class="tag">&lt;/<span class="name">span</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>friend: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;user.friend.name&#125;"</span>&gt;</span>Rose<span class="tag">&lt;/<span class="name">span</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们获取用户的所有信息，分别展示。</p><p>当数据量比较多的时候，频繁的写<code>user.</code>就会非常麻烦。</p><p>因此，Thymeleaf提供了自定义变量来解决：</p><blockquote><p>示例：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">th:object</span>=<span class="string">"$&#123;user&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Name: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"*&#123;name&#125;"</span>&gt;</span>Jack<span class="tag">&lt;/<span class="name">span</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Age: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"*&#123;age&#125;"</span>&gt;</span>21<span class="tag">&lt;/<span class="name">span</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>friend: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"*&#123;friend.name&#125;"</span>&gt;</span>Rose<span class="tag">&lt;/<span class="name">span</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>首先在 <code>h2</code>上 用 <code>th:object=&quot;${user}&quot;</code>获取user的值，并且保存</li><li>然后，在<code>h2</code>内部的任意元素上，可以通过 <code>*{属性名}</code>的方式，来获取user中的属性，这样就省去了大量的<code>user.</code>前缀了</li></ul><h2 id="方法">方法</h2><blockquote><p>ognl表达式中的方法调用</p></blockquote><p>ognl表达式本身就支持方法调用，例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">th:object</span>=<span class="string">"$&#123;user&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>FirstName: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"*&#123;name.split(' ')[0]&#125;"</span>&gt;</span>Jack<span class="tag">&lt;/<span class="name">span</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>LastName: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"*&#123;name.split(' ')[1]&#125;"</span>&gt;</span>Li<span class="tag">&lt;/<span class="name">span</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>这里我们调用了name（是一个字符串）的split方法。</li></ul><blockquote><p>Thymeleaf内置对象</p></blockquote><p>Thymeleaf中提供了一些内置对象，并且在这些对象中提供了一些方法，方便我们来调用。获取这些对象，需要使用<code>#对象名</code>来引用。</p><ul><li>一些环境相关对象</li></ul><table><thead><tr><th style="text-align:center">对象</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:center"><code>#ctx</code></td><td style="text-align:left">获取Thymeleaf自己的Context对象</td></tr><tr><td style="text-align:center"><code>#requset</code></td><td style="text-align:left">如果是web程序，可以获取HttpServletRequest对象</td></tr><tr><td style="text-align:center"><code>#response</code></td><td style="text-align:left">如果是web程序，可以获取HttpServletReponse对象</td></tr><tr><td style="text-align:center"><code>#session</code></td><td style="text-align:left">如果是web程序，可以获取HttpSession对象</td></tr><tr><td style="text-align:center"><code>#servletContext</code></td><td style="text-align:left">如果是web程序，可以获取HttpServletContext对象</td></tr><tr><td style="text-align:center"></td><td style="text-align:left"></td></tr></tbody></table><ul><li>Thymeleaf提供的全局对象：</li></ul><table><thead><tr><th style="text-align:center">对象</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:center"><code>#dates</code></td><td style="text-align:left">处理java.util.date的工具对象</td></tr><tr><td style="text-align:center"><code>#calendars</code></td><td style="text-align:left">处理java.util.calendar的工具对象</td></tr><tr><td style="text-align:center"><code>#numbers</code></td><td style="text-align:left">用来对数字格式化的方法</td></tr><tr><td style="text-align:center"><code>#strings</code></td><td style="text-align:left">用来处理字符串的方法</td></tr><tr><td style="text-align:center"><code>#bools</code></td><td style="text-align:left">用来判断布尔值的方法</td></tr><tr><td style="text-align:center"><code>#arrays</code></td><td style="text-align:left">用来护理数组的方法</td></tr><tr><td style="text-align:center"><code>#lists</code></td><td style="text-align:left">用来处理List集合的方法</td></tr><tr><td style="text-align:center"><code>#sets</code></td><td style="text-align:left">用来处理set集合的方法</td></tr><tr><td style="text-align:center"><code>#maps</code></td><td style="text-align:left">用来处理map集合的方法</td></tr></tbody></table><ul><li>举例</li></ul><p>我们在环境变量中添加日期类型对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"show3"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">show3</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">    model.addAttribute(<span class="string">"today"</span>, <span class="keyword">new</span> Date());</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"hello3"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建<code>hello3.html</code>页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    今天是: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#dates.format(today,'yyyy-MM-dd HH:mm:ss')&#125;"</span>&gt;</span>2020-08-14<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814020935.png" alt="20200814020935"></p><h2 id="字面值">字面值</h2><p>有的时候，我们需要在指令中填写基本类型如：字符串、数值、布尔等，并不希望被Thymeleaf解析为变量，这个时候称为字面值。</p><ul><li><p>字符串字面值</p><p>使用一对<code>'</code>引用的内容就是字符串字面值了：在hello3.html中添加以下内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  你正在观看 <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"'thymeleaf'"</span>&gt;</span>template<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 的字符串常量值.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>th:text</code>中的thymeleaf并不会被认为是变量，而是一个字符串</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814021510.png" alt="image-20200814021510093"></p></li><li><p>数字字面值</p><p>数字不需要任何特殊语法， 写的什么就是什么，而且可以直接进行算术运算</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>今年是 <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"2020"</span>&gt;</span>1900<span class="tag">&lt;/<span class="name">span</span>&gt;</span>年.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>十年后将会是 <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"2020 + 10"</span>&gt;</span>1910<span class="tag">&lt;/<span class="name">span</span>&gt;</span>年.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814022030.png" alt="image-20200814022030294"></p></li><li><p>布尔字面值</p><p>布尔类型的字面值是true或false：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    你填的是true</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里引用了一个<code>th:if</code>指令，跟vue中的<code>v-if</code>类似</p></li></ul><h2 id="拼接">拼接</h2><p>我们经常会用到普通字符串与表达式拼接的情况：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span th:text&#x3D;&quot;&#39;欢迎您:&#39; + $&#123;user.name&#125; + &#39;!&#39;&quot;&gt;&lt;&#x2F;span&gt;</span><br></pre></td></tr></table></figure><p>字符串字面值需要用<code>''</code>，拼接起来非常麻烦，Thymeleaf对此进行了简化，使用一对<code>|</code>即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span th:text&#x3D;&quot;|欢迎您:$&#123;user.name&#125;|&quot;&gt;&lt;&#x2F;span&gt;</span><br></pre></td></tr></table></figure><p>与上面是完全等效的，这样就省去了字符串字面值的书写。</p><p>修改了<code>hello2.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">    欢迎您: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;user.name&#125;"</span>&gt;</span>请登录<span class="tag">&lt;/<span class="name">span</span>&gt;</span>!</span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"'欢迎您: ' + $&#123;user.name&#125; + '!'"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"|欢迎您: $&#123;user.name&#125; !|"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814022540.png" alt="image-20200814022540599"></p><h2 id="运算">运算</h2><p>需要注意：<code>${}</code>内部的是通过OGNL表达式引擎解析的，外部的才是通过Thymeleaf的引擎解析，因此运算符尽量放在<code>${}</code>外进行。</p><ul><li><p>算术运算</p><p>支持的算术运算符：<code>+ - * / %</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"|Age: $&#123;user.age&#125;|"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;user.age&#125;%2 == 0"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814022918.png" alt="image-20200814022918121"></p></li><li><p>比较运算</p><p>支持的比较运算：<code>&gt;</code>, <code>&lt;</code>, <code>&gt;=</code> and <code>&lt;=</code>  ，但是<code>&gt;</code>, <code>&lt;</code>不能直接使用，因为xml会解析为标签，要使用别名。</p><p>注意 <code>==</code> and <code>!=</code>不仅可以比较数值，类似于equals的功能。</p><p>可以使用的别名：<code>gt (&gt;), lt (&lt;), ge (&gt;=), le (&lt;=), not (!). Also eq (==), neq/ne (!=).</code></p></li><li><p>条件运算</p><ul><li><p>三元运算</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;user.sex&#125;==0 ? '男':'女'"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814023223.png" alt="image-20200814023223659"></p><p>三元运算符的三个部分：conditon ? then : else</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">condition：条件</span><br><span class="line"></span><br><span class="line">then：条件成立的结果</span><br><span class="line"></span><br><span class="line">else：不成立的结果</span><br></pre></td></tr></table></figure></li><li><p>默认值</p><p>有的时候，我们取一个值可能为空，这个时候需要做非空判断，可以使用 <code>表达式 ?: 默认值</code>简写：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;name&#125; ?: '二狗'"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814023518.png" alt="image-20200814023518919"></p></li></ul></li></ul><h2 id="循环">循环</h2><p>循环也是非常频繁使用的需求，我们使用<code>th:each</code>指令来完成：</p><p>假如有用户的集合：users在Context中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">"user : $&#123;users&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;user.name&#125;"</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;user.age&#125;"</span>&gt;</span>Age<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><p>${users} 是要遍历的集合，可以是以下类型：</p><ul><li>Iterable，实现了Iterable接口的类</li><li>Enumeration，枚举</li><li>Interator，迭代器</li><li>Map，遍历得到的是Map.Entry</li><li>Array，数组及其它一切符合数组结果的对象</li></ul><p>在迭代的同时，我们也可以获取迭代的状态对象：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">"user,stat : $&#123;users&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;user.name&#125;"</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;user.age&#125;"</span>&gt;</span>Age<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><p>stat对象包含以下属性：</p><ul><li>index，从0开始的角标</li><li>count，元素的个数，从1开始</li><li>size，总元素个数</li><li>current，当前遍历到的元素</li><li>even/odd，返回是否为奇偶，boolean值</li><li>first/last，返回是否为第一或最后，boolean值</li></ul><h2 id="逻辑判断">逻辑判断</h2><p>有了<code>if和else</code>，我们能实现一切功能<sup>_</sup>。</p><p>Thymeleaf中使用<code>th:if</code> 或者 <code>th:unless</code> ，两者的意思恰好相反。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:if</span>=<span class="string">"$&#123;user.age&#125; &lt; 18"</span>&gt;</span>小鲜肉<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果表达式的值为true，则标签会渲染到页面，否则不进行渲染。</p><p>以下情况被认定为true：</p><ul><li>表达式值为true</li><li>表达式值为非0数值</li><li>表达式值为非0字符</li><li>表达式值为字符串，但不是<code>&quot;false&quot;</code>,<code>&quot;no&quot;</code>,<code>&quot;off&quot;</code></li><li>表达式不是布尔、字符串、数字、字符中的任何一种</li></ul><p>其它情况包括null都被认定为false</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814023956.png" alt="image-20200814023956092"></p><h2 id="分支控制switch">分支控制switch</h2><p>这里要使用两个指令：<code>th:switch</code> 和 <code>th:case</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:switch</span>=<span class="string">"$&#123;user.role&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">"'admin'"</span>&gt;</span>管理员<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">"'manager'"</span>&gt;</span>经理<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">"*"</span>&gt;</span>其他用户<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"show4"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">show4</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setName(<span class="string">"Carey"</span>);</span><br><span class="line">    user.setAge(<span class="number">20</span>);</span><br><span class="line">    user.setSex(<span class="number">0</span>);</span><br><span class="line">    user.setRole(<span class="string">"admin"</span>);</span><br><span class="line">    model.addAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"hello4"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的是，一旦有一个th:case成立，其它的则不再判断。与java中的switch是一样的。</p><p>另外<code>th:case=&quot;*&quot;</code>表示默认，放最后。</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814024904.png" alt="image-20200814024904501"></p><h2 id="JS模板">JS模板</h2><p>模板引擎不仅可以渲染html，也可以对JS中的进行预处理。而且为了在纯静态环境下可以运行，其Thymeleaf代码可以被注释起来：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:inline</span>=<span class="string">"javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> user = <span class="comment">/*[[$&#123;user&#125;]]*/</span> &#123;&#125;;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> age = <span class="comment">/*[[$&#123;user.age&#125;]]*/</span> <span class="number">20</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(user);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(age)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>在script标签中通过<code>th:inline=&quot;javascript&quot;</code>来声明这是要特殊处理的js脚本</p></li><li><p>语法结构：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> user = <span class="comment">/*[[Thymeleaf表达式]]*/</span> <span class="string">"静态环境下的默认值"</span>;</span><br></pre></td></tr></table></figure><p>因为Thymeleaf被注释起来，因此即便是静态环境下， js代码也不会报错，而是采用表达式后面跟着的默认值。</p><p>看看页面的源码：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814025237.png" alt="image-20200814025237148"></p><p>User对象被直接处理为json格式了，非常方便。</p><p>控制台：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/14/20200814025321.png" alt="image-20200814025321551"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 模板引擎 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thymeleaf </tag>
            
            <tag> 模板引擎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>跨域解决方案</title>
      <link href="/posts/20072601.html/"/>
      <url>/posts/20072601.html/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><div class="note info icon">            <p>本文作者： <a href="https://segmentfault.com/u/hoby" target="_blank" rel="noopener">安静de沉淀</a><br>本文链接： <a href="https://segmentfault.com/a/1190000011145364#item-3" target="_blank" rel="noopener">https://segmentfault.com/a/1190000011145364#item-3</a> 前端常见跨域解决方案（全）</p>          </div><h1>跨域解决方案</h1><ul><li><p>通过jsonp跨域</p></li><li><p>document.domain + iframe跨域</p></li><li><p>location.hash + iframe</p></li><li><p><a href="http://window.name" target="_blank" rel="noopener">window.name</a> + iframe跨域</p></li><li><p>postMessage跨域</p></li><li><p>跨域资源共享（CORS）</p></li><li><p>nginx代理跨域</p></li><li><p>Nodejs中间件代理跨域</p></li><li><p>WebSocket协议跨域</p></li></ul><h2 id="通过jsonp跨域">通过jsonp跨域</h2><p>通常为了减轻web服务器的负载，我们把js、css，img等静态资源分离到另一台独立域名的服务器上，在html页面中再通过相应的标签从不同域名下加载静态资源，而被浏览器允许，基于此原理，我们可以通过动态创建script，再请求一个带参网址实现跨域通信。</p><ul><li><p>原生实现：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">   script.type = <span class="string">'text/javascript'</span>;</span><br><span class="line">  </span><br><span class="line">   <span class="comment">// 传参一个回调函数名给后端，方便后端返回时执行这个在前端定义的回调函数</span></span><br><span class="line">   script.src = <span class="string">'http://www.domain2.com:8080/login?user=admin&amp;callback=handleCallback'</span>;</span><br><span class="line">   <span class="built_in">document</span>.head.appendChild(script);</span><br><span class="line">  </span><br><span class="line">   <span class="comment">// 回调执行函数</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">handleCallback</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">       alert(<span class="built_in">JSON</span>.stringify(res));</span><br><span class="line">   &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>服务端返回如下（返回时即执行全局函数）：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">handleCallback(&#123;<span class="string">"status"</span>: <span class="literal">true</span>, <span class="string">"user"</span>: <span class="string">"admin"</span>&#125;)</span><br></pre></td></tr></table></figure></li><li><p>jQuery ajax：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url: <span class="string">'http://www.domain2.com:8080/login'</span>,</span><br><span class="line">    type: <span class="string">'get'</span>,</span><br><span class="line">    dataType: <span class="string">'jsonp'</span>,  <span class="comment">// 请求方式为jsonp</span></span><br><span class="line">    jsonpCallback: <span class="string">"handleCallback"</span>,    <span class="comment">// 自定义回调函数名</span></span><br><span class="line">    data: &#123;&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>Vue.js：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$http.jsonp(<span class="string">'http://www.domain2.com:8080/login'</span>, &#123;</span><br><span class="line">    params: &#123;&#125;,</span><br><span class="line">    jsonp: <span class="string">'handleCallback'</span></span><br><span class="line">&#125;).then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res); </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>后端Node.js代码示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> querystring = <span class="built_in">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">var</span> server = http.createServer();</span><br><span class="line"></span><br><span class="line">server.on(<span class="string">'request'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> params = qs.parse(req.url.split(<span class="string">'?'</span>)[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">var</span> fn = params.callback;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// jsonp返回设置</span></span><br><span class="line">    res.writeHead(<span class="number">200</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">'text/javascript'</span> &#125;);</span><br><span class="line">    res.write(fn + <span class="string">'('</span> + <span class="built_in">JSON</span>.stringify(params) + <span class="string">')'</span>);</span><br><span class="line"></span><br><span class="line">    res.end();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(<span class="string">'8080'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Server is running at port 8080...'</span>);</span><br></pre></td></tr></table></figure><p><strong>jsonp缺点：只能实现get一种请求。</strong></p></li></ul><h2 id="document-domain-iframe跨域">document.domain + iframe跨域</h2><p>此方案仅限主域相同，子域不同的跨域应用场景。</p><p>实现原理：两个页面都通过js强制设置document.domain为基础主域，就实现了同域。</p><ul><li><p>父窗口：(<a href="http://www.domain.com/a.html" target="_blank" rel="noopener">http://www.domain.com/a.html</a>)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe id=<span class="string">"iframe"</span> src=<span class="string">"http://child.domain.com/b.html"</span>&gt;&lt;<span class="regexp">/iframe&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">    document.domain = 'domain.com';</span></span><br><span class="line"><span class="regexp">    var user = 'admin';</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure></li><li><p>子窗口：(<a href="http://child.domain.com/b.html" target="_blank" rel="noopener">http://child.domain.com/b.html</a>)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="built_in">document</span>.domain = <span class="string">'domain.com'</span>;</span><br><span class="line">    <span class="comment">// 获取父窗口中变量</span></span><br><span class="line">    alert(<span class="string">'get js data from parent ---&gt; '</span> + <span class="built_in">window</span>.parent.user);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="location-hash-iframe">location.hash + iframe</h2><p>实现原理： a欲与b跨域相互通信，通过中间页c来实现。 三个页面，不同域之间利用iframe的location.hash传值，相同域之间直接js访问来通信。</p><p>具体实现：A域：a.html -&gt; B域：b.html -&gt; A域：c.html，a与b不同域只能通过hash值单向通信，b与c也不同域也只能单向通信，但c与a同域，所以c可通过parent.parent访问a页面所有对象。</p><ul><li><p>a.html：(<a href="http://www.domain1.com/a.html" target="_blank" rel="noopener">http://www.domain1.com/a.html</a>)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe id=<span class="string">"iframe"</span> src=<span class="string">"http://www.domain2.com/b.html"</span> style=<span class="string">"display:none;"</span>&gt;&lt;<span class="regexp">/iframe&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">    var iframe = document.getElementById('iframe');</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 向b.html传hash值</span></span><br><span class="line"><span class="regexp">    setTimeout(function() &#123;</span></span><br><span class="line"><span class="regexp">        iframe.src = iframe.src + '#user=admin';</span></span><br><span class="line"><span class="regexp">    &#125;, 1000);</span></span><br><span class="line"><span class="regexp">    </span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 开放给同域c.html的回调方法</span></span><br><span class="line"><span class="regexp">    function onCallback(res) &#123;</span></span><br><span class="line"><span class="regexp">        alert('data from c.html ---&gt; ' + res);</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure></li><li><p>b.html：(<a href="http://www.domain2.com/b.html" target="_blank" rel="noopener">http://www.domain2.com/b.html</a>)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe id=<span class="string">"iframe"</span> src=<span class="string">"http://www.domain1.com/c.html"</span> style=<span class="string">"display:none;"</span>&gt;&lt;<span class="regexp">/iframe&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">    var iframe = document.getElementById('iframe');</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 监听a.html传来的hash值，再传给c.html</span></span><br><span class="line"><span class="regexp">    window.onhashchange = function () &#123;</span></span><br><span class="line"><span class="regexp">        iframe.src = iframe.src + location.hash;</span></span><br><span class="line"><span class="regexp">    &#125;;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure></li><li><p>c.html：(<a href="http://www.domain1.com/c.html" target="_blank" rel="noopener">http://www.domain1.com/c.html</a>)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 监听b.html传来的hash值</span></span><br><span class="line">    <span class="built_in">window</span>.onhashchange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 再通过操作同域a.html的js回调，将结果传回</span></span><br><span class="line">        <span class="built_in">window</span>.parent.parent.onCallback(<span class="string">'hello: '</span> + location.hash.replace(<span class="string">'#user='</span>, <span class="string">''</span>));</span><br><span class="line">    &#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="window-name-iframe跨域"><a href="http://window.name" target="_blank" rel="noopener">window.name</a> + iframe跨域</h2><p>window.name属性的独特之处：name值在不同的页面（甚至不同域名）加载后依旧存在，并且可以支持非常长的 name 值（2MB）。</p><ul><li>a.html：(<a href="http://www.domain1.com/a.html" target="_blank" rel="noopener">http://www.domain1.com/a.html</a>)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> proxy = <span class="function"><span class="keyword">function</span>(<span class="params">url, callback</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> state = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> iframe = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载跨域页面</span></span><br><span class="line">    iframe.src = url;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// onload事件会触发2次，第1次加载跨域页，并留存数据于window.name</span></span><br><span class="line">    iframe.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (state === <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 第2次onload(同域proxy页)成功后，读取同域window.name中数据</span></span><br><span class="line">            callback(iframe.contentWindow.name);</span><br><span class="line">            destoryFrame();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 第1次onload(跨域页)成功后，切换到同域代理页面</span></span><br><span class="line">            iframe.contentWindow.location = <span class="string">'http://www.domain1.com/proxy.html'</span>;</span><br><span class="line">            state = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(iframe);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取数据以后销毁这个iframe，释放内存；这也保证了安全（不被其他域frame js访问）</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">destoryFrame</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        iframe.contentWindow.document.write(<span class="string">''</span>);</span><br><span class="line">        iframe.contentWindow.close();</span><br><span class="line">        <span class="built_in">document</span>.body.removeChild(iframe);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求跨域b页面数据</span></span><br><span class="line">proxy(<span class="string">'http://www.domain2.com/b.html'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">    alert(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><p>proxy.html：(<a href="http://www.domain1.com/proxy.html" target="_blank" rel="noopener">http://www.domain1.com/proxy…</a>)<br>中间代理页，与a.html同域，内容为空即可。</p></li><li><p>b.html：(<a href="http://www.domain2.com/b.html" target="_blank" rel="noopener">http://www.domain2.com/b.html</a>)</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="built_in">window</span>.name = <span class="string">'This is domain2 data!'</span>;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>总结：通过iframe的src属性由外域转向本地域，跨域数据即由iframe的window.name从外域传递到本地域。这个就巧妙地绕过了浏览器的跨域访问限制，但同时它又是安全操作。</p><h2 id="postMessage跨域">postMessage跨域</h2><p>postMessage是HTML5 XMLHttpRequest Level 2中的API，且是为数不多可以跨域操作的window属性之一，它可用于解决以下方面的问题：</p><ul><li>页面和其打开的新窗口的数据传递</li><li>多窗口之间消息传递</li><li>页面与嵌套的iframe消息传递</li><li>上面三个场景的跨域数据传递</li></ul><p>用法：postMessage(data,origin)方法接受两个参数<br>data： html5规范支持任意基本类型或可复制的对象，但部分浏览器只支持字符串，所以传参时最好用JSON.stringify()序列化。<br>origin： 协议+主机+端口号，也可以设置为&quot;*&quot;，表示可以传递给任意窗口，如果要指定和当前窗口同源的话设置为&quot;/&quot;。</p><ul><li>a.html：(<a href="http://www.domain1.com/a.html" target="_blank" rel="noopener">http://www.domain1.com/a.html</a>)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe id=<span class="string">"iframe"</span> src=<span class="string">"http://www.domain2.com/b.html"</span> style=<span class="string">"display:none;"</span>&gt;&lt;<span class="regexp">/iframe&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;       </span></span><br><span class="line"><span class="regexp">    var iframe = document.getElementById('iframe');</span></span><br><span class="line"><span class="regexp">    iframe.onload = function() &#123;</span></span><br><span class="line"><span class="regexp">        var data = &#123;</span></span><br><span class="line"><span class="regexp">            name: 'aym'</span></span><br><span class="line"><span class="regexp">        &#125;;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ 向domain2传送跨域数据</span></span><br><span class="line"><span class="regexp">        iframe.contentWindow.postMessage(JSON.stringify(data), 'http:/</span><span class="regexp">/www.domain2.com');</span></span><br><span class="line"><span class="regexp">    &#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 接受domain2返回数据</span></span><br><span class="line"><span class="regexp">    window.addEventListener('message', function(e) &#123;</span></span><br><span class="line"><span class="regexp">        alert('data from domain2 ---&gt; ' + e.data);</span></span><br><span class="line"><span class="regexp">    &#125;, false);</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure><ul><li>b.html：(<a href="http://www.domain2.com/b.html" target="_blank" rel="noopener">http://www.domain2.com/b.html</a>)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 接收domain1的数据</span></span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        alert(<span class="string">'data from domain1 ---&gt; '</span> + e.data);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(e.data);</span><br><span class="line">        <span class="keyword">if</span> (data) &#123;</span><br><span class="line">            data.number = <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 处理后再发回domain1</span></span><br><span class="line">            <span class="built_in">window</span>.parent.postMessage(<span class="built_in">JSON</span>.stringify(data), <span class="string">'http://www.domain1.com'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="literal">false</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="跨域资源共享（CORS）">跨域资源共享（CORS）</h2><p>普通跨域请求：只服务端设置Access-Control-Allow-Origin即可，前端无须设置，若要带cookie请求：前后端都需要设置。</p><p>需注意的是：由于同源策略的限制，所读取的cookie为跨域请求接口所在域的cookie，而非当前页。如果想实现当前页cookie的写入，可参考下文：七、nginx反向代理中设置proxy_cookie_domain 和 八、NodeJs中间件代理中cookieDomainRewrite参数的设置。</p><p>目前，所有浏览器都支持该功能(IE8+：IE8/9需要使用XDomainRequest对象来支持CORS）)，CORS也已经成为主流的跨域解决方案。</p><h3 id="前端设置">前端设置</h3><ul><li><p>原生ajax</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 前端设置是否带cookie</span></span><br><span class="line">xhr.withCredentials = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><p>示例代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest(); <span class="comment">// IE8/9需用window.XDomainRequest兼容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 前端设置是否带cookie</span></span><br><span class="line">xhr.withCredentials = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">xhr.open(<span class="string">'post'</span>, <span class="string">'http://www.domain2.com:8080/login'</span>, <span class="literal">true</span>);</span><br><span class="line">xhr.setRequestHeader(<span class="string">'Content-Type'</span>, <span class="string">'application/x-www-form-urlencoded'</span>);</span><br><span class="line">xhr.send(<span class="string">'user=admin'</span>);</span><br><span class="line"></span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>) &#123;</span><br><span class="line">        alert(xhr.responseText);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>jQuery ajax</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    ...</span><br><span class="line">   xhrFields: &#123;</span><br><span class="line">       withCredentials: <span class="literal">true</span>    <span class="comment">// 前端设置是否带cookie</span></span><br><span class="line">   &#125;,</span><br><span class="line">   crossDomain: <span class="literal">true</span>,   <span class="comment">// 会让请求头中包含跨域的额外信息，但不会含cookie</span></span><br><span class="line">    ...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>vue框架</p><ul><li><p>axios设置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axios.defaults.withCredentials = <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>vue-resource设置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.http.options.credentials = <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="服务端设置：">服务端设置：</h3><p>若后端设置成功，前端浏览器控制台则不会出现跨域报错信息，反之，说明没设成功。</p><ul><li><p>Java后台：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 导入包：import javax.servlet.http.HttpServletResponse;</span></span><br><span class="line"><span class="comment"> * 接口参数中定义：HttpServletResponse response</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 允许跨域访问的域名：若有端口需写全（协议+域名+端口），若没有端口末尾不用加'/'</span></span><br><span class="line">response.setHeader(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">"http://www.domain1.com"</span>); </span><br><span class="line"></span><br><span class="line"><span class="comment">// 允许前端带认证cookie：启用此项后，上面的域名不能为'*'，必须指定具体的域名，否则浏览器会提示</span></span><br><span class="line">response.setHeader(<span class="string">"Access-Control-Allow-Credentials"</span>, <span class="string">"true"</span>); </span><br><span class="line"></span><br><span class="line"><span class="comment">// 提示OPTIONS预检时，后端需要设置的两个常用自定义头</span></span><br><span class="line">response.setHeader(<span class="string">"Access-Control-Allow-Headers"</span>, <span class="string">"Content-Type,X-Requested-With"</span>);</span><br></pre></td></tr></table></figure></li><li><p>Nodejs后台示例：</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">var</span> server = http.createServer();</span><br><span class="line"><span class="keyword">var</span> qs = <span class="built_in">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line"></span><br><span class="line">server.on(<span class="string">'request'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> postData = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 数据块接收中</span></span><br><span class="line">    req.addListener(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>) </span>&#123;</span><br><span class="line">        postData += chunk;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 数据接收完毕</span></span><br><span class="line">    req.addListener(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        postData = qs.parse(postData);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 跨域后台设置</span></span><br><span class="line">        res.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">            <span class="string">'Access-Control-Allow-Credentials'</span>: <span class="string">'true'</span>,     <span class="comment">// 后端允许发送Cookie</span></span><br><span class="line">            <span class="string">'Access-Control-Allow-Origin'</span>: <span class="string">'http://www.domain1.com'</span>,    <span class="comment">// 允许访问的域（协议+域名+端口）</span></span><br><span class="line">            <span class="comment">/* </span></span><br><span class="line"><span class="comment">             * 此处设置的cookie还是domain2的而非domain1，因为后端也不能跨域写cookie(nginx反向代理可以实现)，</span></span><br><span class="line"><span class="comment">             * 但只要domain2中写入一次cookie认证，后面的跨域接口都能从domain2中获取cookie，从而实现所有的接口都能跨域访问</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="string">'Set-Cookie'</span>: <span class="string">'l=a123456;Path=/;Domain=www.domain2.com;HttpOnly'</span>  <span class="comment">// HttpOnly的作用是让js无法读取cookie</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        res.write(<span class="built_in">JSON</span>.stringify(postData));</span><br><span class="line">        res.end();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(<span class="string">'8080'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Server is running at port 8080...'</span>);</span><br></pre></td></tr></table></figure></li></ul><h2 id="nginx代理跨域">nginx代理跨域</h2><h3 id="nginx配置解决iconfont跨域">nginx配置解决iconfont跨域</h3><p>浏览器跨域访问js、css、img等常规静态资源被同源策略许可，但iconfont字体文件(eot|otf|ttf|woff|svg)例外，此时可在nginx的静态资源服务器中加入以下配置。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  add_header Access-Control-Allow-Origin *;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="nginx反向代理接口跨域">nginx反向代理接口跨域</h3><p>跨域原理： 同源策略是浏览器的安全策略，不是HTTP协议的一部分。服务器端调用HTTP接口只是使用HTTP协议，不会执行JS脚本，不需要同源策略，也就不存在跨越问题。</p><p>实现思路：通过nginx配置一个代理服务器（域名与domain1相同，端口不同）做跳板机，反向代理访问domain2接口，并且可以顺便修改cookie中domain信息，方便当前域cookie写入，实现跨域登录。</p><p>nginx具体配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#proxy服务器</span><br><span class="line">server &#123;</span><br><span class="line">    listen       <span class="number">81</span>;</span><br><span class="line">    server_name  www.domain1.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass   http:<span class="comment">//www.domain2.com:8080;  #反向代理</span></span><br><span class="line">        proxy_cookie_domain www.domain2.com www.domain1.com; #修改cookie里域名</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line"></span><br><span class="line">        # 当用webpack-dev-server等中间件代理接口访问nignx时，此时无浏览器参与，故没有同源限制，下面的跨域配置可不启用</span><br><span class="line">        add_header Access-Control-Allow-Origin http:<span class="comment">//www.domain1.com;  #当前端只跨域不带cookie时，可为*</span></span><br><span class="line">        add_header Access-Control-Allow-Credentials <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>前端代码示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 前端开关：浏览器是否读写cookie</span></span><br><span class="line">xhr.withCredentials = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问nginx中的代理服务器</span></span><br><span class="line">xhr.open(<span class="string">'get'</span>, <span class="string">'http://www.domain1.com:81/?user=admin'</span>, <span class="literal">true</span>);</span><br><span class="line">xhr.send();</span><br></pre></td></tr></table></figure></li><li><p>Nodejs后台示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">var</span> server = http.createServer();</span><br><span class="line"><span class="keyword">var</span> qs = <span class="built_in">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line"></span><br><span class="line">server.on(<span class="string">'request'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> params = qs.parse(req.url.substring(<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向前台写cookie</span></span><br><span class="line">    res.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">        <span class="string">'Set-Cookie'</span>: <span class="string">'l=a123456;Path=/;Domain=www.domain2.com;HttpOnly'</span>   <span class="comment">// HttpOnly:脚本无法读取</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    res.write(<span class="built_in">JSON</span>.stringify(params));</span><br><span class="line">    res.end();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(<span class="string">'8080'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Server is running at port 8080...'</span>);</span><br></pre></td></tr></table></figure></li></ul><h2 id="Nodejs中间件代理跨域">Nodejs中间件代理跨域</h2><p>node中间件实现跨域代理，原理大致与nginx相同，都是通过启一个代理服务器，实现数据的转发，也可以通过设置cookieDomainRewrite参数修改响应头中cookie中域名，实现当前域的cookie写入，方便接口登录认证。</p><h3 id="非vue框架的跨域（2次跨域）">非vue框架的跨域（2次跨域）</h3><p>利用node + express + http-proxy-middleware搭建一个proxy服务器。</p><ul><li><p>前端代码示例：</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 前端开关：浏览器是否读写cookie</span></span><br><span class="line">xhr.withCredentials = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问http-proxy-middleware代理服务器</span></span><br><span class="line">xhr.open(<span class="string">'get'</span>, <span class="string">'http://www.domain1.com:3000/login?user=admin'</span>, <span class="literal">true</span>);</span><br><span class="line">xhr.send();</span><br></pre></td></tr></table></figure></li><li><p>中间件服务器：</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> proxy = <span class="built_in">require</span>(<span class="string">'http-proxy-middleware'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/'</span>, proxy(&#123;</span><br><span class="line">    <span class="comment">// 代理跨域目标接口</span></span><br><span class="line">    target: <span class="string">'http://www.domain2.com:8080'</span>,</span><br><span class="line">    changeOrigin: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改响应头信息，实现跨域并允许带cookie</span></span><br><span class="line">    onProxyRes: <span class="function"><span class="keyword">function</span>(<span class="params">proxyRes, req, res</span>) </span>&#123;</span><br><span class="line">        res.header(<span class="string">'Access-Control-Allow-Origin'</span>, <span class="string">'http://www.domain1.com'</span>);</span><br><span class="line">        res.header(<span class="string">'Access-Control-Allow-Credentials'</span>, <span class="string">'true'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改响应信息中的cookie域名</span></span><br><span class="line">    cookieDomainRewrite: <span class="string">'www.domain1.com'</span>  <span class="comment">// 可以为false，表示不修改</span></span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Proxy server is listen at port 3000...'</span>);</span><br></pre></td></tr></table></figure></li><li><p>Nodejs后台同（六：nginx）</p></li></ul><h3 id="vue框架的跨域（1次跨域）">vue框架的跨域（1次跨域）</h3><p>利用node + webpack + webpack-dev-server代理接口跨域。在开发环境下，由于vue渲染服务和接口代理服务都是webpack-dev-server同一个，所以页面与代理接口之间不再跨域，无须设置headers跨域信息了。</p><p>webpack.config.js部分配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: &#123;&#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;&#125;,</span><br><span class="line">    ...</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        historyApiFallback: <span class="literal">true</span>,</span><br><span class="line">        proxy: [&#123;</span><br><span class="line">            context: <span class="string">'/login'</span>,</span><br><span class="line">            target: <span class="string">'http://www.domain2.com:8080'</span>,  <span class="comment">// 代理跨域目标接口</span></span><br><span class="line">            changeOrigin: <span class="literal">true</span>,</span><br><span class="line">            secure: <span class="literal">false</span>,  <span class="comment">// 当代理某些https服务报错时用</span></span><br><span class="line">            cookieDomainRewrite: <span class="string">'www.domain1.com'</span>  <span class="comment">// 可以为false，表示不修改</span></span><br><span class="line">        &#125;],</span><br><span class="line">        noInfo: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="WebSocket协议跨域">WebSocket协议跨域</h2><p>WebSocket protocol是HTML5一种新的协议。它实现了浏览器与服务器全双工通信，同时允许跨域通讯，是server push技术的一种很好的实现。<br>原生WebSocket API使用起来不太方便，<a href="http://xn--Socket-hz8ig3bo82im51b.io" target="_blank" rel="noopener">我们使用Socket.io</a>，它很好地封装了webSocket接口，提供了更简单、灵活的接口，也对不支持webSocket的浏览器提供了向下兼容。</p><ul><li><p>前端代码：</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>user input：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/socket.io/2.2.0/socket.io.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> socket = io(<span class="string">'http://www.domain2.com:8080'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="comment">// 连接成功处理</span></span></span><br><span class="line"><span class="actionscript">socket.on(<span class="string">'connect'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 监听服务端消息</span></span></span><br><span class="line"><span class="actionscript">    socket.on(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span><span class="params">(msg)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'data from server: ---&gt; '</span> + msg); </span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 监听服务端关闭</span></span></span><br><span class="line"><span class="actionscript">    socket.on(<span class="string">'disconnect'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123; </span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'Server socket has closed.'</span>); </span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementsByTagName(<span class="string">'input'</span>)[<span class="number">0</span>].onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">    socket.send(<span class="keyword">this</span>.value);</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Nodejs socket后台：</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">var</span> socket = <span class="built_in">require</span>(<span class="string">'socket.io'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启http服务</span></span><br><span class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">        <span class="string">'Content-type'</span>: <span class="string">'text/html'</span></span><br><span class="line">    &#125;);</span><br><span class="line">    res.end();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(<span class="string">'8080'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Server is running at port 8080...'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听socket连接</span></span><br><span class="line">socket.listen(server).on(<span class="string">'connection'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">client</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 接收信息</span></span><br><span class="line">    client.on(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>) </span>&#123;</span><br><span class="line">        client.send(<span class="string">'hello：'</span> + msg);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'data from client: ---&gt; '</span> + msg);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 断开处理</span></span><br><span class="line">    client.on(<span class="string">'disconnect'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Client socket has closed.'</span>); </span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 小问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cors解决跨域问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cors解决跨域问题</title>
      <link href="/posts/20072501.html/"/>
      <url>/posts/20072501.html/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>问题</h1><p>问题：axios请求，出现两次request，其中一次<strong>Request Method: OPTIONS</strong></p><img align="left" src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/25/image-20200725023024105.png"/><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/25/image-20200725024504498.png" alt="image-20200725024504498"></p><ul><li><img align="left" src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/25/image-20200725023155992.png"/></li><li><img  align="left" src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/25/image-20200725023840504.png"/></li></ul><p>原因：跨域原因</p><h1>跨域问题</h1><h2 id="什么是跨域">什么是跨域</h2><p>跨域是指跨域名访问，一下情况都属于跨域：</p><table><thead><tr><th>跨域原因说明</th><th>示例</th></tr></thead><tbody><tr><td>域名不同</td><td><code>www.jd.com</code> 与 <code>www.taobao.com</code></td></tr><tr><td>域名相同，端口不同</td><td><code>www.jd.com:8080</code> 与 <code>www.jd.com:8081</code></td></tr><tr><td>二级域名不同</td><td><code>item.jd.com</code> 与 <code>miaosha.jd.com</code></td></tr></tbody></table><p>如果<strong>域名和端口都相同，但是请求路径不同</strong>，不属于跨域，如：</p><p><code>www.jd.com/item</code></p><p><code>www.jd.com/goods</code></p><p>而我的问题是因为从<code>http://www.leyou.com</code>去访问<code>http://api.leyou.com/api/search/page</code>，这属于二级域名不同，出现<strong>跨域</strong></p><h2 id="为什么会有跨域">为什么会有跨域</h2><p>跨域不一定有跨域问题。</p><p>因为<span style="color:red"><strong>跨域问题是浏览器对ajax的一种限制</strong></span>：<strong>一个页面发起的ajax请求，只能是于当前页相同域名的路径</strong>，这样可以有效阻止跨站攻击。</p><h2 id="解决跨域问题的方案">解决跨域问题的方案</h2><p>目前比较常用的跨域解决方案有3种：</p><ul><li><p>Jsonp</p><p>最早的解决方案，利用script标签可以跨域的原理实现。</p><p>限制：</p><ul><li>需要服务的支持</li><li>只能发起GET请求</li></ul></li><li><p>nginx反向代理</p><p>思路是：利用nginx反向代理把跨域改为不跨域，支持各种请求方式</p><p>缺点：需要在nginx进行额外配置，语义不清晰</p></li><li><p>CORS</p><p><strong>规范化的跨域请求解决方案，安全可靠。</strong></p><p>优势：</p><ul><li>在服务端进行控制是否允许跨域，可自定义规则</li><li>支持各种请求方式</li></ul><p>缺点：</p><ul><li>会产生额外的请求</li></ul></li></ul><p>我们这里会采用cors的跨域方案。</p><h2 id="cors解决跨域">cors解决跨域</h2><h3 id="什么是cors">什么是cors</h3><p>CORS是一个W3C标准，全称是&quot;跨域资源共享&quot;（Cross-origin resource sharing）。</p><p>它允许浏览器向跨源服务器，发出<a href="http://www.ruanyifeng.com/blog/2012/09/xmlhttprequest_level_2.html" target="_blank" rel="noopener"><code>XMLHttpRequest</code></a>请求，从而克服了AJAX只能<a href="http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html" target="_blank" rel="noopener">同源</a>使用的限制。</p><p>CORS需要浏览器和服务器同时支持。目前，所有浏览器都支持该功能，IE浏览器不能低于IE10。</p><ul><li><p>浏览器端：</p><p>目前，所有浏览器都支持该功能（IE10以下不行）。整个CORS通信过程，都是浏览器自动完成，不需要用户参与。</p></li><li><p>服务端：</p><p>CORS通信与AJAX没有任何差别，因此你不需要改变以前的业务逻辑。只不过，浏览器会在请求中携带一些头信息，我们需要以此判断是否运行其跨域，然后在响应头中加入一些信息即可。这一般通过过滤器完成即可。</p></li></ul><h3 id="原理">原理</h3><p>浏览器会将ajax请求分为两类，其处理方案略有差异：简单请求、特殊请求。</p><h5 id="简单请求">简单请求</h5><p>只要<strong>同时</strong>满足以下两大条件，就属于简单请求。：</p><p>（1) 请求方法是以下三种方法之一：</p><ul><li>HEAD</li><li>GET</li><li>POST</li></ul><p>（2）HTTP的头信息不超出以下几种字段：</p><ul><li>Accept</li><li>Accept-Language</li><li>Content-Language</li><li>Last-Event-ID</li><li>Content-Type：只限于三个值<code>application/x-www-form-urlencoded</code>、<code>multipart/form-data</code>、<code>text/plain</code></li></ul><p>当浏览器发现发启的ajax请求是简单请求时，会在请求头中携带一个字段：<code>Origin</code>.</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/26/20200726020701.png" alt="1526019242125"></p><p>Origin中会指出当前请求属于哪个域（协议+域名+端口）。服务会根据这个值决定是否允许其跨域。</p><p>如果服务器允许跨域，需要在返回的响应头中携带下面信息：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Access-Control-Allow-Origin</span>: http://manage.leyou.com</span><br><span class="line"><span class="attribute">Access-Control-Allow-Credentials</span>: true</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html; charset=utf-8</span><br></pre></td></tr></table></figure><ul><li>Access-Control-Allow-Origin：可接受的域，是一个具体域名或者*，代表任意</li><li>Access-Control-Allow-Credentials：是否允许携带cookie，默认情况下，cors不会携带cookie，除非这个值是true</li></ul><p>注意：</p><p>如果跨域请求要想操作cookie，需要满足3个条件：</p><ul><li>服务的响应头中需要携带Access-Control-Allow-Credentials并且为true。</li><li>浏览器发起ajax需要指定withCredentials 为true</li><li>响应头中的Access-Control-Allow-Origin一定不能为*，必须是特定的域名</li></ul><h5 id="特殊请求">特殊请求</h5><p>不符合简单请求的条件，会被浏览器判定为特殊请求,，例如请求方式为PUT。</p><blockquote><p>预检请求</p></blockquote><p>特殊请求会在正式通信之前，增加一次HTTP查询请求，称为&quot;预检&quot;请求（preflight）。</p><p>浏览器先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些HTTP动词和头信息字段。只有得到肯定答复，浏览器才会发出正式的<code>XMLHttpRequest</code>请求，否则就报错。</p><p>一个“预检”请求的样板：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">OPTIONS</span> <span class="string">/cors</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Origin</span>: http://manage.leyou.com</span><br><span class="line"><span class="attribute">Access-Control-Request-Method</span>: PUT</span><br><span class="line"><span class="attribute">Access-Control-Request-Headers</span>: X-Custom-Header</span><br><span class="line"><span class="attribute">Host</span>: api.leyou.com</span><br><span class="line"><span class="attribute">Accept-Language</span>: en-US</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0...</span><br></pre></td></tr></table></figure><p>与简单请求相比，除了Origin以外，多了两个头：</p><ul><li>Access-Control-Request-Method：接下来会用到的请求方式，比如PUT</li><li>Access-Control-Request-Headers：会额外用到的头信息</li></ul><blockquote><p>预检请求的响应</p></blockquote><p>服务的收到预检请求，如果许可跨域，会发出响应：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Date</span>: Mon, 01 Dec 2008 01:15:39 GMT</span><br><span class="line"><span class="attribute">Server</span>: Apache/2.0.61 (Unix)</span><br><span class="line"><span class="attribute">Access-Control-Allow-Origin</span>: http://manage.leyou.com</span><br><span class="line"><span class="attribute">Access-Control-Allow-Credentials</span>: true</span><br><span class="line"><span class="attribute">Access-Control-Allow-Methods</span>: GET, POST, PUT</span><br><span class="line"><span class="attribute">Access-Control-Allow-Headers</span>: X-Custom-Header</span><br><span class="line"><span class="attribute">Access-Control-Max-Age</span>: 1728000</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html; charset=utf-8</span><br><span class="line"><span class="attribute">Content-Encoding</span>: gzip</span><br><span class="line"><span class="attribute">Content-Length</span>: 0</span><br><span class="line"><span class="attribute">Keep-Alive</span>: timeout=2, max=100</span><br><span class="line"><span class="attribute">Connection</span>: Keep-Alive</span><br><span class="line"><span class="attribute">Content-Type</span>: text/plain</span><br></pre></td></tr></table></figure><p>除了<code>Access-Control-Allow-Origin</code>和<code>Access-Control-Allow-Credentials</code>以外，这里又额外多出3个头：</p><ul><li>Access-Control-Allow-Methods：允许访问的方式</li><li>Access-Control-Allow-Headers：允许携带的头</li><li>Access-Control-Max-Age：本次许可的有效时长，单位是秒，<strong>过期之前的ajax请求就无需再次进行预检了</strong></li></ul><p>如果浏览器得到上述响应，则认定为可以跨域，后续就跟简单请求的处理是一样的了。</p><h3 id="实现">实现</h3><p>虽然原理比较复杂，但是前面说过：</p><ul><li>浏览器端都浏由览器自动完成，我们无需操心</li><li>服务端可以通过拦截器统一实现，不必每次都去进行跨域判定的编写。</li></ul><p>事实上，SpringMVC已经帮我们写好了CORS的跨域过滤器：CorsFilter ,内部已经实现了刚才所讲的判定逻辑，我们直接用就好了。</p><p>在<code>ly-api-gateway</code>中编写一个配置类，并且注册CorsFilter：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.CorsFilter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalCorsConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CorsFilter <span class="title">corsFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.添加CORS配置信息</span></span><br><span class="line">        CorsConfiguration config = <span class="keyword">new</span> CorsConfiguration();</span><br><span class="line">        <span class="comment">//1) 允许的域,不要写*，否则cookie就无法使用了</span></span><br><span class="line">        config.addAllowedOrigin(<span class="string">"http://manage.leyou.com"</span>);</span><br><span class="line">        config.addAllowedOrigin(<span class="string">"http://www.leyou.com"</span>);</span><br><span class="line">        <span class="comment">//2) 是否发送Cookie信息</span></span><br><span class="line">        config.setAllowCredentials(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//3) 允许的请求方式</span></span><br><span class="line">        config.addAllowedMethod(<span class="string">"OPTIONS"</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">"HEAD"</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">"GET"</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">"PUT"</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">"POST"</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">"DELETE"</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">"PATCH"</span>);</span><br><span class="line">        <span class="comment">// 4）允许的头信息</span></span><br><span class="line">        config.addAllowedHeader(<span class="string">"*"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.添加映射路径，我们拦截一切请求</span></span><br><span class="line">        UrlBasedCorsConfigurationSource configSource = <span class="keyword">new</span> UrlBasedCorsConfigurationSource();</span><br><span class="line">        configSource.registerCorsConfiguration(<span class="string">"/**"</span>, config);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.返回新的CorsFilter.</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> CorsFilter(configSource);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 小问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cors解决跨域问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Elasticsearch &amp;&amp; Kibana</title>
      <link href="/posts/20070801.html/"/>
      <url>/posts/20070801.html/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>简介</h1><h2 id="Elasticsearch">Elasticsearch</h2><p><a href="https://www.elastic.co/cn/elasticsearch" target="_blank" rel="noopener">Elasticsearch官网</a></p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200708183609.jpg" style="zoom:80%;" /><p>如上所述，Elasticsearch具备以下特点：</p><ul><li>分布式，无需人工搭建集群（solr就需要人为配置，使用Zookeeper作为注册中心）</li><li>Restful风格，一切API都遵循Rest原则，容易上手</li><li>近实时搜索，数据更新在Elasticsearch中几乎是完全同步的。</li></ul><h2 id="Kibana">Kibana</h2><p><a href="https://www.elastic.co/cn/kibana" target="_blank" rel="noopener">Kibana官网</a></p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200708183904.png" style="zoom:80%;" /><p>Kibana是一个基于Node.js的Elasticsearch索引库数据统计工具，可以利用Elasticsearch的聚合功能，生成各种图表，如柱形图，线状图，饼图等。</p><p>而且还提供了操作Elasticsearch索引数据的控制台，并且提供了一定的API提示，非常有利于我们学习Elasticsearch的语法。</p><h1>操作索引</h1><h2 id="基本概念">基本概念</h2><p>Elasticsearch也是基于Lucene的全文检索库，本质也是存储数据，很多概念与MySQL类似。</p><p>对比关系</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">索引库（indices）--------------------------- 数据库（Database）</span><br><span class="line">类型（type）------------------------------- 数据表（Table）</span><br><span class="line">文档（Document）-------------------------- 行（Row）</span><br><span class="line">字段（Field）---------------------------- 列（Columns）</span><br></pre></td></tr></table></figure><p>详细说明：</p><table><thead><tr><th style="text-align:center">概念</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">索引库（indices）</td><td style="text-align:center">indices是index的复数，代表许多的索引</td></tr><tr><td style="text-align:center">类型（type）</td><td style="text-align:center">类型是模拟MySQL的table概念，一个索引库下可以有多个不同类型的索引。在Elasticsearch7版本去除了type概念</td></tr><tr><td style="text-align:center">文档（document）</td><td style="text-align:center">存入索引库原始得数据，比如每一条商品信息，就是一个文档</td></tr><tr><td style="text-align:center">字段（Field）</td><td style="text-align:center">文档中的属性，比如商品名，商品价格</td></tr><tr><td style="text-align:center">映射配置（mappings）</td><td style="text-align:center">字段的数据类型、属性、是否索引、是否存储等特性</td></tr></tbody></table><p>是不是与Lucene和Solr的概念相似</p><p>另外，在SolrCloud中，有一些集群相关概念，在Elasticsearch也有类似的：</p><ul><li>索引集（indices，index的复数）：逻辑上的完整索引</li><li>分片（shard）：数据拆分后的各个部分</li><li>副本（replica）：每个分片的复制，相当于备份</li></ul><p><strong>注意：</strong></p><p>​Elasticsearch本身就是分布式的，即使只有一个节点，Elasticsearch默认对数据进行分片和副本操作，当向集群添加新数据时，数据也会在新加入的节点中进行平衡</p><h2 id="创建索引">创建索引</h2><blockquote><p>语法</p></blockquote><p>ELasticsearch采用Rest风格API，因此其API就是一次http请求</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 请求方式：PUT</span><br><span class="line"># 请求路径：/索引库名</span><br><span class="line"># 请求参数：json格式</span><br><span class="line">PUT /index_name</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">"settings"</span>: &#123;</span><br><span class="line"><span class="attr">"number_of_shards"</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">"number_of_replicas"</span>: <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>settings:索引库的设置<ul><li>number_of_shards：分片数量</li><li>number_of_replicas：副本数量</li></ul></li></ul><h3 id="使用Postman测试">使用Postman测试</h3><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200708213449.jpg" alt=""></p><p>可以看到创建索引成功</p><h3 id="使用Kibana创建">使用Kibana创建</h3><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200708214407.png" alt=""></p><p>相当于省去了elasticsearch的服务器地址，并且有语法提示</p><h2 id="查看索引设置">查看索引设置</h2><blockquote><p>查看索引信息使用GET请求，语法格式：<strong>GET /索引库名</strong></p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET /demo# 查询索引库名为demo的索引库</span><br><span class="line">GET *# 查询所有索引库</span><br></pre></td></tr></table></figure><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button data-href="#test1-1">GET /demo</button></li><li class="tab"><button data-href="#test1-2">GET *</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p>使用 GET /demo 查询<img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200708233852.png" alt=""></p><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p>使用 GET * 查询</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200708234104.png" alt=""></p><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="删除索引">删除索引</h2><blockquote><p>删除索引使用DELETE请求，语法格式：<strong>DELETE /索引库名</strong></p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE /demo</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200708234844.png" alt=""></p><p>再次查看demo，状态码为404，已经删除</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200708235035.png" alt=""></p><blockquote><p>也可以使用HEAD请求，查看索引是否存在，语法格式：<strong>HEAD  /索引库名</strong></p></blockquote><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200708235401.png" alt=""></p><h2 id="索引映射">索引映射</h2><p>索引已经创建好了，接下来要添加数据。数据存储在索引库中，需要指定一些相关属性，包括但不限于：</p><ul><li>字段的数据类型</li><li>是否要存储</li><li>是否要索引</li><li>是否分词</li><li>分析器种类</li></ul><p>只有配置清楚，Elasticsearch才会创建数据（不一定）</p><h3 id="创建映射字段">创建映射字段</h3><blockquote><p>创建映射字段使用的是PUT请求，语法格式：</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PUT /索引库名/_mapping/类型名称# Elasticsearch6之前使用</span><br><span class="line">PUT /索引库名/_mapping/# Elasticsearch7之后使用,7版本之后，去除了type</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">"properties"</span>:&#123;</span><br><span class="line"><span class="attr">"字段名"</span>:&#123;</span><br><span class="line"><span class="attr">"type"</span>: <span class="string">"类型"</span>,</span><br><span class="line"><span class="attr">"index"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="attr">"store"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="attr">"analyaer"</span>: <span class="string">"分词器"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>类型名称：type的概念，类似于MySQL中的数据表（table）</li><li>字段名：Field的概念，类似于MySQL中的行，属性名<ul><li>type：类型，可选值有text、long、short、date、integer、object等</li><li>index：是否索引，默认为true，可不写</li><li>store：是否存储，默认为false，可不写</li><li>analyer：分词器，这里使用的<code>ik_max_word</code>就是<code>ik分词器</code></li></ul></li></ul><p>示例</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200709001656.png" alt=""></p><h3 id="查看映射关系">查看映射关系</h3><blockquote><p>查看映射关系使用GET请求，语法格式：<strong>GET /索引库名/_mapping</strong></p></blockquote><p>示例：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_mapping</span><br></pre></td></tr></table></figure><p>响应</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200709003533.png" alt=""></p><h3 id="字段属性详解">字段属性详解</h3><ul><li><p>type</p><p>Elasticsearch中支持的数据类型非常丰富：</p><p>官方文档地址：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-types.html" target="_blank" rel="noopener">type官方文档地址</a></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200709010522.png" alt=""></p><ul><li>String类型，又分两种<ul><li>text：可分词，不可参与聚合</li><li>keyword：不可分词，数据会作为完整字段进行匹配，可以参与聚合</li></ul></li><li>Numeric：数值类型<ul><li>基本数据类型：long、integer、short、byte、double、float、half_float</li><li>浮点数的高精度类型：scaled_float<ul><li>需要指定一个精度因子，比如10或100，Elasticsearch会把真实值乘以这个因子后存储，取出时再还原</li></ul></li></ul></li><li>Date：日期类型<ul><li>Elasticsearch可以对日期格式化为字符串存储，但是建议我们存储为毫秒值，存储为long，节省空间</li></ul></li></ul></li><li><p>index</p><p>index影响字段的索引情况</p><p>官方文档地址：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-index.html" target="_blank" rel="noopener">index官方文档地址</a></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200709111041.png" alt=""></p><ul><li>true：字段会被索引，则可以用来进行搜索，默认值为true</li><li>false：字段不会被索引，不可以用来进行搜索</li></ul></li><li><p>store</p><p>是否将字段进行额外存储。</p><p>官方文档地址：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-store.html" target="_blank" rel="noopener">store官方文档地址</a></p><p>在Lucene和Solr中，如果一个字段的<code>store</code>设置为<code>false</code>，那么在文档列表中就不会有这个字段的值，搜索结果中也不会显示出来。</p><p>但在Elasticsearch中，即使字段的<code>store</code>设置为<code>false</code>，也可以搜索到结果。</p><p>因为Elasticsearch在创建文档索引时，会将文档中的原始数据备份，保存到一个叫<code>_source</code>的属性中。可以通过过滤<code>_source</code>来选择哪些要显示，哪些不显示。</p><p>如果<code>store</code>设置为<code>true</code>，就会在<code>_source</code>以外额外存储一份数据，会很多余，因此，一般都将<code>store</code>设置为<code>false</code>，其默认值也为<code>false</code></p></li><li><p>boost</p><p>官方文档地址：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-boost.html" target="_blank" rel="noopener">boost官方文档地址</a></p><p>激励因子，在查询时，可以使用<code>boost</code>参数自动增强各个字段（对相关性得分进行计算）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">PUT my_index</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"mappings"</span>: &#123;</span><br><span class="line">    <span class="string">"properties"</span>: &#123;</span><br><span class="line">      <span class="string">"title"</span>: &#123;</span><br><span class="line">        <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">        <span class="string">"boost"</span>: 2</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"content"</span>: &#123;</span><br><span class="line">        <span class="string">"type"</span>: <span class="string">"text"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>title</code>字段上的匹配的权重是<code>content</code>的2倍，默认<code>boost</code>值为1.0</p><div class="note warning icon"><p>boost仅应用于术语查询(前缀、范围和模糊查询不被增强)。</p></div></li></ul><h2 id="新增数据">新增数据</h2><h3 id="随机生成id">随机生成id</h3><blockquote><p>通过POST请求，可以向一个已经存在的索引库中添加数据，语法格式：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /索引库名/_doc</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"key"</span>: <span class="string">"value"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /demo1/_doc</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"title"</span>: <span class="string">"华为手机"</span>,</span><br><span class="line">  <span class="string">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">  <span class="string">"price"</span>: 4999.00</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200709134709.png" alt=""></p><p>查看数据：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200709135324.png" alt=""></p><p>其中：</p><ul><li><code>_source</code>：源文档信息，所有数据都在这里</li><li><code>_id</code>：这条文档的唯一标识，与文档自己的<code>id</code>字段没有任何关联</li></ul><h3 id="自定义id">自定义id</h3><blockquote><p>也可以在新增数据的时候自定义id，语法格式：</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /索引库名/_doc/id</span><br><span class="line">&#123;</span><br><span class="line"><span class="code">"key": "value"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /demo1/_doc/10011</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"title"</span>: <span class="string">"华为手机"</span>,</span><br><span class="line">  <span class="string">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">  <span class="string">"price"</span>: 4999.00</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200709135818.png" alt=""></p><div class="note danger icon"><p>图太多了，就不传图了，使用代码块来展示</p></div><p>查看数据：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET _search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line"><span class="string">"match_all"</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"_index"</span> : <span class="string">"demo1"</span>,</span><br><span class="line">    <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">    <span class="attr">"_id"</span> : <span class="string">"10010"</span>,</span><br><span class="line">    <span class="attr">"_score"</span> : <span class="number">0.18232156</span>,</span><br><span class="line"><span class="attr">"_source"</span> : &#123;</span><br><span class="line">        <span class="attr">"title"</span> : <span class="string">"华为手机"</span>,</span><br><span class="line">        <span class="attr">"images"</span> : <span class="string">"images/1.jpg"</span>,</span><br><span class="line">        <span class="attr">"price"</span> : <span class="number">4999.0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，<code>_id</code>属性值为自定义id</p><h3 id="智能判断">智能判断</h3><p>在Solr中，新增数据只能使用提前配置好的映射属性的字段，否则就会报错。</p><p>但在Elasticsearch中，并没有这样的规则。Elasticsearch非常智能，不需要给索引库设置任何mapping映射，它可以根据输入的数据内容来判断数据类型，动态添加数据映射。</p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">POST /demo1/_doc/10010</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"title"</span>: <span class="string">"华为手机"</span>,</span><br><span class="line">  <span class="string">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">  <span class="string">"price"</span>: 4999.00,</span><br><span class="line">  <span class="string">"stock"</span>: 200,</span><br><span class="line">  <span class="string">"saleable"</span>:<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>额外添加了<code>stock</code>和<code>saleable</code>两个字段。</p><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"_index"</span> : <span class="string">"demo1"</span>,</span><br><span class="line">    <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">    <span class="attr">"_id"</span> : <span class="string">"10010"</span>,</span><br><span class="line">    <span class="attr">"_score"</span> : <span class="number">0.2876821</span>,</span><br><span class="line">    <span class="attr">"_source"</span> : &#123;</span><br><span class="line">        <span class="attr">"title"</span> : <span class="string">"华为手机"</span>,</span><br><span class="line">        <span class="attr">"images"</span> : <span class="string">"images/1.jpg"</span>,</span><br><span class="line">        <span class="attr">"price"</span> : <span class="number">4999.0</span>,</span><br><span class="line">        <span class="attr">"stock"</span> : <span class="number">200</span>,</span><br><span class="line">        <span class="attr">"saleable"</span> : <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再次查看索引库映射关系</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询语句</span></span><br><span class="line">GET /demo1/_mapping</span><br><span class="line"><span class="comment"># 结果</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"demo1"</span> : &#123;</span><br><span class="line">    <span class="string">"mappings"</span> : &#123;</span><br><span class="line">      <span class="string">"properties"</span> : &#123;</span><br><span class="line">        <span class="string">"images"</span> : &#123;</span><br><span class="line">          <span class="string">"type"</span> : <span class="string">"keyword"</span>,</span><br><span class="line">          <span class="string">"index"</span> : <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"price"</span> : &#123;</span><br><span class="line">          <span class="string">"type"</span> : <span class="string">"float"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"saleable"</span> : &#123;</span><br><span class="line">          <span class="string">"type"</span> : <span class="string">"boolean"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"stock"</span> : &#123;</span><br><span class="line">          <span class="string">"type"</span> : <span class="string">"long"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"title"</span> : &#123;</span><br><span class="line">          <span class="string">"type"</span> : <span class="string">"text"</span>,</span><br><span class="line">          <span class="string">"analyzer"</span> : <span class="string">"ik_max_word"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>stock</code>和<code>saleable</code>都被成功映射了。</p><h2 id="修改数据">修改数据</h2><blockquote><p>修改数据使用 PUT请求，语法格式：</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PUT /索引库名/_doc/id值</span><br><span class="line">&#123;</span><br><span class="line"><span class="code">"key": "value"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>如果id对应的文档存在，则修改</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200709150601.png" alt=""></p></li><li><p>如果id对应的文档不存在，则新增</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200709150637.png" alt=""></p></li></ul><h2 id="删除数据">删除数据</h2><blockquote><p>删除数据使用 DELETE请求，语法格式：</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE /索引库名/_doc/id值</span><br></pre></td></tr></table></figure><p>示例：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200710093800.png" alt=""></p><h1>查询</h1><h2 id="基本查询">基本查询</h2><blockquote><p>基本语法</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /索引库名/_search</span><br><span class="line">&#123;</span><br><span class="line"><span class="code">"query":&#123;</span></span><br><span class="line"><span class="code">"查询类型": &#123;</span></span><br><span class="line"><span class="code">"查询条件": "查询条件值"</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>query</code>代表一个查询对象，里面可以有不同的查询属性</p><ul><li>查询类型：<code>match</code>、<code>match_all</code>、<code>term</code>、<code>range</code>等等</li><li>查询条件：查询条件会根据类型的不同，写法也有所不同。</li></ul><h3 id="查询所有-match-all">查询所有 match_all</h3><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"query"</span>: &#123;</span><br><span class="line"><span class="string">"match_all"</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>query</code>：代表查询对象</li><li><code>match_all</code>：代表查询所有</li></ul><p>结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span> : <span class="number">3</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">3</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">3</span>,</span><br><span class="line">    <span class="attr">"skipped"</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : &#123;</span><br><span class="line">      <span class="attr">"value"</span> : <span class="number">4</span>,</span><br><span class="line">      <span class="attr">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"max_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">    <span class="attr">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"demo1"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"10010"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"title"</span> : <span class="string">"华为手机"</span>,</span><br><span class="line">          <span class="attr">"images"</span> : <span class="string">"images/1.jpg"</span>,</span><br><span class="line">          <span class="attr">"price"</span> : <span class="number">4999.0</span>,</span><br><span class="line">          <span class="attr">"stock"</span> : <span class="number">200</span>,</span><br><span class="line">          <span class="attr">"saleable"</span> : <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"demo1"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"10012"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"title"</span> : <span class="string">"华为手机"</span>,</span><br><span class="line">          <span class="attr">"images"</span> : <span class="string">"images/1.jpg"</span>,</span><br><span class="line">          <span class="attr">"price"</span> : <span class="number">4999.0</span>,</span><br><span class="line">          <span class="attr">"stock"</span> : <span class="number">200</span>,</span><br><span class="line">          <span class="attr">"saleable"</span> : <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"demo1"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"llAgMnMBTqiphn18iYVc"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"title"</span> : <span class="string">"华为手机"</span>,</span><br><span class="line">          <span class="attr">"images"</span> : <span class="string">"images/1.jpg"</span>,</span><br><span class="line">          <span class="attr">"price"</span> : <span class="number">4999.0</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"demo1"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"10011"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"title"</span> : <span class="string">"华为手机"</span>,</span><br><span class="line">          <span class="attr">"images"</span> : <span class="string">"images/1.jpg"</span>,</span><br><span class="line">          <span class="attr">"price"</span> : <span class="number">4999.0</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>took</code>：查询花费时间</li><li><code>time_out</code>：是否超时</li><li><code>_shards</code>：分片信息</li><li><code>hits</code>：搜索结果总览对象<ul><li><code>total</code>：搜索到的总条数</li><li><code>max_score</code>：所有搜索到的文档中得分的最高分</li><li><code>hits</code>：搜索结果的文档对象数组，每个元素是一条搜索到的文档信息<ul><li><code>_index</code>：索引库</li><li><code>_type</code>：文档类型</li><li><code>_id</code>：文档id</li><li><code>_score</code>：文档得分</li><li><code>_source</code>：文档的源数据</li></ul></li></ul></li></ul><h3 id="匹配查询-match">匹配查询 match</h3><p>查看当前文档数据</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200713012105.png" alt=""></p><ul><li>or 关系</li></ul><blockquote><p>使用<code>match</code>类型查询，会把查询条件进行分词，然后进行查询，多个词条之间是<strong>or关系</strong></p></blockquote><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match"</span>: &#123;</span><br><span class="line">      <span class="string">"title"</span>: <span class="string">"小米手机"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10001"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">1.3862942</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"华为手机"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">5999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">1500</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span> : <span class="string">"10005"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">0.87546873</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"小米电饭煲"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">399.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">3000</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10006"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">0.87546873</span>,</span><br><span class="line">  <span class="attr">"_source"</span> : &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"小米电视"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10004"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">0.5753642</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"小米手机"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">3999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上面的案例中，把查询条件“小米手机”分词成 小米 和 手机 两个词，与这两个词相关的文档都会被查到，多个词之间是<strong>or关系</strong></p><ul><li>and 关系</li></ul><blockquote><p>某些情况下，需要更精确的查找，希望这个关系变成<strong>and关系</strong></p></blockquote><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match"</span>: &#123;</span><br><span class="line">      <span class="string">"title"</span>: &#123;</span><br><span class="line">        <span class="string">"query"</span>: <span class="string">"小米手机"</span>,</span><br><span class="line">        <span class="string">"operator"</span>: <span class="string">"and"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10004"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">0.5753642</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"小米手机"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">3999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只有同时包含 <code>小米</code>和<code>手机</code>两个词的文档才能被查询到</p><ul><li>or 和 and 之间</li></ul><p>在 <code>or</code> 与 <code>and</code> 间二者选择一个，有些片面。如果用户给出的查询条件分词后，有5个词，想查找只包含其中4个词的文档，如何处理？将<code>operator</code>设置为and，只会将文档排除。</p><p>有时候这正是我们所期望的，在全文检索中，既想包含哪些可能相关的文档，同时又想排除哪些不太相关的文档，换句话说，想要查询某些中间结果。</p><p><code>match</code>查询支持<code>minimum_should_match</code>最小匹配参数，这样可以指定必须匹配的词项数用来表示一个文档是否相关，可以将其设为某个具体数字，更常用的方法时设置为百分数，因为无法控制用户搜索时给出的搜索条件的词数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match"</span>: &#123;</span><br><span class="line">      <span class="string">"title"</span>: &#123;</span><br><span class="line">        <span class="string">"query"</span>: <span class="string">"小米手机电视盒子"</span>,</span><br><span class="line">        <span class="string">"minimum_should_match"</span>: <span class="string">"40%"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10006"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">0.87546873</span>,</span><br><span class="line">  <span class="attr">"_source"</span> : &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"小米电视"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10004"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">0.5753642</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"小米手机"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">3999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本例中，搜索语句可以分6个词，如果使用and关系，需要同时满足6个词才能被搜索到，这里使用了最小匹配参数：40%，也就是只要匹配到总分词数的40%即可，6*40% 约等于 2，只要包含2个分词即可</p><h3 id="多字段查询-multi-match">多字段查询 multi_match</h3><blockquote><p><code>multi_match</code> 与 <code>match</code>类似，不同的是它可以在多个字段中查询</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"multi_match"</span>: &#123;</span><br><span class="line">      <span class="string">"query"</span>: <span class="string">"华为"</span>,</span><br><span class="line">      <span class="string">"fields"</span>: [<span class="string">"title"</span>,<span class="string">"subtitle"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本例中，会在<code>title</code>和<code>subtitle</code>中查询<code>华为</code>这个词</p><h3 id="词条匹配-term">词条匹配 term</h3><blockquote><p><code>term</code>被用于精确值匹配，这些精确值可能是数字、时间、布尔或者那些<strong>没有分词</strong>的字符串</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"term"</span>: &#123;</span><br><span class="line">      <span class="string">"price"</span>: &#123;</span><br><span class="line">        <span class="string">"value"</span>: <span class="string">"1999.00"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10003"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">1.0</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"华为电视"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">2500</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10006"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">1.0</span>,</span><br><span class="line">  <span class="attr">"_source"</span> : &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"小米电视"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多词条精确匹配-terms">多词条精确匹配 terms</h3><blockquote><p><code>terms</code>和<code>term</code>查询一样，但<code>terms</code>允许指定多值匹配，如果这个字段包含了指定值中的任意一个值，那么这个文档就满足条件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"terms"</span>: &#123;</span><br><span class="line">      <span class="string">"price"</span>: [</span><br><span class="line">        1999.00,</span><br><span class="line">        2999.00,</span><br><span class="line">        3999.00</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10003"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">1.0</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"华为电视"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">2500</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10006"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">0.87546873</span>,</span><br><span class="line">  <span class="attr">"_source"</span> : &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"小米电视"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10004"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">0.5753642</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"小米手机"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">3999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结果过滤">结果过滤</h2><p>默认情况下，Elasticsearch在搜索的结果中，会把文档中保存在<code>_source</code>的所有字段都返回。</p><p>如果想要获取其中的部分字段，可以添加<code>_source</code>的过滤</p><h3 id="直接指定字段">直接指定字段</h3><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_source"</span>: [<span class="string">"title"</span>,<span class="string">"price"</span>],</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"term"</span>: &#123;</span><br><span class="line">      <span class="string">"price"</span>: 1999.00</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：<code>_source</code>中只有<code>title</code>和<code>price</code>两个字段</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10003"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">1.0</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"华为电视"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10006"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">0.87546873</span>,</span><br><span class="line">  <span class="attr">"_source"</span> : &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"小米电视"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指定includes和excludes">指定includes和excludes</h3><p>也可以通过：</p><ul><li>includes：用于指定将要显示的字段</li></ul><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_source"</span>: &#123;</span><br><span class="line">  <span class="string">"includes"</span>: [<span class="string">"title"</span>,<span class="string">"price"</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"term"</span>: &#123;</span><br><span class="line">      <span class="string">"price"</span>: 1999.00</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10003"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">1.0</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"华为电视"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10006"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">0.87546873</span>,</span><br><span class="line">  <span class="attr">"_source"</span> : &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"小米电视"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>excludes：用于指定不想显示的字段</li></ul><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_source"</span>: &#123;</span><br><span class="line">  <span class="string">"excludes"</span>: [<span class="string">"images"</span>,<span class="string">"saleable"</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"term"</span>: &#123;</span><br><span class="line">      <span class="string">"price"</span>: 1999.00</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10003"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">1.0</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"华为电视"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span> : <span class="number">2500</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10006"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">0.87546873</span>,</span><br><span class="line">  <span class="attr">"_source"</span> : &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"小米电视"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span> : <span class="number">5000</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="高级查询">高级查询</h2><h3 id="布尔查询-bool">布尔查询 bool</h3><p><code>bool</code>把其他各种查询通过<code>must</code>（与）、<code>should</code>（或）、<code>must_not</code>（非）的方式进行组合</p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"bool"</span>: &#123;</span><br><span class="line">      <span class="string">"must"</span>: [</span><br><span class="line">        &#123;<span class="string">"match"</span>: &#123;<span class="string">"title"</span>: <span class="string">"华为"</span>&#125;&#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"must_not"</span>: [</span><br><span class="line">        &#123;<span class="string">"match"</span>: &#123;<span class="string">"title"</span>: <span class="string">"电视"</span>&#125;&#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"should"</span>: [</span><br><span class="line">        &#123;<span class="string">"match"</span>: &#123;<span class="string">"title"</span>: <span class="string">"手机"</span>&#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10001"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">1.0</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"华为手机"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">5999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">1500</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10002"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">1.0</span>,</span><br><span class="line">  <span class="attr">"_source"</span> : &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"华为盒子"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">499.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">1500</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="范围查询-range">范围查询 range</h3><p><code>range</code>查询找出那些落在指定区域的数字或者时间</p><p>示例：查询<code>price</code>字段值处于[1000,5000]之间的文档</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"range"</span>: &#123;</span><br><span class="line">      <span class="string">"price"</span>: &#123;</span><br><span class="line">        <span class="string">"gte"</span>: 1000,</span><br><span class="line">        <span class="string">"lte"</span>: 5000</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>range</code>查询允许一下字符</p><ul><li>gt大于</li><li>gte  大于等于</li><li>lt         小于</li><li>lte       小于等于</li></ul><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10003"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">1.0</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"华为电视"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">2500</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10006"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">0.87546873</span>,</span><br><span class="line">  <span class="attr">"_source"</span> : &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"小米电视"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10004"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">0.5753642</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"小米手机"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">3999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="模糊查询-fuzzy">模糊查询 fuzzy</h3><p>新增一条数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PUT /demo1/_doc/10007</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"title"</span>: <span class="string">"iphone手机"</span>,</span><br><span class="line">  <span class="string">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">  <span class="string">"price"</span>: 8999.00,</span><br><span class="line">  <span class="string">"stock"</span>: 5000,</span><br><span class="line">  <span class="string">"saleable"</span>:<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>fuzzy</code>查询是<code>term</code>查询的模糊等价。它允许用户搜索词条与实际词条的拼写出现偏差，但是偏差的编辑距离不得超过2</p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"fuzzy"</span>: &#123;</span><br><span class="line">      <span class="string">"title"</span>: <span class="string">"iphana"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10007"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">1.2837042</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"iphone手机"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">8999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以通过<code>fuzziness</code>来指定允许的编辑距离，取值[0,2]</p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"fuzzy"</span>: &#123;</span><br><span class="line">      <span class="string">"title"</span>: &#123;</span><br><span class="line">        <span class="string">"value"</span>: <span class="string">"iphama"</span>,</span><br><span class="line">        <span class="string">"fuzziness"</span>: 2</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10007"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">1.2837042</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"iphone手机"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">8999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="过滤-filter">过滤 filter</h2><blockquote><p>条件查询中，进行过滤</p></blockquote><p>所有的查询条件都会影响到文档的评分及排名。如果需要在查询中进行过滤，并且不希望过滤条件影响评分，那么就不要把过滤条件作为查询条件来使用。而是使用<code>filter</code>方式</p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"bool"</span>: &#123;</span><br><span class="line">      <span class="string">"must"</span>: [</span><br><span class="line">        &#123;<span class="string">"match"</span>: &#123;<span class="string">"title"</span>: <span class="string">"华为"</span>&#125;&#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"filter"</span>: [</span><br><span class="line">        &#123;<span class="string">"range"</span>: &#123;</span><br><span class="line">          <span class="string">"price"</span>: &#123;</span><br><span class="line">            <span class="string">"gt"</span>: 100,</span><br><span class="line">            <span class="string">"lte"</span>: 1999</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>filter</code>中还可以再次进行<code>bool</code>组合条件过滤查询</p><blockquote><p>无查询条件，直接过滤</p></blockquote><p>如果一次查询只有过滤，没有查询条件，<strong>不希望进行评分</strong>，可以使用<code>constant_score</code>取代只有<code>filter</code>语句的<code>bool</code>查询。性能上时完全相同的，但对于提高查询简洁性和清晰性有很大帮助</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"constant_score"</span>: &#123;</span><br><span class="line">      <span class="string">"filter"</span>: &#123;</span><br><span class="line">        <span class="string">"range"</span>: &#123;</span><br><span class="line">          <span class="string">"price"</span>: &#123;</span><br><span class="line">            <span class="string">"gte"</span>: 1000,</span><br><span class="line">            <span class="string">"lte"</span>: 2000</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10003"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">1.0</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"华为电视"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">2500</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10006"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">0.87546873</span>,</span><br><span class="line">  <span class="attr">"_source"</span> : &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"小米电视"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="排序">排序</h2><h3 id="单字段排序">单字段排序</h3><p><code>sort</code>可以按照不同的字段进行排序，并且通过<code>order</code>指定排序方式</p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match"</span>: &#123;</span><br><span class="line">      <span class="string">"title"</span>: <span class="string">"华为"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"sort"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"price"</span>: &#123;</span><br><span class="line">        <span class="string">"order"</span>: <span class="string">"desc"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10001"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="attr">"_source"</span> : &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"华为手机"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">5999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">1500</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10003"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"华为电视"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">2500</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10002"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="attr">"_source"</span> : &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"华为盒子"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">499.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">1500</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多字段排序">多字段排序</h3><p>假设想结合<code>_score</code>和<code>price</code>进行查询，并且匹配的结果首先按照价格排序，然后按照得分排序</p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /demo1/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match"</span>: &#123;<span class="string">"title"</span>: <span class="string">"华为电视"</span>&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"sort"</span>: [</span><br><span class="line">    &#123;<span class="string">"price"</span>: &#123;<span class="string">"order"</span>: <span class="string">"asc"</span>&#125;&#125;,</span><br><span class="line">    &#123;<span class="string">"_score"</span>: &#123;<span class="string">"order"</span>: <span class="string">"desc"</span>&#125;&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10002"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">0.6931471</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"华为盒子"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">499.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">1500</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"sort"</span>: [</span><br><span class="line">    <span class="number">499.0</span>,</span><br><span class="line">    <span class="number">0.6931471</span></span><br><span class="line">  ]</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span> : <span class="string">"10003"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">1.7227666</span>,</span><br><span class="line">  <span class="attr">"_source"</span>: &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"华为电视"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">2500</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"sort"</span>: [</span><br><span class="line">    <span class="number">1999.0</span>,</span><br><span class="line">    <span class="number">1.7227666</span></span><br><span class="line">  ]</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10006"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">1.0296195</span>,</span><br><span class="line">  <span class="attr">"_source"</span> : &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"小米电视"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">1999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"sort"</span>: [</span><br><span class="line">    <span class="number">1999.0</span>,</span><br><span class="line">    <span class="number">1.0296195</span></span><br><span class="line">  ]</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>: <span class="string">"demo1"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>: <span class="string">"10001"</span>,</span><br><span class="line">  <span class="attr">"_score"</span>: <span class="number">0.6931471</span>,</span><br><span class="line">  <span class="attr">"_source"</span> : &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"华为手机"</span>,</span><br><span class="line">    <span class="attr">"images"</span>: <span class="string">"images/1.jpg"</span>,</span><br><span class="line">    <span class="attr">"price"</span>: <span class="number">5999.0</span>,</span><br><span class="line">    <span class="attr">"stock"</span>: <span class="number">1500</span>,</span><br><span class="line">    <span class="attr">"saleable"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"sort"</span>: [</span><br><span class="line">    <span class="number">5999.0</span>,</span><br><span class="line">    <span class="number">0.6931471</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>聚合aggregations</h1><p>聚合可以更方便的实现对数据的统计、分析。例如：</p><ul><li>什么品牌的手机更受欢迎</li><li>这些手机的平均价格，最高价格，最低价格</li><li>这些手机每月的销量如何</li></ul><p>实现这些统计功能要比数据库的SQL简单得多，而且查询速度非常快，近乎实时搜索效果</p><h2 id="基本概念-2">基本概念</h2><p>Elasticsearch中的聚合，包含多种类型，最常用的有两种：<code>桶</code>、<code>度量</code></p><blockquote><p><code>桶(bucket)</code>,阿里文档称之为存储单元</p></blockquote><p>桶的作用，是按照某种方式对数据进行分组，每一组数据在Elasticsearch中称之为一个<strong>桶</strong></p><p>Elasticsearch中提供的划分桶的方式有很多：</p><ul><li>Data Histogram Aggregation：根据日期阶梯分组，例如给定阶梯为周，会自动每周分为一个存储单元</li><li>Histogram Aggregation：根据数值阶梯分组，与日期类似</li><li>Terms Aggregation：根据词条内容分组，词条内容完全匹配的为一个存储单元</li><li>Range Aggregation：数值和日期的范围分组，指定开始和结束，然后按段分</li><li>…</li></ul><p>综上所述，发现bucket aggregations 只负责对数据进行分组，不负责计算，因此bucket中往往会嵌套另一种集合：metrics aggregations，即度量</p><blockquote><p>度量(metrics)</p></blockquote><p>分组完成后，需要对组内的元素进行聚合运算，例如求平均值、最大最小值、求和等，这些在Elasticsearch中称之为<code>度量</code></p><p>比较常用的聚合度量方式：</p><ul><li>Avg Aggregation：求平均值</li><li>Max Aggregation：求最大值</li><li>Min Aggregation：求最小值</li><li>Percentiles Aggregation：求百分比</li><li>Stats Aggregation：同时返回avg、max、min、sum、count等</li><li>Sum Aggregation：求和</li><li>Top hits Aggregation：求前几</li><li>Value count Aggregation：求总数</li><li>…</li></ul><br><p>为了测试聚合，先创建数据：</p><ul><li>创建索引</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">PUT cars</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"settings"</span>: &#123;</span><br><span class="line">    <span class="string">"number_of_shards"</span>: 1,</span><br><span class="line">    <span class="string">"number_of_replicas"</span>: 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"mappings"</span>: &#123;</span><br><span class="line">    <span class="string">"properties"</span>: &#123;</span><br><span class="line">      <span class="string">"color"</span>: &#123;</span><br><span class="line">        <span class="string">"type"</span>: <span class="string">"keyword"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"make"</span>: &#123;</span><br><span class="line">        <span class="string">"type"</span>: <span class="string">"keyword"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="snote info"><p>在Elasticsearch中，需要进行聚合、排序、过滤的字段其处理方式比较特殊，因此不能被分词。这里将`color`、`mark`这两个字段类型设置为keyword，这个类型不会被分词，将来可以参与聚合</p></div><ul><li>导入数据</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">POST /cars/_bulk</span><br><span class="line">&#123; <span class="string">"index"</span>: &#123;&#125;&#125;</span><br><span class="line">&#123; <span class="string">"price"</span> : 10000, <span class="string">"color"</span> : <span class="string">"red"</span>, <span class="string">"make"</span> : <span class="string">"honda"</span>, <span class="string">"sold"</span> : <span class="string">"2014-10-28"</span> &#125;</span><br><span class="line">&#123; <span class="string">"index"</span>: &#123;&#125;&#125;</span><br><span class="line">&#123; <span class="string">"price"</span> : 20000, <span class="string">"color"</span> : <span class="string">"red"</span>, <span class="string">"make"</span> : <span class="string">"honda"</span>, <span class="string">"sold"</span> : <span class="string">"2014-11-05"</span> &#125;</span><br><span class="line">&#123; <span class="string">"index"</span>: &#123;&#125;&#125;</span><br><span class="line">&#123; <span class="string">"price"</span> : 30000, <span class="string">"color"</span> : <span class="string">"green"</span>, <span class="string">"make"</span> : <span class="string">"ford"</span>, <span class="string">"sold"</span> : <span class="string">"2014-05-18"</span> &#125;</span><br><span class="line">&#123; <span class="string">"index"</span>: &#123;&#125;&#125;</span><br><span class="line">&#123; <span class="string">"price"</span> : 15000, <span class="string">"color"</span> : <span class="string">"blue"</span>, <span class="string">"make"</span> : <span class="string">"toyota"</span>, <span class="string">"sold"</span> : <span class="string">"2014-07-02"</span> &#125;</span><br><span class="line">&#123; <span class="string">"index"</span>: &#123;&#125;&#125;</span><br><span class="line">&#123; <span class="string">"price"</span> : 12000, <span class="string">"color"</span> : <span class="string">"green"</span>, <span class="string">"make"</span> : <span class="string">"toyota"</span>, <span class="string">"sold"</span> : <span class="string">"2014-08-19"</span> &#125;</span><br><span class="line">&#123; <span class="string">"index"</span>: &#123;&#125;&#125;</span><br><span class="line">&#123; <span class="string">"price"</span> : 20000, <span class="string">"color"</span> : <span class="string">"red"</span>, <span class="string">"make"</span> : <span class="string">"honda"</span>, <span class="string">"sold"</span> : <span class="string">"2014-11-05"</span> &#125;</span><br><span class="line">&#123; <span class="string">"index"</span>: &#123;&#125;&#125;</span><br><span class="line">&#123; <span class="string">"price"</span> : 80000, <span class="string">"color"</span> : <span class="string">"red"</span>, <span class="string">"make"</span> : <span class="string">"bmw"</span>, <span class="string">"sold"</span> : <span class="string">"2014-01-01"</span> &#125;</span><br><span class="line">&#123; <span class="string">"index"</span>: &#123;&#125;&#125;</span><br><span class="line">&#123; <span class="string">"price"</span> : 25000, <span class="string">"color"</span> : <span class="string">"blue"</span>, <span class="string">"make"</span> : <span class="string">"ford"</span>, <span class="string">"sold"</span> : <span class="string">"2014-02-12"</span> &#125;</span><br></pre></td></tr></table></figure><h2 id="聚合为桶">聚合为桶</h2><p>按照汽车的颜色<code>color</code>来进行分组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /cars/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"size"</span>: 0,</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"populer_color"</span>: &#123;</span><br><span class="line">      <span class="string">"terms"</span>: &#123;</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"color"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>size：查询条数，这里设置为0，因为不关心搜索到的数据，只关心聚合结果，提高效率</li><li>aggs：声明这是一个聚合查询，是aggregations的缩写<ul><li>popular_color：给这次聚合自定义一个名字，任意写。<ul><li>terms：划分桶的方式，这里是根据词条划分<ul><li>field：划分桶的字段</li></ul></li></ul></li></ul></li></ul><p>结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"skipped"</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : &#123;</span><br><span class="line">      <span class="attr">"value"</span> : <span class="number">8</span>,</span><br><span class="line">      <span class="attr">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"max_score"</span> : <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">"hits"</span> : [ ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"aggregations"</span> : &#123;</span><br><span class="line">    <span class="attr">"populer_color"</span> : &#123;</span><br><span class="line">      <span class="attr">"doc_count_error_upper_bound"</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"sum_other_doc_count"</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"buckets"</span> : [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"red"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">4</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"blue"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">2</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"green"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>hits：查询结果为空，因为设置了size为0</li><li>aggregations：聚合的结果</li><li>populer_color：自定义的聚合名称</li><li>buckets：查询到的桶，每个不同的color字段值都会形成一个桶<ul><li>key：这个桶对应的color字段值</li><li>doc_count：这个桶中文档的数量</li></ul></li></ul><p>例如：通过聚合发现，目前红色汽车比较畅销</p><h2 id="桶内度量">桶内度量</h2><p>上面的案例可以获取每个桶里面的文档数量，通常应用程序需要提供更复杂的文档度量。例如：每种颜色汽车的平均价格是多少？</p><p>因此，需要告诉Elasticsearch使用<code>哪个字段</code>、<code>使用哪种度量方式</code>进行计算，这些信息要嵌套在<code>桶</code>内，度量的计算会基于桶内的文档进行</p><blockquote><p>例如：求每种颜色汽车的平均价格</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">GET /cars/_search</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"size"</span>: 0,</span><br><span class="line"><span class="string">"aggs"</span>: &#123;</span><br><span class="line"><span class="string">"populer_color"</span>: &#123;</span><br><span class="line"><span class="string">"terms"</span>:&#123;</span><br><span class="line"><span class="string">"field"</span>: <span class="string">"color"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"aggs"</span>: &#123;</span><br><span class="line"><span class="string">"avg_price"</span>: &#123;</span><br><span class="line"><span class="string">"avg"</span>: &#123;</span><br><span class="line"><span class="string">"field"</span>: <span class="string">"price"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>aggs：在上一个aggs（populer_color）中添加新的aggs，可见度量也是一种聚合</li><li>avg_price：聚合的名称，自定义</li><li>avg：度量的类型</li><li>field：度量运算的字段</li></ul><p>计算结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;<span class="attr">"total"</span> : <span class="number">1</span>,<span class="attr">"successful"</span> : <span class="number">1</span>,<span class="attr">"skipped"</span> : <span class="number">0</span>,<span class="attr">"failed"</span> : <span class="number">0</span>&#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;<span class="attr">"total"</span> : &#123;<span class="attr">"value"</span> : <span class="number">8</span>,<span class="attr">"relation"</span> : <span class="string">"eq"</span>&#125;,<span class="attr">"max_score"</span> : <span class="literal">null</span>,<span class="attr">"hits"</span> : [ ]&#125;,</span><br><span class="line">  <span class="attr">"aggregations"</span> : &#123;</span><br><span class="line">    <span class="attr">"populer_color"</span> : &#123;</span><br><span class="line">      <span class="attr">"doc_count_error_upper_bound"</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"sum_other_doc_count"</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"buckets"</span> : [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"red"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">4</span>,</span><br><span class="line">          <span class="attr">"avg_price"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">32500.0</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"blue"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">2</span>,</span><br><span class="line">          <span class="attr">"avg_price"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">20000.0</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"green"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">2</span>,</span><br><span class="line">          <span class="attr">"avg_price"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">21000.0</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="snote info"><p>由此可见，每个桶中都有自己的avg_price字段，这是度量聚合的结果</p></div><h2 id="桶内嵌套桶">桶内嵌套桶</h2><p>刚才的案例是在桶里嵌套度量运算。实际上桶不仅可以嵌套度量运算，还可以再嵌套其他桶，也就是每个分组中，还可以有其他组</p><blockquote><p>例如：统计每个颜色的汽车的平均价格，以及分别属于哪个制造商</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GET /cars/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"size"</span>: 0,</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"populer_color"</span>: &#123;</span><br><span class="line">      <span class="string">"terms"</span>: &#123;<span class="string">"field"</span>: <span class="string">"color"</span>&#125;,</span><br><span class="line">      <span class="string">"aggs"</span>: &#123;</span><br><span class="line">        <span class="string">"avg_price"</span>: &#123;<span class="string">"avg"</span>: &#123;<span class="string">"field"</span>: <span class="string">"price"</span>&#125;&#125;,</span><br><span class="line">        <span class="string">"maker"</span>: &#123;<span class="string">"terms"</span>: &#123;<span class="string">"field"</span>: <span class="string">"make"</span>&#125;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>原来的color桶和avg计算不变</li><li>maker：在嵌套的aggs下添加新的桶</li><li>terms：桶的划分类型</li><li>field：根据什么字段划分</li></ul><p>运算结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span> : <span class="number">5</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"skipped"</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : &#123;</span><br><span class="line">      <span class="attr">"value"</span> : <span class="number">8</span>,</span><br><span class="line">      <span class="attr">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"max_score"</span> : <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">"hits"</span> : [ ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"aggregations"</span> : &#123;</span><br><span class="line">    <span class="attr">"populer_color"</span> : &#123;</span><br><span class="line">      <span class="attr">"doc_count_error_upper_bound"</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"sum_other_doc_count"</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"buckets"</span> : [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"red"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">4</span>,</span><br><span class="line">          <span class="attr">"maker"</span> : &#123;</span><br><span class="line">            <span class="attr">"doc_count_error_upper_bound"</span> : <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"sum_other_doc_count"</span> : <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"buckets"</span> : [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">"key"</span> : <span class="string">"honda"</span>,</span><br><span class="line">                <span class="attr">"doc_count"</span> : <span class="number">3</span></span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">"key"</span> : <span class="string">"bmw"</span>,</span><br><span class="line">                <span class="attr">"doc_count"</span> : <span class="number">1</span></span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">"avg_price"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">32500.0</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"blue"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">2</span>,</span><br><span class="line">          <span class="attr">"maker"</span> : &#123;</span><br><span class="line">            <span class="attr">"doc_count_error_upper_bound"</span> : <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"sum_other_doc_count"</span> : <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"buckets"</span> : [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">"key"</span> : <span class="string">"ford"</span>,</span><br><span class="line">                <span class="attr">"doc_count"</span> : <span class="number">1</span></span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">"key"</span> : <span class="string">"toyota"</span>,</span><br><span class="line">                <span class="attr">"doc_count"</span> : <span class="number">1</span></span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">"avg_price"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">20000.0</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"green"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">2</span>,</span><br><span class="line">          <span class="attr">"maker"</span> : &#123;</span><br><span class="line">            <span class="attr">"doc_count_error_upper_bound"</span> : <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"sum_other_doc_count"</span> : <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"buckets"</span> : [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">"key"</span> : <span class="string">"ford"</span>,</span><br><span class="line">                <span class="attr">"doc_count"</span> : <span class="number">1</span></span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">"key"</span> : <span class="string">"toyota"</span>,</span><br><span class="line">                <span class="attr">"doc_count"</span> : <span class="number">1</span></span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">"avg_price"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">21000.0</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>新聚合的maker嵌套在原来的每一个color中</li><li>每个颜色下都根据maker进行了分组</li><li>查询结果信息：<ul><li>红色汽车一共有4辆</li><li>红色汽车平均价格为32500</li><li>其中有3辆制造商是Honda，1辆是BMW</li></ul></li></ul><h2 id="划分桶的其他方式">划分桶的其他方式</h2><p>前面讲了，划分桶的方式有很多，例如：</p><ul><li>Data Histogram Aggregation：根据日期阶梯分组，例如给定阶梯为周，会自动每周分为一个存储单元</li><li>Histogram Aggregation：根据数值阶梯分组，与日期类似</li><li>Terms Aggregation：根据词条内容分组，词条内容完全匹配的为一个存储单元</li><li>Range Aggregation：数值和日期的范围分组，指定开始和结束，然后按段分</li></ul><p>之前的案例中，采用的是Terms Aggregation，根据词条内容分组。</p><p>再来看一下其他划分桶的方式</p><h3 id="阶梯分桶Histogram">阶梯分桶Histogram</h3><blockquote><p>原理：HIstogram是把数值类型的字段，按照一定的阶梯大小进行分组，需要知道一个阶梯值（interval）来划分阶梯大小</p></blockquote><p>例如：</p><p>有一个价格字段，如果设定interval的值为200，那么阶梯值是：</p><p>0、200、400、600、…</p><p>上面列出的是每个阶梯的key，也是区间启点。</p><p>如果一件商品的价格为450，会落在哪个区间呢？</p><p>计算公式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bucket_key &#x3D; Math.floor((value - offset) &#x2F; interval) * interval + offset</span><br></pre></td></tr></table></figure><ul><li>value：就是当前数据的值，本案例中指450</li><li>offset：起始偏移量，默认为0</li><li>interval：阶梯间隔，比如200</li></ul><p>所以，得到的结果为 key = Math.floor((450 -0) / 200) * 200 + 0 = 400</p><blockquote><p>示例：对汽车价格进行分组，指定interval为10000</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET /cars/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"size"</span>: 0,</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"price"</span>: &#123;</span><br><span class="line">      <span class="string">"histogram"</span>: &#123;</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"price"</span>,</span><br><span class="line">        <span class="string">"interval"</span>: 10000</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"skipped"</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : &#123;</span><br><span class="line">      <span class="attr">"value"</span> : <span class="number">8</span>,</span><br><span class="line">      <span class="attr">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"max_score"</span> : <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">"hits"</span> : [ ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"aggregations"</span> : &#123;</span><br><span class="line">    <span class="attr">"price"</span> : &#123;</span><br><span class="line">      <span class="attr">"buckets"</span> : [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="number">10000.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">3</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="number">20000.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">3</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="number">30000.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="number">40000.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="number">50000.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="number">60000.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="number">70000.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="number">80000.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class='tip warning'><p>发现查询结果中，有大量空的分组，可以增加一个参数<b>min_doc_count</b>为1，这样文档数量为0的桶会被过滤掉<p></div><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GET /cars/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"size"</span>: 0,</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"price"</span>: &#123;</span><br><span class="line">      <span class="string">"histogram"</span>: &#123;</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"price"</span>,</span><br><span class="line">        <span class="string">"interval"</span>: 10000,</span><br><span class="line">        <span class="string">"min_doc_count"</span>: 1</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"skipped"</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : &#123;</span><br><span class="line">      <span class="attr">"value"</span> : <span class="number">8</span>,</span><br><span class="line">      <span class="attr">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"max_score"</span> : <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">"hits"</span> : [ ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"aggregations"</span> : &#123;</span><br><span class="line">    <span class="attr">"price"</span> : &#123;</span><br><span class="line">      <span class="attr">"buckets"</span> : [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="number">10000.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">3</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="number">20000.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">3</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="number">30000.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="number">80000.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用Kibana可视化图表查看：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200716150435.png" alt=""></p><h3 id="范围分桶Range">范围分桶Range</h3><p>范围分桶与阶梯分桶类似</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200716155539007.png" alt="image-20200716155539007"></p><h1>Spring Data Elasticsearch</h1><p>Elasticsearch提供的Java客户端有一些不太方便的地方</p><ul><li>很多地方需要拼接Json字符串</li><li>需要把对象序列化为Json存储</li><li>查询到的结果也需要反序列化为对象</li></ul><h2 id="简介">简介</h2><p>Spring Data Elasticsearch是Spring Data项目下的一个子模块</p><p>查看Spring Data官网：<a href="https://spring.io/projects/spring-data" target="_blank" rel="noopener">Spring Data官网</a></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200716160508092.png" alt="image-20200716160508092"></p><p>Spring Data 的使命是给各种数据访问提供统一的编程接口，不管是关系型数据库（如MySQL）、还是非关系型数据库（如Redis）、或者类似Elasticsearch这样的索引数据库。从而简化开发人员的代码，提高开发效率。</p><p>Spring Data包含了很多不同数据操作的模块：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200716161620604.png" alt="image-20200716161620604"></p><p>Spring Data Elasticsearch的页面：<a href="https://spring.io/projects/spring-data-elasticsearch" target="_blank" rel="noopener">Spring Data Elasticsearch</a></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200716161901011.png" alt="image-20200716161901011"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200716163522602.png" alt="image-20200716163522602"></p><h2 id="创建Demo工程">创建Demo工程</h2><p>新建一个demo，创建Elasticsearch工程</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200716164249158.png" alt="image-20200716164249158"></p><p>pom依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.code.demo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>启动类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(Application<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>application.yml配置文件：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">data:</span></span><br><span class="line">    <span class="attr">elasticsearch:</span></span><br><span class="line">      <span class="comment"># 已弃用</span></span><br><span class="line">      <span class="attr">cluster-name:</span> <span class="string">my-application</span></span><br><span class="line">      <span class="attr">cluster-nodes:</span> <span class="number">192.168</span><span class="number">.40</span><span class="number">.77</span><span class="string">:9300</span></span><br></pre></td></tr></table></figure><h2 id="索引操作">索引操作</h2><h3 id="创建索引和映射">创建索引和映射</h3><blockquote><p>实体类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Item</span> </span>&#123;</span><br><span class="line">    Long id;</span><br><span class="line">    String title; <span class="comment">//标题</span></span><br><span class="line">    String category;<span class="comment">// 分类</span></span><br><span class="line">    String brand; <span class="comment">// 品牌</span></span><br><span class="line">    Double price; <span class="comment">// 价格</span></span><br><span class="line">    String images; <span class="comment">// 图片地址</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// TODO get and set</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>映射</p></blockquote><p>Spring Data通过注解来声明字段的映射属性：</p><ul><li><p><code>@Document</code>：作用于类，标记实体类为文档对象，一般有两个属性</p><ul><li>indexName：对应索引库名称</li><li>type：对应在索引库中的类型</li><li>shards：分片数量，默认为5</li><li>replicas：副本数量，默认为1</li></ul></li><li><p><code>@Id</code>：作用成员变量，标记一个字段作为id主键</p></li><li><p><code>@Field</code>：作用在成员变量，标记为文档的字段，并制定字段映射属性：</p><ul><li>type：字段类型，是枚举类<code>FieldType</code></li><li>index：是否索引，默认为true</li><li>store：是否存储，默认为false</li><li>analyzer：分词器名称</li></ul></li></ul><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Document</span>(indexName = <span class="string">"item"</span>,shards = <span class="number">1</span>,replicas = <span class="number">0</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Item</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    Long id;</span><br><span class="line">    <span class="meta">@Field</span>(type = FieldType.Text,analyzer = <span class="string">"ik_max_word"</span>)</span><br><span class="line">    String title;</span><br><span class="line">    <span class="meta">@Field</span>(type = FieldType.Keyword)</span><br><span class="line">    String category;</span><br><span class="line">    <span class="meta">@Field</span>(type = FieldType.Keyword)</span><br><span class="line">    String brand;</span><br><span class="line">    <span class="meta">@Field</span>(type = FieldType.Double)</span><br><span class="line">    Double price;</span><br><span class="line">    <span class="meta">@Field</span>(type = FieldType.Keyword,index = <span class="keyword">false</span>)</span><br><span class="line">    String images;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注入bean</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> ElasticsearchRestTemplate restTemplate;</span><br></pre></td></tr></table></figure><blockquote><p>创建索引</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//  设置索引信息（绑定实体类），返回IndexOperations</span></span><br><span class="line">     IndexOperations indexOperations = restTemplate.indexOps(Item<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"><span class="comment">//  创建索引</span></span><br><span class="line">indexOperations.create();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>可以根据类的信息自动生成，也可以手动指定</li></ul><p><img src= "/img/loading.gif" data-src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200716193632823.png" alt="image-20200716193632823"></p><blockquote><p>创建映射</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createMapping</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//  设置索引信息（绑定实体类），返回IndexOperations</span></span><br><span class="line">    IndexOperations indexOperations = restTemplate.indexOps(Item<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"><span class="comment">//    创建索引映射</span></span><br><span class="line">Document mapping = indexOperations.createMapping();</span><br><span class="line"><span class="comment">//    写入索引</span></span><br><span class="line">    indexOperations.putMapping(mapping);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>完整代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span>(<span class="title">classes</span> </span>= Application<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">CreateIndexTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ElasticsearchRestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//        设置索引信息（绑定实体类），返回IndexOperations</span></span><br><span class="line">        IndexOperations indexOperations = restTemplate.indexOps(Item<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"><span class="comment">//        创建索引</span></span><br><span class="line">        indexOperations.create();</span><br><span class="line"><span class="comment">//        创建索引映射</span></span><br><span class="line">        Document mapping = indexOperations.createMapping();</span><br><span class="line"><span class="comment">//        写入索引</span></span><br><span class="line">        indexOperations.putMapping(mapping);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在Kibana中查询，查询语句：GET /item</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"item"</span> : &#123;</span><br><span class="line">    <span class="attr">"aliases"</span> : &#123; &#125;,</span><br><span class="line">    <span class="attr">"mappings"</span> : &#123;</span><br><span class="line">      <span class="attr">"properties"</span> : &#123;</span><br><span class="line">        <span class="attr">"brand"</span> : &#123;</span><br><span class="line">          <span class="attr">"type"</span> : <span class="string">"keyword"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"category"</span> : &#123;</span><br><span class="line">          <span class="attr">"type"</span> : <span class="string">"keyword"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"images"</span> : &#123;</span><br><span class="line">          <span class="attr">"type"</span> : <span class="string">"keyword"</span>,</span><br><span class="line">          <span class="attr">"index"</span> : <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"price"</span> : &#123;</span><br><span class="line">          <span class="attr">"type"</span> : <span class="string">"double"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"title"</span> : &#123;</span><br><span class="line">          <span class="attr">"type"</span> : <span class="string">"text"</span>,</span><br><span class="line">          <span class="attr">"analyzer"</span> : <span class="string">"ik_max_word"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"settings"</span> : &#123;</span><br><span class="line">      <span class="attr">"index"</span> : &#123;</span><br><span class="line">        <span class="attr">"refresh_interval"</span> : <span class="string">"1s"</span>,</span><br><span class="line">        <span class="attr">"number_of_shards"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="attr">"provided_name"</span> : <span class="string">"item"</span>,</span><br><span class="line">        <span class="attr">"creation_date"</span> : <span class="string">"1594898975335"</span>,</span><br><span class="line">        <span class="attr">"store"</span> : &#123;</span><br><span class="line">          <span class="attr">"type"</span> : <span class="string">"fs"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"number_of_replicas"</span> : <span class="string">"0"</span>,</span><br><span class="line">        <span class="attr">"uuid"</span> : <span class="string">"-CFLXqVhSFuluymWNevDYg"</span>,</span><br><span class="line">        <span class="attr">"version"</span> : &#123;</span><br><span class="line">          <span class="attr">"created"</span> : <span class="string">"7080099"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除索引-2">删除索引</h3><blockquote><p>示例：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//    设置索引信息（绑定实体类），返回IndexOperations</span></span><br><span class="line">    IndexOperations indexOperations = restTemplate.indexOps(Item<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"><span class="comment">//    删除索引</span></span><br><span class="line">    indexOperations.delete();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>结果：404 - Not Found</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"error"</span> : &#123;</span><br><span class="line">    <span class="attr">"root_cause"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span> : <span class="string">"index_not_found_exception"</span>,</span><br><span class="line">        <span class="attr">"reason"</span> : <span class="string">"no such index [item]"</span>,</span><br><span class="line">        <span class="attr">"resource.type"</span> : <span class="string">"index_or_alias"</span>,</span><br><span class="line">        <span class="attr">"resource.id"</span> : <span class="string">"item"</span>,</span><br><span class="line">        <span class="attr">"index_uuid"</span> : <span class="string">"_na_"</span>,</span><br><span class="line">        <span class="attr">"index"</span> : <span class="string">"item"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"type"</span> : <span class="string">"index_not_found_exception"</span>,</span><br><span class="line">    <span class="attr">"reason"</span> : <span class="string">"no such index [item]"</span>,</span><br><span class="line">    <span class="attr">"resource.type"</span> : <span class="string">"index_or_alias"</span>,</span><br><span class="line">    <span class="attr">"resource.id"</span> : <span class="string">"item"</span>,</span><br><span class="line">    <span class="attr">"index_uuid"</span> : <span class="string">"_na_"</span>,</span><br><span class="line">    <span class="attr">"index"</span> : <span class="string">"item"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"status"</span> : <span class="number">404</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="新增文档数据">新增文档数据</h2><h3 id="Repository接口">Repository接口</h3><p>Spring Data 的强大之处在于不同写任何DAO处理，可以自动根据方法名或类的信息进行CRUD操作。只要定义一个接口，然后继承Repository提供的一些子接口，就能具备各种基本的CRUD功能。</p><p>Repository继承关系：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200717001327328.png" alt="image-20200717001327328"></p><p>其中，ElasticsearchRepository接口：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200717002829448.png" alt="image-20200717002829448"></p><blockquote><p>自定义接口，继承ElasticsearchRepository</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ItemRepository</span> <span class="keyword">extends</span> <span class="title">ElasticsearchRepository</span>&lt;<span class="title">Item</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来，就可以新增数据了</p><h3 id="新增一个文档">新增一个文档</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> ItemRepository repository;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Item item = <span class="keyword">new</span> Item(<span class="number">1L</span>,<span class="string">"华为手机"</span>,<span class="string">"手机"</span>,<span class="string">"华为"</span>,<span class="number">4999.00</span>,<span class="string">"http://image.badcode.icu/13123.jpg"</span>);</span><br><span class="line">    repository.save(item);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Kibana中查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET /item/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match_all"</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"skipped"</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : &#123;</span><br><span class="line">      <span class="attr">"value"</span> : <span class="number">1</span>,</span><br><span class="line">      <span class="attr">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"max_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">    <span class="attr">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"item"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"_class"</span> : <span class="string">"com.code.bean.Item"</span>,</span><br><span class="line">          <span class="attr">"id"</span> : <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"title"</span> : <span class="string">"华为手机"</span>,</span><br><span class="line">          <span class="attr">"category"</span> : <span class="string">"手机"</span>,</span><br><span class="line">          <span class="attr">"brand"</span> : <span class="string">"华为"</span>,</span><br><span class="line">          <span class="attr">"price"</span> : <span class="number">4999.0</span>,</span><br><span class="line">          <span class="attr">"images"</span> : <span class="string">"http://image.badcode.icu/13123.jpg"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="批量新增文档">批量新增文档</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    List&lt;Item&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    list.add(<span class="keyword">new</span> Item(<span class="number">2L</span>, <span class="string">"坚果手机R1"</span>, <span class="string">" 手机"</span>, <span class="string">"锤子"</span>, <span class="number">3999.00</span>,<span class="string">"http://image.badcode.icu/13123.jpg"</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> Item(<span class="number">3L</span>, <span class="string">"小米手机"</span>, <span class="string">" 手机"</span>, <span class="string">"小米"</span>, <span class="number">1999.00</span>, <span class="string">"http://image.badcode.icu/13123.jpg"</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> Item(<span class="number">4L</span>, <span class="string">"iphone手机"</span>, <span class="string">" 手机"</span>, <span class="string">"Apple"</span>, <span class="number">8999.00</span>, <span class="string">"http://image.badcode.icu/13123.jpg"</span>));</span><br><span class="line">    repository.saveAll(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Kibana中查询，共有4条数据</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200717004513867.png" alt="image-20200717004513867"></p><h3 id="修改">修改</h3><p>修改和新增是同一个接口，区分的依据就是id。跟在页面发起PUT请求是类似的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Item item = <span class="keyword">new</span> Item(<span class="number">4L</span>, <span class="string">"苹果手机"</span>, <span class="string">" 手机"</span>, <span class="string">"Apple"</span>, <span class="number">8999.00</span>, <span class="string">"http://image.badcode.icu/13123.jpg"</span>);</span><br><span class="line">    repository.save(item);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果id存在，则修改；不存在则新增</li></ul><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200717004943453.png" alt="image-20200717004943453"></p><h2 id="查询">查询</h2><h3 id="基本查询-2">基本查询</h3><p>ElasticsearchRepository提供了一些基本的查询方法</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200717005859538.png" alt="image-20200717005859538"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询所有</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Iterable&lt;Item&gt; items = repository.findAll();</span><br><span class="line">    <span class="keyword">for</span> (Item item : items) &#123;</span><br><span class="line">        System.out.println(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200717010237379.png" alt="image-20200717010237379"></p><h3 id="自定义方法">自定义方法</h3><p>Spring Data的另一个强大之处，是根据方法名自动实现功能。</p><p>例如：方法名是：findByTitle，那么它就知道是根据title来查询，然后帮你自动完成，无需写实现类</p><div class='tip warning'><p>注意：方法名要符合约束<p></div><p><a href="https://docs.spring.io/spring-data/elasticsearch/docs/4.0.1.RELEASE/reference/html/#elasticsearch.query-methods.criterions" target="_blank" rel="noopener">官方参考文档地址</a></p><table><thead><tr><th>Keyword</th><th>Sample</th><th>Elasticsearch Query String</th></tr></thead><tbody><tr><td><code>And</code></td><td><code>findByNameAndPrice</code></td><td><code>{&quot;bool&quot; : {&quot;must&quot; : [ {&quot;field&quot; : {&quot;name&quot; : &quot;?&quot;}}, {&quot;field&quot; : {&quot;price&quot; : &quot;?&quot;}} ]}}</code></td></tr><tr><td><code>Or</code></td><td><code>findByNameOrPrice</code></td><td><code>{&quot;bool&quot; : {&quot;should&quot; : [ {&quot;field&quot; : {&quot;name&quot; : &quot;?&quot;}}, {&quot;field&quot; : {&quot;price&quot; : &quot;?&quot;}} ]}}</code></td></tr><tr><td><code>Is</code></td><td><code>findByName</code></td><td><code>{&quot;bool&quot; : {&quot;must&quot; : {&quot;field&quot; : {&quot;name&quot; : &quot;?&quot;}}}}</code></td></tr><tr><td><code>Not</code></td><td><code>findByNameNot</code></td><td><code>{&quot;bool&quot; : {&quot;must_not&quot; : {&quot;field&quot; : {&quot;name&quot; : &quot;?&quot;}}}}</code></td></tr><tr><td><code>Between</code></td><td><code>findByPriceBetween</code></td><td><code>{&quot;bool&quot; : {&quot;must&quot; : {&quot;range&quot; : {&quot;price&quot; : {&quot;from&quot; : ?,&quot;to&quot; : ?,&quot;include_lower&quot; : true,&quot;include_upper&quot; : true}}}}}</code></td></tr><tr><td><code>LessThanEqual</code></td><td><code>findByPriceLessThan</code></td><td><code>{&quot;bool&quot; : {&quot;must&quot; : {&quot;range&quot; : {&quot;price&quot; : {&quot;from&quot; : null,&quot;to&quot; : ?,&quot;include_lower&quot; : true,&quot;include_upper&quot; : true}}}}}</code></td></tr><tr><td><code>GreaterThanEqual</code></td><td><code>findByPriceGreaterThan</code></td><td><code>{&quot;bool&quot; : {&quot;must&quot; : {&quot;range&quot; : {&quot;price&quot; : {&quot;from&quot; : ?,&quot;to&quot; : null,&quot;include_lower&quot; : true,&quot;include_upper&quot; : true}}}}}</code></td></tr><tr><td><code>Before</code></td><td><code>findByPriceBefore</code></td><td><code>{&quot;bool&quot; : {&quot;must&quot; : {&quot;range&quot; : {&quot;price&quot; : {&quot;from&quot; : null,&quot;to&quot; : ?,&quot;include_lower&quot; : true,&quot;include_upper&quot; : true}}}}}</code></td></tr><tr><td><code>After</code></td><td><code>findByPriceAfter</code></td><td><code>{&quot;bool&quot; : {&quot;must&quot; : {&quot;range&quot; : {&quot;price&quot; : {&quot;from&quot; : ?,&quot;to&quot; : null,&quot;include_lower&quot; : true,&quot;include_upper&quot; : true}}}}}</code></td></tr><tr><td><code>Like</code></td><td><code>findByNameLike</code></td><td><code>{&quot;bool&quot; : {&quot;must&quot; : {&quot;field&quot; : {&quot;name&quot; : {&quot;query&quot; : &quot;?*&quot;,&quot;analyze_wildcard&quot; : true}}}}}</code></td></tr><tr><td><code>StartingWith</code></td><td><code>findByNameStartingWith</code></td><td><code>{&quot;bool&quot; : {&quot;must&quot; : {&quot;field&quot; : {&quot;name&quot; : {&quot;query&quot; : &quot;?*&quot;,&quot;analyze_wildcard&quot; : true}}}}}</code></td></tr><tr><td><code>EndingWith</code></td><td><code>findByNameEndingWith</code></td><td><code>{&quot;bool&quot; : {&quot;must&quot; : {&quot;field&quot; : {&quot;name&quot; : {&quot;query&quot; : &quot;*?&quot;,&quot;analyze_wildcard&quot; : true}}}}}</code></td></tr><tr><td><code>Contains/Containing</code></td><td><code>findByNameContaining</code></td><td><code>{&quot;bool&quot; : {&quot;must&quot; : {&quot;field&quot; : {&quot;name&quot; : {&quot;query&quot; : &quot;**?**&quot;,&quot;analyze_wildcard&quot; : true}}}}}</code></td></tr><tr><td><code>In</code></td><td><code>findByNameIn(Collection&lt;String&gt;names)</code></td><td><code>{&quot;bool&quot; : {&quot;must&quot; : {&quot;bool&quot; : {&quot;should&quot; : [ {&quot;field&quot; : {&quot;name&quot; : &quot;?&quot;}}, {&quot;field&quot; : {&quot;name&quot; : &quot;?&quot;}} ]}}}}</code></td></tr><tr><td><code>NotIn</code></td><td><code>findByNameNotIn(Collection&lt;String&gt;names)</code></td><td><code>{&quot;bool&quot; : {&quot;must_not&quot; : {&quot;bool&quot; : {&quot;should&quot; : {&quot;field&quot; : {&quot;name&quot; : &quot;?&quot;}}}}}}</code></td></tr><tr><td><code>Near</code></td><td><code>findByStoreNear</code></td><td><code>Not Supported Yet !</code></td></tr><tr><td><code>True</code></td><td><code>findByAvailableTrue</code></td><td><code>{&quot;bool&quot; : {&quot;must&quot; : {&quot;field&quot; : {&quot;available&quot; : true}}}}</code></td></tr><tr><td><code>False</code></td><td><code>findByAvailableFalse</code></td><td><code>{&quot;bool&quot; : {&quot;must&quot; : {&quot;field&quot; : {&quot;available&quot; : false}}}}</code></td></tr><tr><td><code>OrderBy</code></td><td><code>findByAvailableTrueOrderByNameDesc</code></td><td><code>{&quot;sort&quot; : [{ &quot;name&quot; : {&quot;order&quot; : &quot;desc&quot;} }],&quot;bool&quot; : {&quot;must&quot; : {&quot;field&quot; : {&quot;available&quot; : true}}}}</code></td></tr></tbody></table><blockquote><p>例如：按照价格区间查询</p></blockquote><p>定义方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ItemRepository</span> <span class="keyword">extends</span> <span class="title">ElasticsearchRepository</span>&lt;<span class="title">Item</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据价格区间查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> price1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> price2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Item&gt; <span class="title">findByPriceBetween</span><span class="params">(<span class="keyword">double</span> price1, <span class="keyword">double</span> price2)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    List&lt;Item&gt; items = repository.findByPriceBetween(<span class="number">1000.00</span>, <span class="number">4000.00</span>);</span><br><span class="line">    <span class="keyword">for</span> (Item item : items) &#123;</span><br><span class="line">        System.out.println(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200717011438719.png" alt="image-20200717011438719"></p><h3 id="自定义查询">自定义查询</h3><p>有关Query的构造器，发现Query接口共有1个抽象类和3个实现类</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200717012714123.png" alt="image-20200717012714123"></p><p>可以通过 <code>new NativeSearchQueryBuilder()</code> 来构建 <code>NativeSearchQuery</code>对象</p><p><code>NativeSearchQuery</code>中有很多的方法来为我们实现复杂的查询与筛选操作</p><p>其中的<code>builder()</code>返回<code>NativeSearchQuery</code>，所以，在众多筛选条件之后不要忘记加上<code>builder()</code></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200717014342981.png" alt="image-20200717014342981"></p><p>基本的matchQuery查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">search</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//    利用构造器NativeSearchQueryBuilder构建NativeSearchQuery</span></span><br><span class="line">    NativeSearchQuery queryBuilder = <span class="keyword">new</span> NativeSearchQueryBuilder()</span><br><span class="line">            .withQuery(QueryBuilders.matchQuery(<span class="string">"title"</span>,<span class="string">"华为手机"</span>))</span><br><span class="line">            .build();</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        ElasticsearchRestTemplate.search()</span></span><br><span class="line"><span class="comment">            参数1：本机查询的构造</span></span><br><span class="line"><span class="comment">            参数2：index的类</span></span><br><span class="line"><span class="comment">            参数3：再次声明库名（可选）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SearchHits&lt;Item&gt; search = restTemplate.search(queryBuilder, Item<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="keyword">for</span> (SearchHit&lt;Item&gt; itemSearchHit : search) &#123;</span><br><span class="line">        System.out.println(itemSearchHit.getContent());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>NativeSearchQueryBuilder()：Spring提供的一个查询条件构造器，帮助构建json格式的请求体</p></li><li><p>QueryBuilders.matchQuery(“title”,“华为手机”)：利用QueryBuilders来生成一个查询。</p><ul><li><p>QueryBuilders：提供了大量的静态方法，用于生成各种不同类型的查询</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200717021230765.png" alt="image-20200717021230765"></p></li></ul></li><li><p>SearchHit<Item>：将搜索到的数据与其他信息一起封装，包含属性：</p><ul><li>id</li><li>score：得分</li><li>sortValues：排序值</li><li>content：文档内容</li><li>highlightFields：突出显示字段</li></ul></li></ul><p>结果：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200717023040336.png" alt="image-20200717023040336"></p><h3 id="分页查询">分页查询</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">searchByPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    NativeSearchQuery queryBuilder = <span class="keyword">new</span> NativeSearchQueryBuilder()</span><br><span class="line">            .withQuery(QueryBuilders.matchQuery(<span class="string">"title"</span>, <span class="string">"华为手机"</span>))</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                添加分页</span></span><br><span class="line"><span class="comment">                Pageable的实现类PageRequest的of方法</span></span><br><span class="line"><span class="comment">                    参数1：当前页</span></span><br><span class="line"><span class="comment">                    参数2：要返回的页面大小，必须大于0</span></span><br><span class="line"><span class="comment">                    参数3：排序参数（可选）,Sort.Direction.DESC降序 Sort.Direction.ASC升序</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            .withPageable(PageRequest.of(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">            .build();</span><br><span class="line"></span><br><span class="line">    SearchHits&lt;Item&gt; search = restTemplate.search(queryBuilder, Item<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="keyword">for</span> (SearchHit&lt;Item&gt; itemSearchHit : search) &#123;</span><br><span class="line">        System.out.println(itemSearchHit.getContent());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200717024712082.png" alt="image-20200717024712082"></p><h3 id="排序-2">排序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">searchBySort</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    NativeSearchQuery queryBuilder = <span class="keyword">new</span> NativeSearchQueryBuilder()</span><br><span class="line">            .withQuery(QueryBuilders.matchQuery(<span class="string">"title"</span>, <span class="string">"华为手机"</span>))</span><br><span class="line">            .withPageable(PageRequest.of(<span class="number">0</span>,<span class="number">4</span>))</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                排序</span></span><br><span class="line"><span class="comment">                fieldSort(String field) 根据字段排序</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            .withSort(SortBuilders.fieldSort(<span class="string">"price"</span>).order(SortOrder.DESC))</span><br><span class="line">            .build();</span><br><span class="line">    SearchHits&lt;Item&gt; search = restTemplate.search(queryBuilder, Item<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="keyword">for</span> (SearchHit&lt;Item&gt; itemSearchHit : search) &#123;</span><br><span class="line">        System.out.println(itemSearchHit.getContent());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200717025538195.png" alt="image-20200717025538195"></p><h2 id="聚合">聚合</h2><h3 id="聚合为桶-2">聚合为桶</h3><blockquote><p>桶即是分组，例如：按照品牌brand进行分组</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAggs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    NativeSearchQueryBuilder queryBuilder = <span class="keyword">new</span> NativeSearchQueryBuilder();</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        聚合可以用多个，所以add</span></span><br><span class="line"><span class="comment">            terms：词条聚合,传入词条名称</span></span><br><span class="line"><span class="comment">            field：聚合字段</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    NativeSearchQuery query = queryBuilder.addAggregation(AggregationBuilders.terms(<span class="string">"brands"</span>).field(<span class="string">"brand"</span>))</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                结果集过滤，这里设置不需要结果集，不添加包含与不包含，会自动生成length为0的数组</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            .withSourceFilter(<span class="keyword">new</span> FetchSourceFilterBuilder().build())</span><br><span class="line">            .build();</span><br><span class="line">    SearchHits&lt;Item&gt; items = restTemplate.search(query, Item<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"><span class="comment">//        获取聚合结果集</span></span><br><span class="line">    Aggregations aggregations = items.getAggregations();</span><br><span class="line">    <span class="keyword">assert</span> aggregations != <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">//        因为结果为字符串类型，所以使用ParsedStringTerms接收</span></span><br><span class="line">    ParsedStringTerms brands = aggregations.get(<span class="string">"brands"</span>);</span><br><span class="line"><span class="comment">//        获取桶</span></span><br><span class="line">    brands.getBuckets().forEach(bucket -&gt; &#123;</span><br><span class="line"><span class="comment">//            getKeyAsString()：获取桶中的key</span></span><br><span class="line"><span class="comment">//            getDocCount()：获取记录数</span></span><br><span class="line">        System.out.println(bucket.getKeyAsString() + <span class="string">"\t"</span> + bucket.getDocCount());</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200717230352733.png" alt="image-20200717230352733"></p><ul><li><code>AggregationBuilders</code>：聚合的构建工厂类。所有聚合都由这个工厂构建：</li></ul><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200717230903011.png" alt="image-20200717230903011"></p><ul><li><p>Aggregation：聚合的结果集</p></li><li><p>ParsedStringTerms：接受聚合结果，字符串类型，ParsedTerms抽象类的子类</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200717234218525.png" alt="image-20200717234218525"></p><ul><li>ParsedLongTerms：接收数字类型</li><li>ParsedDoubleTerms：接收小数类型</li></ul></li></ul><h3 id="嵌套聚合，求平均值">嵌套聚合，求平均值</h3><p>先添加数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveAll2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    List&lt;Item&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    list.add(<span class="keyword">new</span> Item(<span class="number">5L</span>, <span class="string">"华为V30"</span>, <span class="string">"手机"</span>, <span class="string">"华为"</span>, <span class="number">3999.00</span>, <span class="string">"http://image.badcode.icu/13123.jpg"</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> Item(<span class="number">6L</span>, <span class="string">"华为P10"</span>, <span class="string">" 手机"</span>, <span class="string">"华为"</span>, <span class="number">2999.00</span>, <span class="string">"http://image.badcode.icu/13123.jpg"</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> Item(<span class="number">7L</span>, <span class="string">"小米X5"</span>, <span class="string">" 手机"</span>, <span class="string">"小米"</span>, <span class="number">1999.00</span>, <span class="string">"http://image.badcode.icu/13123.jpg"</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> Item(<span class="number">8L</span>, <span class="string">"iphone11"</span>, <span class="string">" 手机"</span>, <span class="string">"Apple"</span>, <span class="number">5999.00</span>, <span class="string">"http://image.badcode.icu/13123.jpg"</span>));</span><br><span class="line">    repository.saveAll(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200718000441301.png" alt="image-20200718000441301"></p><blockquote><p>根据品牌计算平均值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSubAggs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    NativeSearchQueryBuilder queryBuilder = <span class="keyword">new</span> NativeSearchQueryBuilder();</span><br><span class="line">    NativeSearchQuery query = queryBuilder</span><br><span class="line">            .addAggregation(AggregationBuilders.terms(<span class="string">"brands"</span>).field(<span class="string">"brand"</span>)</span><br><span class="line">            .subAggregation(AggregationBuilders.avg(<span class="string">"avg_price"</span>).field(<span class="string">"price"</span>)))</span><br><span class="line">            .withSourceFilter(<span class="keyword">new</span> FetchSourceFilterBuilder().build())</span><br><span class="line">            .build();</span><br><span class="line">    SearchHits&lt;Item&gt; itemSearchHits = restTemplate.search(query, Item<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    Aggregations aggregations = itemSearchHits.getAggregations();</span><br><span class="line">    <span class="keyword">assert</span> aggregations != <span class="keyword">null</span>;</span><br><span class="line">    ParsedStringTerms brands = aggregations.get(<span class="string">"brands"</span>);</span><br><span class="line">    brands.getBuckets().forEach(bucket -&gt; &#123;</span><br><span class="line">        System.out.print(<span class="string">"品牌名："</span> + bucket.getKeyAsString() + <span class="string">"\t数量："</span> + bucket.getDocCount());</span><br><span class="line">        ParsedAvg avg_price = bucket.getAggregations().get(<span class="string">"avg_price"</span>);</span><br><span class="line">        System.out.println(<span class="string">"\t平均价格："</span> + avg_price.getValue());</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/07/16/image-20200718001705081.png" alt="image-20200718001705081"></p><a class="btn-beautify button--animated block outline red larger" href="https://github.com/BadCode1996/elasticsearch" target="_blank" rel="noopener" title="进入项目地址"><i class="far fa-hand-point-right fa-fw"></i> 进入项目地址 </a>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Elasticsearch </tag>
            
            <tag> Kibana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo常用命令笔记</title>
      <link href="/posts/20070701.html/"/>
      <url>/posts/20070701.html/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="Hexo常用命令">Hexo常用命令</h2><h3 id="简写">简写</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="comment"># 删除生成的文件和缓存</span></span><br><span class="line">hexo g  ==&gt; hexo generate <span class="comment"># 生成静态文件</span></span><br><span class="line">hexo d ==&gt; hexo deploy <span class="comment"># 部署到网站</span></span><br><span class="line">hexo s ==&gt; hexo server <span class="comment"># 启动服务预览</span></span><br><span class="line">hexo n <span class="string">"PostsName"</span> ==&gt; hexo new <span class="string">"PostsName"</span> <span class="comment"># 新建文章</span></span><br></pre></td></tr></table></figure><h3 id="服务器">服务器</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo server <span class="comment"># Hexo会监视文件变动并且自动更新，无须重启服务器</span></span><br><span class="line">hexo server s <span class="comment"># 静态模式</span></span><br><span class="line">hexo server p <span class="number">4040</span> <span class="comment"># 更改端口号</span></span><br><span class="line">hexo server <span class="literal">-i</span> <span class="number">192.168</span>.<span class="number">1.1</span> <span class="comment"># 自定义ip</span></span><br></pre></td></tr></table></figure><h3 id="监视文件变动">监视文件变动</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate <span class="comment"># 使用Hexo生成静态文件</span></span><br><span class="line">hexo generate -<span class="literal">-watch</span> <span class="comment"># 监视文件变动</span></span><br></pre></td></tr></table></figure><h3 id="完成后部署">完成后部署</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 两个命令的作用一样</span></span><br><span class="line">hexo generate -<span class="literal">-deploy</span></span><br><span class="line">hexo deploy -<span class="literal">-generate</span></span><br><span class="line"></span><br><span class="line">hexo deploy <span class="literal">-g</span></span><br><span class="line">hexo server <span class="literal">-g</span></span><br></pre></td></tr></table></figure><h3 id="草稿">草稿</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish [<span class="type">layout</span>] &lt;title&gt;</span><br></pre></td></tr></table></figure><h3 id="模板">模板</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"postName"</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">"pageName"</span> <span class="comment">#新建页面</span></span><br><span class="line"></span><br><span class="line">hexo new photo <span class="string">"My Gallery"</span></span><br><span class="line">hexo new <span class="string">"Hello World"</span> -<span class="literal">-lang</span> tw</span><br></pre></td></tr></table></figure><h2 id="Butterfly主题使用文档">Butterfly主题使用文档</h2><h3 id="文件头">文件头</h3><h4 id="Page-Front-matter">Page Front-matter</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">type: （tags,link,categories这三个页面需要配置）</span><br><span class="line">comments: (是否需要显示评论，默认true)</span><br><span class="line">description:</span><br><span class="line">top_img: (设置顶部图)</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">key</th><th style="text-align:center">value</th></tr></thead><tbody><tr><td style="text-align:center">title</td><td style="text-align:center">标题</td></tr><tr><td style="text-align:center">date</td><td style="text-align:center">日期</td></tr><tr><td style="text-align:center">updated</td><td style="text-align:center">文章更新日期</td></tr><tr><td style="text-align:center">type</td><td style="text-align:center">类型，tags,link,categories 这三个页面需要配置</td></tr><tr><td style="text-align:center">comments</td><td style="text-align:center">是否显示评论，默认 true</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">描述</td></tr><tr><td style="text-align:center">top_img</td><td style="text-align:center">顶部图</td></tr><tr><td style="text-align:center">mathjax</td><td style="text-align:center">数学公式</td></tr><tr><td style="text-align:center">katex</td><td style="text-align:center">数学公式</td></tr><tr><td style="text-align:center">aside</td><td style="text-align:center">true 表示显示右边信息卡片，默认值；false 表示不显示</td></tr><tr><td style="text-align:center">aplayer</td><td style="text-align:center">在需要的页面加载 aplayer 的 js 和 css, 请参考文章下面的音乐 配置</td></tr><tr><td style="text-align:center">highlight_shrink</td><td style="text-align:center">【可选】配置代码框是否展开 (true/false)(默认为设置中 highlight_shrink 的配置)</td></tr></tbody></table><h4 id="Post-Front-matter">Post Front-matter</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top_img: （除非特定需要，可以不写）</span><br><span class="line">comments  是否显示评论（除非设置false,可以不写）</span><br><span class="line">cover:  缩略图</span><br><span class="line">toc:  是否显示toc （除非特定文章设置，可以不写）</span><br><span class="line">toc_number: 是否显示toc数字 （除非特定文章设置，可以不写）</span><br><span class="line">copyright: 是否显示版权 （除非特定文章设置，可以不写）</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">hide:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">key</th><th style="text-align:center">value</th></tr></thead><tbody><tr><td style="text-align:center">title</td><td style="text-align:center">标题</td></tr><tr><td style="text-align:center">date</td><td style="text-align:center">日期</td></tr><tr><td style="text-align:center">updated</td><td style="text-align:center">文章更新日期</td></tr><tr><td style="text-align:center">tags</td><td style="text-align:center">标签</td></tr><tr><td style="text-align:center">categories</td><td style="text-align:center">分类</td></tr><tr><td style="text-align:center">keywords</td><td style="text-align:center">关键字</td></tr><tr><td style="text-align:center">type</td><td style="text-align:center">类型，tags,link,categories 这三个页面需要配置</td></tr><tr><td style="text-align:center">comments</td><td style="text-align:center">是否显示评论，默认 true</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">描述</td></tr><tr><td style="text-align:center">top_img</td><td style="text-align:center">顶部图</td></tr><tr><td style="text-align:center">cover</td><td style="text-align:center">缩略图</td></tr><tr><td style="text-align:center">toc</td><td style="text-align:center">是否显示 toc （除非特定文章设置，可以不写）</td></tr><tr><td style="text-align:center">toc_number</td><td style="text-align:center">是否显示 toc 数字 （除非特定文章设置，可以不写）</td></tr><tr><td style="text-align:center">auto_open</td><td style="text-align:center">是否自动打开 TOC (默认为设置中 toc 的 auto_open 配置)</td></tr><tr><td style="text-align:center">copyright</td><td style="text-align:center">是否显示版权 （除非特定文章设置，可以不写）</td></tr><tr><td style="text-align:center">mathjax</td><td style="text-align:center">数学公式</td></tr><tr><td style="text-align:center">katex</td><td style="text-align:center">数学公式</td></tr><tr><td style="text-align:center">hide（hidden）</td><td style="text-align:center">是否隐藏（true，false）</td></tr><tr><td style="text-align:center">sticky</td><td style="text-align:center">文章置顶，数值越大越靠前</td></tr><tr><td style="text-align:center">aside</td><td style="text-align:center">true 表示显示右边信息卡片，默认值；false 表示不显示</td></tr><tr><td style="text-align:center">aplayer</td><td style="text-align:center">在需要的页面加载 aplayer 的 js 和 css, 请参考文章下面的音乐 配置</td></tr><tr><td style="text-align:center">highlight_shrink</td><td style="text-align:center">【可选】配置代码框是否展开 (true/false)(默认为设置中 highlight_shrink 的配置)</td></tr></tbody></table><h2 id="标签外挂">标签外挂</h2><h3 id="相册图库">相册图库</h3><p>写法</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"gallery-group-main"</span>&gt;</span></span></span><br><span class="line">  &#123;% galleryGroup name description link img-url %&#125; </span><br><span class="line">  &#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">  &#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>name:  图库名字</li><li>description: 图库描述</li><li>link: 连接到对应的相册</li><li>img-url: 图库封面的图片地址</li></ul><p>示例</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"gallery-group-main"</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup '壁纸' '收藏的一些日系壁纸' '/Gallery/wallpaper' https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200706171253.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup '漫威' '关于漫威的图片' '/Gallery/marvel' https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup 'OH MY GIRL' '关于OH MY GIRL的图片' '/Gallery/ohmygirl' https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/159409158.jpg" alt=""></p><h3 id="相册">相册</h3><p>用法</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 图片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><h3 id="Note">Note</h3><p>用法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">[class]   : default | primary | success | info | warning | danger.</span><br><span class="line">[no-icon] : Disable icon in note.</span><br><span class="line"></span><br><span class="line">All parameters are optional.</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note default icon"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>default<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#123;% note default icon %&#125;</span><br><span class="line">default</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note primary icon"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>primary<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#123;% note primary icon %&#125;</span><br><span class="line">primary</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note success icon"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>success<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#123;% note success icon %&#125;</span><br><span class="line">success</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note info icon"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>info<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#123;% note info icon %&#125;</span><br><span class="line">info</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note warning icon"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>warning<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#123;% note warning icon %&#125;</span><br><span class="line">warning</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note danger icon"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>danger<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#123;% note danger icon %&#125;</span><br><span class="line">danger</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note no-icon"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>primary<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#123;% note no-icon%&#125;</span><br><span class="line">无icon</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note default icon"><p>default</p></div><div class="note primary icon"><p>primary</p></div><div class="note success icon"><p>success</p></div><div class="note info icon"><p>info</p></div><div class="note warning icon"><p>warning</p></div><div class="note danger icon"><p>danger</p></div><div class="note no-icon"><p>null icon</p></div><h3 id="自定义图标及颜色">自定义图标及颜色</h3><h4 id="阿里图标">阿里图标</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">/* default */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"note icon custom iconfont iconqq"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">style</span>=<span class="string">"background: #f7f7f7;border-left-color: #777;"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>default<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">/* success */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"note icon custom iconfont iconqq"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">style</span>=<span class="string">"background: #eff8f0;border-left-color: #5cb85c;"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>success<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">/* primary */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"note icon custom iconfont iconqq"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">style</span>=<span class="string">"background: #f5f0fa;border-left-color: #6f42c1;"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>primary<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">/* info */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"note icon custom iconfont .icon-QQ"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">style</span>=<span class="string">"background: #eef7fa;border-left-color: #428bca;"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>info<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">/* warning */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"note icon custom iconfont .icon-QQ"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">style</span>=<span class="string">"background: #fdf8ea;border-left-color: #f0ad4e;"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>warning<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">/* danger */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"note icon custom iconfont .icon-QQ"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">style</span>=<span class="string">"background: #fcf1f2;border-left-color: #d9534f;"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>danger<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">genghao</span><br></pre></td></tr></table></figure><div  class="note icon custom iconfont .icon-QQ"  style="background: #f7f7f7;border-left-color: #777;">  <p>default</p></div><div  class="note icon custom iconfont .icon-QQ1"  style="background: #eff8f0;border-left-color: #5cb85c;">  <p>success</p></div><div  class="note icon custom iconfont .icon-QQ2"  style="background: #f5f0fa;border-left-color: #6f42c1;">  <p>primary</p></div><div  class="note icon custom iconfont .icon-qq"  style="background: #eef7fa;border-left-color: #428bca;">  <p>info</p></div><div  class="note icon custom iconfont iconqq"  style="background: #fdf8ea;border-left-color: #f0ad4e;">  <p>warning</p></div><div  class="note icon custom iconfont iconqq"  style="background: #fcf1f2;border-left-color: #d9534f;">  <p>danger</p></div><div class="note icon custom iconfont .icon-qq1" style="background:#f7f7f7;border-left-color:#777;--icon-color: red;"><p>QQ 图标</p></div><h4 id="fontawesome5图标">fontawesome5图标</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">/* 链接 */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"note icon font5 fa-fw fa fa-link"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">style</span>=<span class="string">"background: #eef7fa;border-left-color: #428bca;"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>info<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">/* 小喇叭 */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"note icon font5 fas fa-bullhorn"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">style</span>=<span class="string">"background: #fcf1f2;border-left-color: #d9534f;"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>info<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">/* BUG */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"note icon font5 fas fa-bug"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">style</span>=<span class="string">"background: #fcf1f2;border-left-color: #d9534f;"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>info<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">/* idea */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"note icon font5 far fa-lightbulb"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">style</span>=<span class="string">"background: #fdf8ea;border-left-color: #f0ad4e;"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>info<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div  class="note icon font5 fa-fw fa fa-link"  style="background: #eef7fa;border-left-color: #428bca;">  <p>info</p></div><div  class="note icon font5 fas fa-bullhorn"  style="background: #fcf1f2;border-left-color: #d9534f;">  <p>info</p></div><div  class="note icon font5 fas fa-bug"  style="background: #fcf1f2;border-left-color: #d9534f;">  <p>info</p></div><div  class="note icon font5 far fa-lightbulb"  style="background: #fdf8ea;border-left-color: #f0ad4e;">  <p>info</p></div><h3 id="自定义小标签">自定义小标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote red"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>默认red<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote quote"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>quote<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote info"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>info<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote done"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>done<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote success"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>success<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote danger"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>danger<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote error"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>error<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote radiation"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>radiation<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote bug"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>bug<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote idea yellow"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>idea-yellow<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote link blue"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>link- blue<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote paperclip"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>paperclip<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote todo"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>todo<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote msg cyan"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>msg cyan<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote guide"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>guide<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote download"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>download<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote up"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>up<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote undo"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>undo<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">/* 引用 */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"snote quote"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">'p subtitle'</span>&gt;</span>小标题<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">这是个引用</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="snote red"><p>默认red</p></div><div class="snote quote"><p>quote</p></div><div class="snote info"><p>info</p></div><div class="snote done"><p>done</p></div><div class="snote success"><p>success</p></div><div class="snote danger"><p>danger</p></div><div class="snote error"><p>error</p></div><div class="snote radiation"><p>radiation</p></div><div class="snote bug"><p>bug</p></div><div class="snote idea yellow"><p>idea-yellow</p></div><div class="snote link blue"><p>link- blue</p></div><div class="snote paperclip"><p>paperclip</p></div><div class="snote todo"><p>todo</p></div><div class="snote msg cyan"><p>msg cyan</p></div><div class="snote guide"><p>guide</p></div><div class="snote download"><p>download</p></div><div class="snote up"><p>up</p></div><div class="snote undo"><p>undo</p></div><div class="snote quote"><p class='p subtitle'>引用框--标题</p>引用内容</div><p>关于颜色及标记控制</p><ul><li><p>彩色图标</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">quote, info, warning, done&#x2F;success, error&#x2F;danger</span><br><span class="line"></span><br><span class="line">quote     蓝色引号</span><br><span class="line">info  蓝色叹号</span><br><span class="line">warning   黄色叹号</span><br><span class="line">done      绿色打钩</span><br><span class="line">success   绿色打钩</span><br><span class="line">error     红色禁止</span><br><span class="line">danger    红色打叉</span><br></pre></td></tr></table></figure></li><li><p>灰色图标</p><p>也可以指定颜色</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">radiation, bug, idea, link, paperclip, todo, msg, guide, download, up, undo</span><br><span class="line"></span><br><span class="line">radiation核标记</span><br><span class="line">bug    爬虫</span><br><span class="line">idea        电灯泡</span><br><span class="line">link        锁链</span><br><span class="line">paperclip   回形针</span><br><span class="line">todo        勾选框</span><br><span class="line">msg         向右箭头</span><br><span class="line">guide       指路牌</span><br><span class="line">download    下载标记</span><br><span class="line">up          上传标记</span><br><span class="line">undo        回转箭头标记</span><br></pre></td></tr></table></figure><ul><li><p>颜色</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clear, light, gray, red, yellow, green, cyan, blue</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="渐变背景标签">渐变背景标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tip'</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>默认情况<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tip info'</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>info<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tip success'</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>success<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tip error'</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>error<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tip warning'</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>warning<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tip font5 fas fa-atom'</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>自定义font5图标<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tip custom icon-QQ2'</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>自定义iconfont图标<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tip wtgo font5 fas fa-bolt"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tip ban font5 fas fa-ban"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tip home font5 fas fa-home"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tip important font5 fas fa-home"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>魔改标签4<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tip ref font5 fas fa-sync"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>魔改标签5<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tip ffa font5 fas fa-cogs"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>魔改标签6<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tip key font5 fas fa-key"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>魔改标签7<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tip socd font5 fas fa-bell"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>魔改标签8<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tip qq font5 fab fa-qq"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>魔改标签9<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div class='tip'><p>默认情况<p></div><div class='tip info'><p>info<p></div><div class='tip success'><p>success<p></div><div class='tip error'><p>error<p></div><div class='tip warning'><p>warning<p></div><div class='tip font5 fas fa-atom'><p>自定义font5图标<p></div><div class='tip custom icon-QQ2'><p>自定义iconfont图标<p></div><div class="tip wtgo font5 fas fa-bolt"><p>文字</p><p></p></div><div class="tip ban font5 fas fa-ban"><p>文字</p><p></p></div><div class="tip home font5 fas fa-home"><p>文字</p><p></p></div><div class="tip important font5 fas fa-home"><p>魔改标签4</p><p></p></div><div class="tip ref font5 fas fa-sync"><p>魔改标签5</p><p></p></div><div class="tip ffa font5 fas fa-cogs"><p>魔改标签6</p><p></p></div><div class="tip key font5 fas fa-key"><p>魔改标签7</p><p></p></div><div class="tip socd font5 fas fa-bell"><p>魔改标签8</p><p></p></div><div class="tip qq font5 fab fa-qq"><p>魔改标签9</p><p></p></div><h3 id="小标签和边框颜色">小标签和边框颜色</h3><h4 id="小标签">小标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"inline-tag [red|green|blue|yellow|grey]"</span>&gt;</span>语法<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"inline-tag red"</span>&gt;</span>红色小标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"inline-tag green"</span>&gt;</span>绿色小标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"inline-tag blue"</span>&gt;</span>蓝色小标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"inline-tag yellow"</span>&gt;</span>黄色小标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"inline-tag grey"</span>&gt;</span>灰色小标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--自定义颜色--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"inline-tag"</span> <span class="attr">style</span>=<span class="string">"--Color:#881B12"</span>&gt;</span>自定义颜色小标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><span class="inline-tag red">红色小标签</span> <span class="inline-tag green">绿色小标签</span> <span class="inline-tag blue">蓝色小标签</span> <span class="inline-tag yellow">黄色小标签</span> <span class="inline-tag grey">灰色小标签</span></p><h4 id="边框颜色">边框颜色</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"div-border [left|right|top|bottom] [red|green|blue|yellow|grey]"</span>&gt;</span></span><br><span class="line">  语法</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"div-border top red"</span>&gt;</span>上边框<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"div-border right red"</span>&gt;</span>右边框<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"div-border bottom red"</span>&gt;</span>下边框<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"div-border left red"</span>&gt;</span>左边框<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--自定义颜色--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"div-border left style="</span><span class="attr">--Color:</span>#<span class="attr">881B12</span>""&gt;</span>左边框<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p class="div-border top red">上边框</p><p class="div-border right red">右边框</p><p class="div-border bottom red">下边框</p><p class="div-border left red">左边框</p><p>预设颜色分别为 <code>red</code>、<code>green</code>、<code>blue</code>、<code>yellow</code>、<code>grey</code> 也就是小标签的五种颜色</p><h3 id="全边框和自定义颜色">全边框和自定义颜色</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"div-border"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">style</span>=<span class="string">"background-color: rgba(82,196,26,.1);border: 1px solid #52c41a;border-radius: 0.4rem;"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  全边框</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">/* 或者如下写法 */</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span></span></span><br><span class="line"><span class="tag">  <span class="attr">style</span>=<span class="string">"background-color: rgba(82,196,26,.1);border: 1px solid #52c41a;border-radius: 0.4rem;display: block;padding: 10px;"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  全边框</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">/* 内置样式 */</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"div-border green"</span>&gt;</span>绿色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"div-border red"</span>&gt;</span>红色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"div-border yellow"</span>&gt;</span>黄色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"div-border grey"</span>&gt;</span>灰色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"div-border blue"</span>&gt;</span>蓝色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p  style="background-color: rgba(82,196,26,.1);border: 1px solid #52c41a;border-radius: 0.4rem;display: block;padding: 10px;">  全边框</p><p class="div-border green">绿色</p><p class="div-border red">红色</p><p class="div-border yellow">黄色</p><p class="div-border grey">灰色</p><p class="div-border blue">蓝色</p><h3 id="隐藏内容">隐藏内容</h3><p>隐藏一些内容，需要点击才能插看</p><p><code>inline</code> 在文本里面添加按钮隐藏内容，只限文字</p><p>( content 不能包含当引号，可用 <code>'</code>)</p><p><code>block</code> 独立的 block 隐藏内容，可以隐藏很多内容，包括图片，` 代码块等等</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideInline content,display,bg,color %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><ul><li>content: 文本内容</li><li>display: 按钮显示的文字 (可选)</li><li>bg: 按钮的背景颜色 (可选)</li><li>color: 按钮文字的颜色 (可选)</li></ul><p>示例</p><p>隐藏 inline 内容 <span class="hide-inline"><button class="hide-button button--animated" style="">按钮显示的文字  </button><span class="hide-content">这是隐藏内容</span></span></p><p>隐藏 block 内容</p><div class="hide-block"><button class="hide-button button--animated" style="">这是隐藏内容    </button><span class="hide-content"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWord</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"HelloWord"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></span></div><h3 id="hideToggle">hideToggle</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--markdown写法--&gt;</span></span></span><br><span class="line">&#123;% hideToggle display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideToggle %&#125;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--html写法--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hide-toggle"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hide-button toggle-title"</span> <span class="attr">style</span>=<span class="string">""</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-caret-right fa-fw"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span>文字<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hide-content"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>默认效果<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>content: 文本内容</li><li>display: 显示的文字 (可选)</li><li>bg: 背景颜色 (可选)</li><li>color: 文字的颜色 (可选)</li></ul><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>显示文本</span></div>    <div class="hide-content"><div class="hide-toggle"><div class="hide-button toggle-title" style=""><i class="fa fa-caret-right fa-fw"></i><span>文字</span></div><div class="hide-content"><p>html默认效果</p></div></div></div></div><h3 id="mermaid">mermaid</h3><p>使用 mermaid 标签可以绘制 Flowchart（流程图）、Sequence diagram（时序图 ）、Class Diagram（类别图）、State Diagram（状态图）、Gantt（甘特图）和 Pie Chart（圆形图），具体可以查看 <a href="https://mermaid-js.github.io/mermaid/#/" target="_blank" rel="noopener">mermaid 文档</a></p><p>写法</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">pie</span><br><span class="line">title Key elements in Product X</span><br><span class="line">"Calcium" : 42.96</span><br><span class="line">"Potassium" : 50.05</span><br><span class="line">"Magnesium" : 10.01</span><br><span class="line">"Iron" : 5</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure><div class="mermaid">          pietitle 掌握技能饼图"HTML" : 42.96"Java" : 50.05"MySQL" : 10.01"Python" : 5          </div><h3 id="Checkbox-Radio">Checkbox &amp; Radio</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><p>参数列表</p><ul><li><p>颜色</p><p><code>red, yellow, green, cyan, blue</code></p></li><li><p>样式</p><p><code>plus, minus, times</code></p></li><li><p>选中状态</p><p><code>checked</code></p></li></ul><p>tag标签格式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><p>html标签格式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>纯文本测试<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox checked"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    支持简单的</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">"https://guides.github.com/features/mastering-markdown/"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">target</span>=<span class="string">"_blank"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">"noopener"</span></span></span><br><span class="line"><span class="tag">      &gt;</span>markdown<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    语法</span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox red"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>支持自定义颜色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox green checked"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>绿色 + 默认选中<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox yellow checked"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>黄色 + 默认选中<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox cyan checked"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>青色 + 默认选中<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox blue checked"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>蓝色 + 默认选中<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox plus green checked"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>增加<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox minus yellow checked"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>减少<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox times red checked"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>叉<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>纯文本测试<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox checked"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">checked</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    支持简单的</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">"https://guides.github.com/features/mastering-markdown/"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">target</span>=<span class="string">"_blank"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">"noopener"</span></span></span><br><span class="line"><span class="tag">      &gt;</span>markdown<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    语法</span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox red"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>支持自定义颜色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox green"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>绿色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox yellow"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>黄色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox cyan"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>青色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox blue"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>蓝色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="checkbox">  <input type="checkbox" />  <p>纯文本测试</p></div><div class="checkbox checked">  <input type="checkbox" checked />  <p>    支持简单的    <a      href="https://guides.github.com/features/mastering-markdown/"      target="_blank"      rel="noopener"      >markdown</a    >    语法  </p></div><div class="checkbox red">  <input type="checkbox" />  <p>支持自定义颜色</p></div><div class="checkbox green checked">  <input type="checkbox" checked />  <p>绿色 + 默认选中</p></div><div class="checkbox yellow checked">  <input type="checkbox" checked />  <p>黄色 + 默认选中</p></div><div class="checkbox cyan checked">  <input type="checkbox" checked />  <p>青色 + 默认选中</p></div><div class="checkbox blue checked">  <input type="checkbox" checked />  <p>蓝色 + 默认选中</p></div><div class="checkbox plus green checked">  <input type="checkbox" checked />  <p>增加</p></div><div class="checkbox minus yellow checked">  <input type="checkbox" checked />  <p>减少</p></div><div class="checkbox times red checked">  <input type="checkbox" checked />  <p>叉</p></div><div class="checkbox">  <input type="radio" />  <p>纯文本测试</p></div><div class="checkbox checked">  <input type="radio" checked />  <p>    支持简单的    <a      href="https://guides.github.com/features/mastering-markdown/"      target="_blank"      rel="noopener"      >markdown</a    >    语法  </p></div><div class="checkbox red">  <input type="radio" />  <p>支持自定义颜色</p></div><div class="checkbox green">  <input type="radio" />  <p>绿色</p></div><div class="checkbox yellow">  <input type="radio" />  <p>黄色</p></div><div class="checkbox cyan">  <input type="radio" />  <p>青色</p></div><div class="checkbox blue">  <input type="radio" />  <p>蓝色</p></div><h3 id="按钮">按钮</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn [url],[text],[icon],[color] [style] [layout] [position] [size] %&#125;</span><br><span class="line"></span><br><span class="line">[url]         : 链接</span><br><span class="line">[text]        : 按钮文字</span><br><span class="line">[icon]        : [可选] 图标</span><br><span class="line">[color]       : [可选] 按钮背景顔色(默认style时）</span><br><span class="line"><span class="code">                      按钮字体和边框顔色(outline时)</span></span><br><span class="line"><span class="code">                      default/blue/pink/red/purple/orange/green</span></span><br><span class="line">[style]       : [可选] 按钮样式 默认实心</span><br><span class="line"><span class="code">                      outline/留空</span></span><br><span class="line">[layout]      : [可选] 按钮佈局 默认为line</span><br><span class="line"><span class="code">                      block/留空</span></span><br><span class="line">[position]    : [可选] 按钮位置 前提是设置了layout为block 默认为左边</span><br><span class="line"><span class="code">                      center/right/留空</span></span><br><span class="line">[size]        : [可选] 按钮大小</span><br><span class="line"><span class="code">                      larger/留空</span></span><br></pre></td></tr></table></figure><h4 id="demo-1">demo 1</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is my website, click the button &#123;% btn 'https://blog.badcode.icu',BadCode's Blog %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn 'https://blog.badcode.icu',BadCode's Blog,,outline %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,outline %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,larger %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn-beautify button--animated "</span> <span class="attr">href</span>=<span class="string">"https://blog.badcode.icu"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">rel</span>=<span class="string">"noopener"</span> <span class="attr">title</span>=<span class="string">"BadCode's Blog"</span>&gt;</span>BadCode's Blog <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn-beautify button--animated "</span> <span class="attr">href</span>=<span class="string">"https://blog.badcode.icu"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">rel</span>=<span class="string">"noopener"</span> <span class="attr">title</span>=<span class="string">"BadCode's Blog"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"far fa-hand-point-right fa-fw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> BadCode's Blog <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn-beautify button--animated outline"</span> <span class="attr">href</span>=<span class="string">"https://blog.badcode.icu"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">rel</span>=<span class="string">"noopener"</span> <span class="attr">title</span>=<span class="string">"BadCode's Blog"</span>&gt;</span>BadCode's Blog <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn-beautify button--animated outline"</span> <span class="attr">href</span>=<span class="string">"https://blog.badcode.icu"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">rel</span>=<span class="string">"noopener"</span> <span class="attr">title</span>=<span class="string">"BadCode's Blog"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"far fa-hand-point-right fa-fw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> BadCode's Blog <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn-beautify button--animated larger"</span> <span class="attr">href</span>=<span class="string">"https://blog.badcode.icu"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">rel</span>=<span class="string">"noopener"</span> <span class="attr">title</span>=<span class="string">"BadCode's Blog"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"far fa-hand-point-right fa-fw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> BadCode's Blog <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a class="btn-beautify button--animated " href="https://blog.badcode.icu" target="_blank" rel="noopener" title="BadCode's Blog">BadCode’s Blog </a></p><p><a class="btn-beautify button--animated " href="https://blog.badcode.icu" target="_blank" rel="noopener" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode’s Blog </a></p><p><a class="btn-beautify button--animated outline" href="https://blog.badcode.icu" target="_blank" rel="noopener" title="BadCode's Blog">BadCode’s Blog </a></p><p><a class="btn-beautify button--animated outline" href="https://blog.badcode.icu" target="_blank" rel="noopener" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode’s Blog </a></p><p><a class="btn-beautify button--animated larger" href="https://blog.badcode.icu" target="_blank" rel="noopener" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode’s Blog </a></p><h4 id="demo-2">demo 2</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,block %&#125;</span><br><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,block center larger %&#125;</span><br><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,block right outline larger %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn-beautify button--animated block"</span> <span class="attr">href</span>=<span class="string">"https://blog.badcode.icu"</span> <span class="attr">title</span>=<span class="string">"BadCode's Blog"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"far fa-hand-point-right fa-fw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> BadCode's Blog <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn-beautify button--animated block center larger"</span> <span class="attr">href</span>=<span class="string">"https://blog.badcode.icu"</span> <span class="attr">title</span>=<span class="string">"BadCode's Blog"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"far fa-hand-point-right fa-fw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> BadCode's Blog <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn-beautify button--animated block right outline larger"</span> <span class="attr">href</span>=<span class="string">"https://blog.badcode.icu"</span> <span class="attr">title</span>=<span class="string">"BadCode's Blog"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"far fa-hand-point-right fa-fw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> BadCode's Blog <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a class="btn-beautify button--animated block" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode’s Blog </a></p><p><a class="btn-beautify button--animated block center larger" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode’s Blog </a></p><p><a class="btn-beautify button--animated block right outline larger" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode’s Blog </a></p><h4 id="demo-3">demo 3</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,larger %&#125;</span><br><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,blue larger %&#125;</span><br><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,pink larger %&#125;</span><br><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,red larger %&#125;</span><br><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,purple larger %&#125;</span><br><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,orange larger %&#125;</span><br><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,green larger %&#125;</span><br></pre></td></tr></table></figure><a class="btn-beautify button--animated larger" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode's Blog </a><a class="btn-beautify button--animated blue larger" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode's Blog </a><a class="btn-beautify button--animated pink larger" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode's Blog </a><a class="btn-beautify button--animated red larger" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode's Blog </a><a class="btn-beautify button--animated purple larger" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode's Blog </a><a class="btn-beautify button--animated orange larger" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode's Blog </a><a class="btn-beautify button--animated green larger" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode's Blog </a><h4 id="demo-4">demo 4</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-center"</span>&gt;</span></span></span><br><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,outline larger %&#125;</span><br><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,outline blue larger %&#125;</span><br><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,outline pink larger %&#125;</span><br><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,outline red larger %&#125;</span><br><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,outline purple larger %&#125;</span><br><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,outline orange larger %&#125;</span><br><span class="line">&#123;% btn 'https://blog.badcode.icu',BadCode's Blog,far fa-hand-point-right,outline green larger %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><div class="btn-center"><a class="btn-beautify button--animated outline larger" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode's Blog </a><a class="btn-beautify button--animated outline blue larger" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode's Blog </a><a class="btn-beautify button--animated outline pink larger" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode's Blog </a><a class="btn-beautify button--animated outline red larger" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode's Blog </a><a class="btn-beautify button--animated outline purple larger" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode's Blog </a><a class="btn-beautify button--animated outline orange larger" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode's Blog </a><a class="btn-beautify button--animated outline green larger" href="https://blog.badcode.icu" title="BadCode's Blog"><i class="far fa-hand-point-right fa-fw"></i> BadCode's Blog </a></div><h3 id="富文本按钮">富文本按钮</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>参数列表</p><ul><li><p>圆角样式</p><p><code>rounded, circle</code></p></li><li><p>布局方式</p><p>默认为自动宽度，适合视野内只有一两个的情况。</p><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">wide</td><td style="text-align:center">宽一点的按钮</td></tr><tr><td style="text-align:center">fill</td><td style="text-align:center">填充布局，自动铺满至少一行，多了会换行。</td></tr><tr><td style="text-align:center">center</td><td style="text-align:center">居中，按钮之间是固定间距。</td></tr><tr><td style="text-align:center">around</td><td style="text-align:center">居中分散</td></tr><tr><td style="text-align:center">grid2</td><td style="text-align:center">等宽最多 2 列，屏幕变窄会适当减少列数。</td></tr><tr><td style="text-align:center">grid3</td><td style="text-align:center">等宽最多 3 列，屏幕变窄会适当减少列数。</td></tr><tr><td style="text-align:center">grid4</td><td style="text-align:center">等宽最多 4 列，屏幕变窄会适当减少列数。</td></tr><tr><td style="text-align:center">grid5</td><td style="text-align:center">等宽最多 5 列，屏幕变窄会适当减少列数。</td></tr></tbody></table></li><li><p>增加文字样式</p><p>可以在容器内增加 <code>标题</code> 和 <code>描述文字</code></p></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell BadCode's Blog, https://blog.badcode.icu, https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg %&#125;</span><br><span class="line">&#123;% cell BadCode's Blog, https://blog.badcode.icu, https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg %&#125;</span><br><span class="line">&#123;% cell BadCode's Blog, https://blog.badcode.icu, https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg %&#125;</span><br><span class="line">&#123;% cell BadCode's Blog, https://blog.badcode.icu, https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg %&#125;</span><br><span class="line">&#123;% cell BadCode's Blog, https://blog.badcode.icu, https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/avatar.jpg %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fa fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fa fa-book %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">'fa fa-apple'</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">&#123;% p red, 专业版 %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png'</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">'fa fa-apple'</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">&#123;% p green, 免费版 %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png'</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><div class="btns circle grid5">            <a href='https://blog.badcode.icu' title='BadCode's Blog'><img src= "/img/loading.gif" data-src='https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200706095911.jpg'>BadCode's Blog</a><a href='https://blog.badcode.icu' title='BadCode's Blog'><img src= "/img/loading.gif" data-src='https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200706095911.jpg'>BadCode's Blog</a><a href='https://blog.badcode.icu' title='BadCode's Blog'><img src= "/img/loading.gif" data-src='https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200706095911.jpg'>BadCode's Blog</a><a href='https://blog.badcode.icu' title='BadCode's Blog'><img src= "/img/loading.gif" data-src='https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200706095911.jpg'>BadCode's Blog</a><a href='https://blog.badcode.icu' title='BadCode's Blog'><img src= "/img/loading.gif" data-src='https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200706095911.jpg'>BadCode's Blog</a>          </div><div class="btns rounded grid5">            <a href='/' title='下载源码'><i class='fa fa-download'></i>下载源码</a><a href='/' title='查看文档'><i class='fa fa-book'></i>查看文档</a>          </div><div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1' target="_blank" rel="noopener"><i class='fa fa-apple'></i><b>心率管家</b><p class='p red'>专业版</p><img src= "/img/loading.gif" data-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1' target="_blank" rel="noopener"><i class='fa fa-apple'></i><b>心率管家</b><p class='p green'>免费版</p><img src= "/img/loading.gif" data-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><h3 id="Tab">Tab</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab [Tab caption] [@icon] --&gt;</span></span></span><br><span class="line">Any content (support inline tags too).</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line">Unique name   : Unique name of tabs block tag without comma.</span><br><span class="line"><span class="code">                Will be used in #id's as prefix for each tab with their index numbers.</span></span><br><span class="line"><span class="code">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span></span><br><span class="line"><span class="code">                Only for current url of post/page must be unique!</span></span><br><span class="line">[index]       : Index number of active tab.</span><br><span class="line"><span class="code">                If not specified, first tab (1) will be selected.</span></span><br><span class="line"><span class="code">                If index is -1, no tab will be selected. It's will be something like spoiler.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line">[Tab caption] : Caption of current tab.</span><br><span class="line"><span class="code">                If not caption specified, unique name with tab index suffix will be used as caption of tab.</span></span><br><span class="line"><span class="code">                If not caption specified, but specified icon, caption will empty.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line">[@icon]       : FontAwesome icon name (full-name, look like 'fas fa-font')</span><br><span class="line"><span class="code">                Can be specified with or without space; e.g. 'Tab caption @icon' similar to 'Tab caption@icon'.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br></pre></td></tr></table></figure><ul><li><p>tab-id</p><p>必填，如果一个页面有多个 tabs 时，tab-id 不能重复。</p></li><li><p>tab-name</p><p>标签文本。</p></li></ul><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button data-href="#test1-1">test1 1</button></li><li class="tab"><button data-href="#test1-2">test1 2</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200706171316.jpeg" alt=""></p><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p>这里面写内容，支持的语法格式有限，请尽量不要写太过复杂的东西。</p><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div></div></div><h4 id="预设方案1：默认选择第一个">预设方案1：默认选择第一个</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button data-href="#test1-1">test1 1</button></li><li class="tab"><button data-href="#test1-2">test1 2</button></li><li class="tab"><button data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div></div></div><h4 id="预设方案2：预设选择tabs">预设方案2：预设选择tabs</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button data-href="#test2-1">test2 1</button></li><li class="tab"><button data-href="#test2-2">test2 2</button></li><li class="tab active"><button data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div></div></div><h4 id="预设方案3：没有预设值">预设方案3：没有预设值</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button data-href="#test3-1">test3 1</button></li><li class="tab"><button data-href="#test3-2">test3 2</button></li><li class="tab"><button data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div></div></div><h4 id="预设方案4：自定义tab名">预设方案4：自定义tab名</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab 第一个Tab --&gt;</span></span></span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab @fab fa-apple-pay --&gt;</span></span></span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span></span></span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button data-href="#test4-1">第一个Tab</button></li><li class="tab"><button data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="Folding">Folding</h3><p>markdown语法</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line"></span><br><span class="line">![](https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/da1fc8df33522db88a79b935010a5706.png)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><p>html语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">summary</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>查看图片测试<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/loading.gif</span></span></span><br><span class="line"><span class="tag">      <span class="attr">data-src</span>=<span class="string">"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/da1fc8df33522db88a79b935010a5706.png"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">details</span> <span class="attr">cyan</span> <span class="attr">open</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">summary</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>查看默认打开的折叠框<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个默认打开的折叠框。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">details</span> <span class="attr">green</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">summary</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>查看代码测试<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">details</span> <span class="attr">yellow</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">summary</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>查看列表测试<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>haha<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>hehe<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">details</span> <span class="attr">red</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">summary</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>查看嵌套测试<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">details</span> <span class="attr">blue</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">summary</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>查看嵌套测试2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">details</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">summary</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>查看嵌套测试3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">              hahaha</span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span></span></span><br><span class="line"><span class="tag">                &gt;</span><span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag">                <span class="attr">src</span>=<span class="string">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/loading.gif</span></span></span><br><span class="line"><span class="tag">                <span class="attr">data-src</span>=<span class="string">'https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/emoji/tieba/%E6%BB%91%E7%A8%BD.png'</span></span></span><br><span class="line"><span class="tag">                <span class="attr">style</span>=<span class="string">'height:24px'</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span></span></span><br><span class="line"><span class="tag">              &gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br></pre></td></tr></table></figure><p>参数位置可以填写颜色和状态，多个参数用空格隔开。</p><ul><li><p>颜色</p><p><code>blue, cyan, green, yellow, red</code></p></li><li><p>状态</p><p>状态填写 <code>open</code> 代表默认打开。</p></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/da1fc8df33522db88a79b935010a5706.png)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>haha</span><br><span class="line"><span class="bullet">- </span>hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/emoji/tieba/%E6%BB%91%E7%A8%BD.png'</span> <span class="attr">style</span>=<span class="string">'height:24px'</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><details ><summary> <p>查看图片测试</p> </summary>              <div class='content'>              <p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/11/da1fc8df33522db88a79b935010a5706.png" alt=""></p>              </div>            </details><details cyan open><summary> <p>查看默认打开的折叠框</p> </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details green><summary> <p>查看代码测试</p> </summary>              <div class='content'>                            </div>            </details><details yellow><summary> <p>查看列表测试</p> </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details red><summary> <p>查看嵌套测试</p> </summary>              <div class='content'>              <details blue><summary> <p>查看嵌套测试2</p> </summary>              <div class='content'>              <details ><summary> <p>查看嵌套测试3</p> </summary>              <div class='content'>              <p>hahaha <span><img src= "/img/loading.gif" data-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><h3 id="Fancybox">Fancybox</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% fancybox 参数, 列数 %&#125;</span><br><span class="line">![<span class="string">图片描述</span>](<span class="link">https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg</span>)</span><br><span class="line">![](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/67239FBB-E15D-4F4F-8EE8-0F1C9F3C4E7C.jpeg)</span><br><span class="line">&#123;% endfancybox %&#125;</span><br></pre></td></tr></table></figure><ul><li><p>对齐方向</p><p><code>left</code>, <code>center</code>, <code>right</code></p></li><li><p>缩放</p><p><code>stretch</code></p></li><li><p>列数</p><p>逗号后面直接写列数，支持 2 ～ 8 列。设定列列数之后就是「多行多图」布局，此时图片默认左对齐。为了避免图片大小不一，建议搭配 <code>stretch</code> 来时图片放大填充。</p></li></ul><h4 id="单张图片">单张图片</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"gallery "</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fancybox"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">alt</span>=<span class="string">"图片描述"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"image-caption"</span>&gt;</span></span><br><span class="line">            图片描述</span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- TAG写法（不建议）</span></span><br><span class="line"><span class="comment">&#123;% fancybox %&#125;</span></span><br><span class="line"><span class="comment">![图片描述](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)</span></span><br><span class="line"><span class="comment">&#123;% endfancybox %&#125;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><div class="gallery ">    <p>    <div class="fancybox">        <img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg"            alt="图片描述">        <span class="image-caption">            图片描述        </span>    </div>    </p></div><h4 id="一行多个图片（不换行）">一行多个图片（不换行）</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"gallery "</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fancybox"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">alt</span>=<span class="string">"图片描述"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"image-caption"</span>&gt;</span>图片描述<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fancybox"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">alt</span>=<span class="string">"图片描述"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"image-caption"</span>&gt;</span>图片描述<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fancybox"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">alt</span>=<span class="string">"图片描述"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"image-caption"</span>&gt;</span>图片描述<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- TAG写法 不推荐</span></span><br><span class="line"><span class="comment">&#123;% fancybox %&#125;</span></span><br><span class="line"><span class="comment">![图片描述](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg)</span></span><br><span class="line"><span class="comment">![图片描述](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/67239FBB-E15D-4F4F-8EE8-0F1C9F3C4E7C.jpeg)</span></span><br><span class="line"><span class="comment">![图片描述](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/00E0F0ED-9F1C-407A-9AA6-545649D919F4.jpeg)</span></span><br><span class="line"><span class="comment">&#123;% endfancybox %&#125;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><div class="gallery ">    <p>    <div class="fancybox">        <img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg"             alt="图片描述">        <span class="image-caption">图片描述</span>    </div><br>    <div class="fancybox">        <img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg"             alt="图片描述">        <span class="image-caption">图片描述</span>    </div><br>    <div class="fancybox">        <img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg"             alt="图片描述">        <span class="image-caption">图片描述</span>    </div>    </p></div><h4 id="多行多个图片">多行多个图片</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% fancybox stretch, 4 %&#125;</span><br><span class="line">![](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B951AE18-D431-417F-B3FE-A382403FF21B.jpeg)</span><br><span class="line">![](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/AEB33F9D-7294-4CF1-B8C5-3020748A9D45.jpeg)</span><br><span class="line">![](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/250662D4-5A21-4AAA-BB63-CD25CF97CFF1.jpeg)</span><br><span class="line">![](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/10A0FCE5-36A1-4AD0-8CF0-019259A89E03.jpeg)</span><br><span class="line">![](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B951AE18-D431-417F-B3FE-A382403FF21B.jpeg)</span><br><span class="line">![](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/AEB33F9D-7294-4CF1-B8C5-3020748A9D45.jpeg)</span><br><span class="line">![](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/250662D4-5A21-4AAA-BB63-CD25CF97CFF1.jpeg)</span><br><span class="line">![](https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/10A0FCE5-36A1-4AD0-8CF0-019259A89E03.jpeg)</span><br><span class="line">&#123;% endfancybox %&#125;</span><br></pre></td></tr></table></figure><div class="gallery stretch" col='4'>              <p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B951AE18-D431-417F-B3FE-A382403FF21B.jpeg" alt=""><br><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/AEB33F9D-7294-4CF1-B8C5-3020748A9D45.jpeg" alt=""><br><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/250662D4-5A21-4AAA-BB63-CD25CF97CFF1.jpeg" alt=""><br><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/10A0FCE5-36A1-4AD0-8CF0-019259A89E03.jpeg" alt=""><br><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B951AE18-D431-417F-B3FE-A382403FF21B.jpeg" alt=""><br><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/AEB33F9D-7294-4CF1-B8C5-3020748A9D45.jpeg" alt=""><br><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/250662D4-5A21-4AAA-BB63-CD25CF97CFF1.jpeg" alt=""><br><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/10A0FCE5-36A1-4AD0-8CF0-019259A89E03.jpeg" alt=""></p>            </div><h2 id="文章内音乐">文章内音乐</h2><h3 id="Aplayer">Aplayer</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;narrow&quot;: false,&#x2F;&#x2F; （可选）播放器袖珍风格</span><br><span class="line">    &quot;autoplay&quot;: true,&#x2F;&#x2F; （可选) 自动播放，移动端浏览器暂时不支持此功能</span><br><span class="line">    &quot;mode&quot;: &quot;random&quot;,&#x2F;&#x2F; （可选）曲目循环类型，有 &#39;random&#39;（随机播放）, &#39;single&#39; (单曲播放), &#39;circulation&#39; (循环播放), &#39;order&#39; (列表播放)， 默认：&#39;circulation&#39;</span><br><span class="line">    &quot;showlrc&quot;: 3,&#x2F;&#x2F; （可选）歌词显示配置项，可选项有：1,2,3</span><br><span class="line">    &quot;mutex&quot;: true,&#x2F;&#x2F; （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</span><br><span class="line">    &quot;theme&quot;: &quot;#e6d0b2&quot;,&#x2F;&#x2F; （可选）播放器风格色彩设置，默认：#b7daff</span><br><span class="line">    &quot;preload&quot;: &quot;metadata&quot;,&#x2F;&#x2F; （可选）音乐文件预载入模式，可选项： &#39;none&#39; &#39;metadata&#39; &#39;auto&#39;, 默认: &#39;auto&#39;</span><br><span class="line">    &quot;listmaxheight&quot;: &quot;513px&quot;,&#x2F;&#x2F; (可选) 该播放列表的最大长度</span><br><span class="line">    &quot;music&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;CoCo&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;Jeff Williams&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;caffeine.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;caffeine.jpeg&quot;,</span><br><span class="line">            &quot;lrc&quot;: &quot;caffeine.txt&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;アイロニ&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;鹿乃&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;irony.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;irony.jpg&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure><p>简单示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;60198&quot; &quot;netease&quot; &quot;playlist&quot; %&#125;</span><br></pre></td></tr></table></figure>    <div id="aplayer-kokJWZfS" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="60198" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>进阶示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;60198&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:340px&quot; &quot;preload:none&quot; &quot;theme:#ad7a86&quot;%&#125;</span><br></pre></td></tr></table></figure>    <div id="aplayer-MhVnDspy" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="60198" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"    ></div><h3 id="Audio">Audio</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;audio controls&#x3D;&quot;&quot; preload&#x3D;&quot;&quot; __idm_id__&#x3D;&quot;269361153&quot;&gt;</span><br><span class="line">  &lt;source</span><br><span class="line">    src&#x3D;&quot;http:&#x2F;&#x2F;music.163.com&#x2F;song&#x2F;media&#x2F;outer&#x2F;url?id&#x3D;574566207.mp3&quot;</span><br><span class="line">    type&#x3D;&quot;audio&#x2F;mp3&quot;</span><br><span class="line">  &#x2F;&gt;</span><br><span class="line">  Your browser does not support the audio tag.</span><br><span class="line">&lt;&#x2F;audio&gt;</span><br></pre></td></tr></table></figure><audio controls="" preload="" __idm_id__="269361153">  <source    src="http://music.163.com/song/media/outer/url?id=574566207.mp3"    type="audio/mp3"  />  Your browser does not support the audio tag.</audio><h2 id="轮播图">轮播图</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"demo"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="function"><span class="keyword">function</span> <span class="title">tt</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">".demo"</span>).slider(&#123;</span></span><br><span class="line">      imgList: [</span><br><span class="line">        &#123;</span><br><span class="line">          img:</span><br><span class="line"><span class="actionscript">            <span class="string">"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/13/2a877ea5da1292c817cbc2a254c01c31.png"</span>,</span></span><br><span class="line"><span class="actionscript">          a: <span class="string">"跳转url地址"</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          img:</span><br><span class="line"><span class="actionscript">            <span class="string">"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/13/5005109d1aa2ffd28984c2b02b8cbfbe.png"</span>,</span></span><br><span class="line"><span class="actionscript">          a: <span class="string">"跳转url地址"</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          img:</span><br><span class="line"><span class="actionscript">            <span class="string">"https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/13/163a2ade4361d1ed705ed523091af67e.png"</span>,</span></span><br><span class="line"><span class="actionscript">          a: <span class="string">"跳转url地址"</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">      ], <span class="comment">//图片的列表，a属性里面存放的是网络地址，img存放的是图片地址</span></span></span><br><span class="line"><span class="actionscript">      width: <span class="string">"100%"</span>, <span class="comment">//图片的宽</span></span></span><br><span class="line"><span class="actionscript">      height: <span class="number">500</span>, <span class="comment">//图片的高</span></span></span><br><span class="line"><span class="actionscript">      isAuto: <span class="literal">false</span>, <span class="comment">//是否自动轮播</span></span></span><br><span class="line"><span class="actionscript">      moveTime: <span class="number">3000</span>, <span class="comment">//运动时间</span></span></span><br><span class="line"><span class="actionscript">      direction: <span class="string">"right"</span>, <span class="comment">//轮播的方向</span></span></span><br><span class="line"><span class="actionscript">      btnWidth: <span class="number">30</span>, <span class="comment">//按钮的宽</span></span></span><br><span class="line"><span class="actionscript">      btnHeight: <span class="number">30</span>, <span class="comment">//按钮的高</span></span></span><br><span class="line"><span class="actionscript">      spanWidth: <span class="number">10</span>, <span class="comment">//span按钮的宽</span></span></span><br><span class="line"><span class="actionscript">      spanHeight: <span class="number">10</span>, <span class="comment">//span按钮的高</span></span></span><br><span class="line"><span class="actionscript">      spanColor: <span class="string">"#fff"</span>, <span class="comment">//span按钮的颜色</span></span></span><br><span class="line"><span class="actionscript">      activeSpanColor: <span class="string">"red"</span>, <span class="comment">//选中的span颜色</span></span></span><br><span class="line"><span class="actionscript">      btnBackgroundColor: <span class="string">"rgba(0, 0, 0, 0.3)"</span>, <span class="comment">//两侧按钮的颜色</span></span></span><br><span class="line"><span class="actionscript">      spanRadius: <span class="string">"50%"</span>, <span class="comment">//span按钮的圆角程度</span></span></span><br><span class="line"><span class="actionscript">      spanMargin: <span class="number">3</span>, <span class="comment">//span之间的距离</span></span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.addEventListener(<span class="string">"DOMContentLoaded"</span>, tt);</span></span><br><span class="line"><span class="actionscript">  <span class="comment">// 或者 window.addEventListener('load',tt)</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="demo"></div><script>  function tt() {    $(".demo").slider({      imgList: [        {          img:            "https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/13/2a877ea5da1292c817cbc2a254c01c31.png",          a: "跳转url地址",        },        {          img:            "https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/13/5005109d1aa2ffd28984c2b02b8cbfbe.png",          a: "跳转url地址",        },        {          img:            "https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/13/163a2ade4361d1ed705ed523091af67e.png",          a: "跳转url地址",        },      ], //图片的列表，a属性里面存放的是网络地址，img存放的是图片地址      width: "100%", //图片的宽      height: 500, //图片的高      isAuto: false, //是否自动轮播      moveTime: 3000, //运动时间      direction: "right", //轮播的方向      btnWidth: 30, //按钮的宽      btnHeight: 30, //按钮的高      spanWidth: 10, //span按钮的宽      spanHeight: 10, //span按钮的高      spanColor: "#fff", //span按钮的颜色      activeSpanColor: "red", //选中的span颜色      btnBackgroundColor: "rgba(0, 0, 0, 0.3)", //两侧按钮的颜色      spanRadius: "50%", //span按钮的圆角程度      spanMargin: 3, //span之间的距离    });  }  window.addEventListener("DOMContentLoaded", tt);  // 或者 window.addEventListener('load',tt)</script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 使用方法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo使用方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java面试题 -- MySQL面试题</title>
      <link href="/posts/20061601.html/"/>
      <url>/posts/20061601.html/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="数据库类型">数据库类型</h2><h3 id="关系型数据库">关系型数据库</h3><p>​关系型数据库是建立在关系模型上的数据库，借助于集合代数等数学概念和方法来处理数据库中的数据。简单说，关系型数据库就是由多张可以互相连接的表组成的数据库。</p><p><strong>优点：</strong></p><pre><code>1. 都是使用表结构，格式一致，方便维护2. 使用通用的SQL语言操作，使用方便，可用于复杂查询3. 数据库存储在磁盘，安全</code></pre><p><strong>缺点：</strong></p><pre><code>1. 读写性能比较差，无法满足海量数据的高效率读写；2. 不节省空间，因为建立在关系模型上，就需要遵循某些规则，比如数据库中的空值仍要分配空间3. 固定的表结构，灵活性低</code></pre><p><strong>常见的关系型数据库有哪些：</strong></p><p>​<strong>MySQL</strong>、<strong>Oracle</strong>、<strong>SQL Server</strong>、 PostgreSQL 等</p><h3 id="非关系型数据库">非关系型数据库</h3><p>​非关系型数据库又称为NoSQL（not only SQL），意为不仅仅是SQL。通常指数据以对象的形式存储在数据库中，而对象之间的关系通过每个对象自身的属性来决定。</p><p><strong>优点：</strong></p><pre><code>1. 非关系型数据库存储数据的格式可以是key-value形式、文档形式、图片形式等，使用灵活，应用场景广泛，而关系型数据库只支持基本类型。2. 速度快，效率高，NoSQL可以使用硬盘或随机存储器作为载体，而关系型数据库只能保存到磁盘。3. 海量数据的维护和处理很轻松。4. 非关系型数据库具有扩展简单、高并发、高稳定性、成本低廉的优势。5. 可以实现数据的分布式处理。</code></pre><p><strong>缺点：</strong></p><pre><code>1. 非关系型数据库暂时没有提供SQL支持，学习和使用成本较高。2. 非关系型数据库没有事务处理，没有保证数据的完整性和安全性。适合海量数据，但是不一定安全。3. 功能没有关系型数据库完善</code></pre><p><strong>常见的非关系型数据库有哪些：</strong></p><p>​<strong>Redis</strong>、<strong>MongoDB</strong>、Neo4j、Memcached、MemcacheDB、HBase等</p><h2 id="数据库引擎">数据库引擎</h2><p>​MySQL支持的数据引擎有 <strong>InnoDB</strong>、<strong>MyISAM</strong>等。</p><p>​可以使用 <strong>SHOW ENGINES</strong>; 查看<br><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200704034727.png" alt=""></p><p><strong>在这里可以看出MySQL默认使用InnoDB引擎</strong></p><p>Support 列的值表示某种引擎是否能使用 ，<strong>YES</strong>表示可用，<strong>NO</strong>不可用，<strong>DEFAULT</strong>表示默认</p><table><thead><tr><th style="text-align:center"><strong>存储引擎</strong></th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">InnoDB</td><td style="text-align:center">具备外键支持功能的事务处理引擎</td></tr><tr><td style="text-align:center">MyISAM</td><td style="text-align:center">主要的非事务处理存储引擎</td></tr><tr><td style="text-align:center">MEMORY</td><td style="text-align:center">置于内存的表</td></tr><tr><td style="text-align:center">ARCHIVE</td><td style="text-align:center">用于数据存档的引擎，数据被插入后就不能在修改了，且不支持索引。</td></tr><tr><td style="text-align:center">CSV</td><td style="text-align:center">在存储数据时，会以逗号作为数据项之间的分隔符。</td></tr><tr><td style="text-align:center">BLACKHOLE</td><td style="text-align:center">会丢弃写操作，该操作会返回空内容。</td></tr><tr><td style="text-align:center">FEDERATED</td><td style="text-align:center">将数据存储在远程数据库中，用来访问远程表的存储引擎。</td></tr><tr><td style="text-align:center">MERGE</td><td style="text-align:center">用来管理由多个 MyISAM 表构成的表集合</td></tr><tr><td style="text-align:center">NDB</td><td style="text-align:center">MySQL 集群专用存储引擎</td></tr></tbody></table><h2 id="常用数据库">常用数据库</h2><pre><code>### 0. 常用数据库排名</code></pre><p><em><strong>*<a href="https://db-engines.com/en/ranking" target="_blank" rel="noopener">DB-Engines</a>*</strong></em>  <strong>2020年6月全球数据库排行</strong></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200704035455.png" alt=""></p><p><strong>关系型数据库排名</strong></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200704035501.png" alt=""></p><p><strong>非关系型数据库排名</strong></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200704035505.png" alt=""></p><h3 id="关系型数据库-2">关系型数据库</h3><ol><li><p>Oracle</p><p><strong>Oracle</strong>是甲骨文的一款关系型数据库管理系统，在数据库领域一直处于领先的地位， 是目前世界上流行的关系型数据库之一 ，是一种高效率、可靠性好、适应高吞吐量的数据库方案。</p><p><strong>优点：</strong></p><pre><code>1. 可移植性好，可以在所有主流平台运行，完全支持所有工业化标准。2. 获得最高级认证级别的ISO标准认证，安全性高。3. 与其他数据库相比，Oracle性能高4. 多层次网络计算，支持多种标准，可以用ODBC、JDBC、OCI等网络客户连接5. 完全向下兼容，因此被广泛使用，且风险低</code></pre><p><strong>缺点：</strong></p><pre><code>1. 对硬件的要求高2. 价格昂贵3. 管理维护麻烦4. 操作比较复杂</code></pre></li><li><p>MySQL</p><p>MySQL 是一种开放源代码的关系型数据库管理系统 ，在WEB应用方面，MySQL是最好的应用软件之一</p><p><strong>优点：</strong></p><pre><code>1. 性能卓越服务稳定，很少出现宕机。2. 开源，自主性强，使用成本低3.  历史悠久、社区及用户非常活跃，遇到问题，可以很快获取到帮助。 4.  件体积小，安装使用简单，并且易于维护，安装及维护成本低。 5.  支持多种操作系统，提供多种 API 接口，支持多种开发语言。 </code></pre><p><strong>缺点：</strong></p><pre><code>1.  ySQL 最大的缺点是其安全系统，主要是复杂而非标准，只有调用 mysqladmin 来重读用户权限才会发生改变。 2.   MySQL 不允许调试存储过程，开发和维护存储过程很难。 3.   MySQL 不支持热备份。 4.   MySQL 的价格随平台和安装方式变化。 </code></pre></li></ol><h3 id="非关系型数据库-2">非关系型数据库</h3><ol><li><p>Redis</p><p><a href="http://c.biancheng.net/redis/" target="_blank" rel="noopener">Redis</a> 是当前互联网世界最为流行的 <a href="http://c.biancheng.net/nosql/" target="_blank" rel="noopener">NoSQL</a>（Not Only SQL）数据库。</p><ol><li><p>响应快速</p><p>Redis 响应非常快，每秒可以执行大约 110 000 个写入操作，或者 81 000 个读操作，其速度远超数据库。如果存入一些常用的数据，就能有效提高系统的性能。</p></li><li><p>支持6中数据类型</p><p>它们是<strong>字符串</strong>、<strong>哈希结构</strong>、<strong>列表</strong>、<strong>集合</strong>、<strong>可排序集合</strong>和<strong>基数</strong>。比如对于字符串可以存入一些 Java基础数据类型，哈希可以存储对象，列表可以存储 List 对象等。这使得在应用中很容易根据自己的需要选择存储的数据类型，方便开发。</p><p>对于 Redis 而言，虽然只有 6 种数据类型，但是有两大好处：一方面可以满足存储各种数据结构体的需要；另外一方面数据类型少，使得规则就少，需要的判断和逻辑就少，这样读/写的速度就更快。</p></li><li><p>操作都是原子的</p><p>所有 Redis 的操作都是原子的，从而确保当两个客户同时访问 Redis 服务器时，得到的是更新后的值（最新值）。  在需要高并发的场合可以考虑使用 Redis 的事务，处理一些需要锁的业务。</p></li></ol></li></ol><h2 id="MySQL数据库的事务特性">MySQL数据库的事务特性</h2><h3 id="事务概念">事务概念</h3><p>​事务就是一个程序执行单元，里面的操作要么全部执行完成，要么全部都不执行</p><h3 id="事务特性（ACID）">事务特性（ACID）</h3><p>​事务有4个非常重要的特性</p><pre><code>1. Atomicity 原子性 ：事务是不可分割的整体，所有操作要么全做，要么全不做；只要事务中有一个操作出错，回滚到事务开始前状态，即之前已经执行的操作无效2. Consistency 一致性：事务执行后，从一个一致性状态到另一个一致性状态；比如A向B转账，（A、B总金额是一个一致性状态）不可能出现A扣了钱，但B没收到3. Isolation 隔离性：多个事务之间相互隔离，互不干扰4. Durablity 持久性：事务完成后，对数据库的更改是永久保存的，不能回滚</code></pre><h3 id="事务并发问题">事务并发问题</h3><pre><code>1. 脏读：一个事务读取到了另一个事务未提交的数据2. 幻读：多次读取到的结果不一致。（被另一个事物新增 或 删除了记录）3. 不可重复读：一个事务多次读取同一数据，得到了不同的值。（被另一个事务更新了）</code></pre><h3 id="事务隔离级别">事务隔离级别</h3><ol><li><p>读未提交（read-uncommitted）</p></li><li><p>读已提交（read-committed）解决脏读</p></li><li><p>可重复读（Repeatable read）解决脏读、不可重复读</p></li><li><p>串行化（Serializable）解决脏读，不可重复读、幻读</p><p>MySQL默认隔离级别是<strong>Repeatable read</strong>，级别越高，性能就越低</p><ol><li>查看当前会话隔离级别</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> @@tx_isolation;</span><br></pre></td></tr></table></figure><ol start="2"><li>查看系统当前隔离级别</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> @@global.tx_isolation;</span><br></pre></td></tr></table></figure><ol start="3"><li>设置当前会话隔离级别</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> isolatin <span class="keyword">level</span> repeatable <span class="keyword">read</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li>设置系统当前隔离级别</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> repeatable <span class="keyword">read</span>;</span><br></pre></td></tr></table></figure><p>Oracle默认隔离级别是<strong>read-committed</strong>，读已提交<br>Oracle数据库支持READ COMMITTED 和 SERIALIZABLE这两种事务隔离级别。</p><ol><li>查看系统默认事务隔离级别,也是当前会话隔离级别</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 首先创建一个事务</span></span><br><span class="line"><span class="keyword">declare</span></span><br><span class="line">    trans_id <span class="built_in">Varchar2</span>(<span class="number">100</span>);</span><br><span class="line">   <span class="keyword">begin</span></span><br><span class="line">    trans_id := dbms_transaction.local_transaction_id( <span class="literal">TRUE</span> );</span><br><span class="line">   <span class="keyword">end</span>; </span><br><span class="line"><span class="comment">-- 查看事务隔离级别</span></span><br><span class="line"><span class="keyword">SELECT</span> s.sid, s.serial<span class="comment">#,</span></span><br><span class="line">    <span class="keyword">CASE</span> BITAND(t.flag, <span class="keyword">POWER</span>(<span class="number">2</span>, <span class="number">28</span>))</span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">0</span> <span class="keyword">THEN</span> <span class="string">'READ COMMITTED'</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">'SERIALIZABLE'</span></span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">AS</span> isolation_level</span><br><span class="line"><span class="keyword">FROM</span> v$<span class="keyword">transaction</span> t</span><br><span class="line"><span class="keyword">JOIN</span> v$<span class="keyword">session</span> s <span class="keyword">ON</span> t.addr = s.taddr <span class="keyword">AND</span> s.sid = sys_context(<span class="string">'USERENV'</span>, <span class="string">'SID'</span>);</span><br></pre></td></tr></table></figure></li></ol><a class="btn-beautify button--animated pink block right outline larger" href="https://blog.badcode.icu/posts/20073101.html/" title="SQL面试题（学生表-课程表-成绩表-教师表）"><i class="far fa-hand-point-right fa-fw"></i> SQL面试题（学生表-课程表-成绩表-教师表） </a>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 面试题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 面试 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL面试题（学生表-课程表-成绩表-教师表）</title>
      <link href="/posts/20073101.html/"/>
      <url>/posts/20073101.html/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="表结构">表结构</h2><ul><li>tb_student(s_id, name, age, sex)学生表</li><li>tb_course(c_id, name, t_id)课程表</li><li>tb_student_course(s_id, c_id, score)成绩表</li><li>tb_teacher(t_id, name)教师表</li></ul><h2 id="建表语句">建表语句</h2><p>可以复制下面的SQL语句，也可以<a href="https://cdn.jsdelivr.net/gh/BadCode1996/BadCode1996.github.io/tb_course.sql" target="_blank" rel="noopener">点此下载sql文件</a></p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button data-href="#test1-1">建表语句</button></li><li class="tab"><button data-href="#test1-2">插入数据</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Navicat Premium Data Transfer</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Source Server         : mysql</span></span><br><span class="line"><span class="comment"> Source Server Type    : MySQL</span></span><br><span class="line"><span class="comment"> Source Server Version : 80020</span></span><br><span class="line"><span class="comment"> Source Host           : localhost:3306</span></span><br><span class="line"><span class="comment"> Source Schema         : demo</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Target Server Type    : MySQL</span></span><br><span class="line"><span class="comment"> Target Server Version : 80020</span></span><br><span class="line"><span class="comment"> File Encoding         : 65001</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Date: 31/07/2020 01:30:56</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">NAMES</span> utf8mb4;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for tb_course</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`tb_course`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tb_course`</span>  (</span><br><span class="line">  <span class="string">`c_id`</span> <span class="built_in">int</span>(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`t_id`</span> <span class="built_in">int</span>(<span class="number">0</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`c_id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8 <span class="keyword">COLLATE</span> = utf8_general_ci ROW_FORMAT = <span class="keyword">Compact</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for tb_student</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`tb_student`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tb_student`</span>  (</span><br><span class="line">  <span class="string">`s_id`</span> <span class="built_in">int</span>(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`age`</span> <span class="built_in">int</span>(<span class="number">0</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`sex`</span> <span class="built_in">varchar</span>(<span class="number">8</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`s_id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8 <span class="keyword">COLLATE</span> = utf8_general_ci ROW_FORMAT = <span class="keyword">Compact</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for tb_student_course</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`tb_student_course`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tb_student_course`</span>  (</span><br><span class="line">  <span class="string">`s_id`</span> <span class="built_in">int</span>(<span class="number">0</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`c_id`</span> <span class="built_in">int</span>(<span class="number">0</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`score`</span> <span class="built_in">int</span>(<span class="number">0</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span></span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8 <span class="keyword">COLLATE</span> = utf8_general_ci ROW_FORMAT = <span class="keyword">Compact</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for tb_teacher</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`tb_teacher`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tb_teacher`</span>  (</span><br><span class="line">  <span class="string">`t_id`</span> <span class="built_in">int</span>(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`t_id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8 <span class="keyword">COLLATE</span> = utf8_general_ci ROW_FORMAT = <span class="keyword">Compact</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of tb_course</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_course`</span> <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'语文'</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_course`</span> <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">'数学'</span>, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_course`</span> <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">'英语'</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_course`</span> <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">'物理'</span>, <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of tb_student</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student`</span> <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'刘一'</span>, <span class="number">18</span>, <span class="string">'男'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student`</span> <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">'钱二'</span>, <span class="number">19</span>, <span class="string">'女'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student`</span> <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">'张三'</span>, <span class="number">17</span>, <span class="string">'男'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student`</span> <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">'李四'</span>, <span class="number">18</span>, <span class="string">'女'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student`</span> <span class="keyword">VALUES</span> (<span class="number">5</span>, <span class="string">'王五'</span>, <span class="number">17</span>, <span class="string">'男'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student`</span> <span class="keyword">VALUES</span> (<span class="number">6</span>, <span class="string">'赵六'</span>, <span class="number">19</span>, <span class="string">'女'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of tb_student_course</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="number">1</span>, <span class="number">56</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="number">2</span>, <span class="number">78</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="number">3</span>, <span class="number">67</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="number">4</span>, <span class="number">58</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="number">1</span>, <span class="number">79</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="number">2</span>, <span class="number">81</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="number">3</span>, <span class="number">92</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="number">4</span>, <span class="number">68</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="number">1</span>, <span class="number">91</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="number">2</span>, <span class="number">47</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="number">3</span>, <span class="number">88</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="number">4</span>, <span class="number">56</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="number">2</span>, <span class="number">88</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="number">3</span>, <span class="number">90</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="number">4</span>, <span class="number">93</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">5</span>, <span class="number">1</span>, <span class="number">46</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">5</span>, <span class="number">3</span>, <span class="number">78</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">5</span>, <span class="number">4</span>, <span class="number">53</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">6</span>, <span class="number">1</span>, <span class="number">35</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">6</span>, <span class="number">2</span>, <span class="number">68</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_student_course`</span> <span class="keyword">VALUES</span> (<span class="number">6</span>, <span class="number">4</span>, <span class="number">71</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of tb_teacher</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_teacher`</span> <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'叶平'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_teacher`</span> <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">'贺高'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_teacher`</span> <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">'杨艳'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_teacher`</span> <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">'周磊'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_teacher`</span> <span class="keyword">VALUES</span> (<span class="number">5</span>, <span class="string">'李雷'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`tb_teacher`</span> <span class="keyword">VALUES</span> (<span class="number">6</span>, <span class="string">'李想'</span>);</span><br></pre></td></tr></table></figure><button class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="问题">问题</h2><ul><li><p>1、查询“001”课程比“002”课程成绩高的所有学生的学号:</p><div class="hide-block"><button class="hide-button button--animated" style="">查看sql语句    </button><span class="hide-content"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.s_id <span class="keyword">from</span></span><br><span class="line">( <span class="keyword">select</span> s_id, score <span class="keyword">from</span> tb_student_course <span class="keyword">where</span> c_id = <span class="number">1</span> ) a,</span><br><span class="line">(<span class="keyword">select</span> s_id, score <span class="keyword">from</span> tb_student_course <span class="keyword">where</span> c_id = <span class="number">2</span> ) b </span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">a.score &gt; b.score</span><br><span class="line"><span class="keyword">and</span> a.s_id = b.s_id;</span><br></pre></td></tr></table></figure></span></div></li><li><p>2、查询平均成绩大于60分的同学的学号和平均成绩；<br>select s_id,avg(score) from sc GROUP BY s_id having AVG(score) &gt; 60;</p></li><li><p>3、查询所有同学的学号、姓名、选课数、总成绩；</p></li></ul><p>select s_id as 学号,s_name as 姓名 from student;<br>select count(c_id) as 选课数,sum(score) as 总成绩 from sc group by s_id;</p><p>select s.s_id as 学号,s.s_name as 姓名, count(a.c_id) as 选课数,sum(a.score) as 总成绩 from student s left join sc a on s.s_id = a.s_id group by s.s_id;</p><ul><li>4、查询姓“李”的老师的个数；<br>select count(t_name) from teacher where t_name like ‘李%’;</li><li>5、查询没学过“叶平”老师课的同学的学号、姓名；<br>select sc.* from course,teacher,sc where teacher.t_name = ‘叶平’ and teacher.t_id = course.t_id and course.c_id = sc.c_id;<br>select s_id,s_name from student where s_id not in (1,2,3,5,6);</li></ul><p>select s_id,s_name from student where s_id not in (select sc.s_id from course,teacher,sc where teacher.t_name = ‘叶平’ and teacher.t_id = course.t_id and course.c_id = sc.c_id);</p><ul><li><p>6、查询学过“001”并且也学过编号“002”课程的同学的学号、姓名；</p></li><li><p>7、查询学过“叶平”老师所教的所有课的同学的学号、姓名；<br>select s_id,s_name from student where s_id in (select sc.s_id from course,teacher,sc where teacher.t_name = ‘叶平’ and teacher.t_id = course.t_id and course.c_id = sc.c_id);</p></li><li><p>8、查询课程编号“002”的成绩比课程编号“001”课程低的所有同学的学号、姓名</p></li><li><p>9、查询所有课程成绩小于60分的同学的学号、姓名；</p></li><li><p>10、查询没有学全所有课的同学的学号、姓名；<br>select student.s_id,student.s_name from student left join sc on student.s_id = sc.s_id having count(sc.c_id) &lt; 4 group by sc.s_id;</p></li><li><p>11、查询至少有一门课与学号为“1001”的同学所学相同的同学的学号和姓名；</p></li><li><p>12、查询至少学过学号为“001”同学所有一门课的其他同学学号和姓名；</p></li><li><p>13、把“SC”表中“叶平”老师教的课的成绩都更改为此课程的平均成绩；</p></li><li><p>14、查询和“1002”号的同学学习的课程完全相同的其他同学学号和姓名；</p></li><li><p>15、删除学习“叶平”老师课的SC表记录；</p></li><li><p>16、向SC表中插入一些记录，这些记录要求符合以下条件：没有上过编号“003”课程的同学学号、2、 号课的平均成绩；</p></li><li><p>17、按平均成绩从高到低显示所有学生的“数据库”、“企业管理”、“英语”三门的课程成绩，按如下形式显示： 学生ID,数据库,企业管理,英语,有效课程数,有效平均分</p></li><li><p>18、查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分</p></li><li><p>19、按各科平均成绩从低到高和及格率的百分数从高到低顺序</p></li><li><p>20、查询如下课程平均成绩和及格率的百分数(用&quot;1行&quot;显示): 企业管理（001），马克思（002），OO&amp;UML （003），数据库（004）</p></li><li><p>21、查询不同老师所教不同课程平均分从高到低显示</p></li><li><p>22、查询如下课程成绩第 3 名到第 6 名的学生成绩单：企业管理（001），马克思（002），UML （003），数据库（004）</p></li><li><pre><code>[学生ID],[学生姓名],企业管理,马克思,UML,数据库,平均成绩 </code></pre></li><li><p>23、统计列印各科成绩,各分数段人数:课程ID,课程名称,[100-85],[85-70],[70-60],[ &lt;60]</p></li><li><p>24、查询学生平均成绩及其名次</p></li><li><p>25、查询各科成绩前三名的记录:(不考虑成绩并列情况)</p></li><li><p>26、查询每门课程被选修的学生数</p></li><li><p>27、查询出只选修了一门课程的全部学生的学号和姓名</p></li><li><p>28、查询男生、女生人数</p></li><li><p>29、查询姓“张”的学生名单</p></li><li><p>30、查询同名同性学生名单，并统计同名人数</p></li><li><p>31、1981年出生的学生名单(注：Student表中Sage列的类型是datetime)</p></li><li><p>32、查询每门课程的平均成绩，结果按平均成绩升序排列，平均成绩相同时，按课程号降序排列</p></li><li><p>33、查询平均成绩大于85的所有学生的学号、姓名和平均成绩</p></li><li><p>34、查询课程名称为“数据库”，且分数低于60的学生姓名和分数</p></li><li><p>35、查询所有学生的选课情况；</p></li><li><p>36、查询任何一门课程成绩在70分以上的姓名、课程名称和分数；</p></li><li><p>37、查询不及格的课程，并按课程号从大到小排列</p></li><li><p>38、查询课程编号为003且课程成绩在80分以上的学生的学号和姓名；</p></li><li><p>39、求选了课程的学生人数</p></li><li><p>40、查询选修“叶平”老师所授课程的学生中，成绩最高的学生姓名及其成绩</p></li><li><p>41、查询各个课程及相应的选修人数</p></li><li><p>42、查询不同课程成绩相同的学生的学号、课程号、学生成绩</p></li><li><p>43、查询每门功成绩最好的前两名</p></li><li><p>44、统计每门课程的学生选修人数（超过10人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，查询结果按人数降序排列，若人数相同，按课程号升序排列</p></li><li><p>45、检索至少选修两门课程的学生学号</p></li><li><p>46、查询全部学生都选修的课程的课程号和课程名</p></li><li><p>47、查询没学过“叶平”老师讲授的任一门课程的学生姓名</p></li><li><p>48、查询两门以上不及格课程的同学的学号及其平均成绩</p></li><li><p>49、检索“004”课程分数小于60，按分数降序排列的同学学号</p></li><li><p>50、删除“002”同学的“001”课程的成绩</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 面试题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java面试题 --- final、finally、finalize的区别</title>
      <link href="/posts/20061502.html/"/>
      <url>/posts/20061502.html/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="final">final</h2><ol><li><p>基本介绍</p><p>​<strong>final</strong>是Java中的关键字，修饰符，可用来修饰属性、方法、类</p><p>1.1、修饰属性，表示修饰的属性不可更改</p><p>​被声明为final的变量，必须在声明时给定初始值，在以后的引用中，只能使用，不能修改</p><p>1.2、修饰方法，表示修饰的方法不可被覆盖（重写）</p><p>​被声明为final的方法只能使用，不可以修改</p><p>1.3、修饰类，表示修饰的类不可被继承</p><p>​如果一个类被声明了final，就说明它不可能再派生出新的子类，因此，用一个类<strong>不可以同时</strong>声明为<strong>abstract抽象类</strong>和<strong>final</strong>的类</p></li><li><p>详细介绍</p><ol><li><p>修饰属性</p><p>​如果final修饰的是基本数据类型，表示这个变量被赋予的值是不可更改的，即它是个常量；</p><p>​如果final修饰的是一个对象，表示这个变量被赋予的引用是不可改变的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> A = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">final</span> User USER = <span class="keyword">new</span> User();</span><br><span class="line">    </span><br><span class="line"><span class="comment">//    编译报错，被final修饰的变量或对象，初始化后都不可被再次改变</span></span><br><span class="line"><span class="comment">//    A = 20;</span></span><br><span class="line"><span class="comment">//    USER = new User();</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​如果一个<strong>变量</strong>或<strong>方法参数</strong>被final修饰，就表示它只能被赋值一次，但是JVM虚拟机为变量设定的默认值不记作一次赋值。被final修饰的变量必须被初始化，初始化的几种方式：</p><p>​1、在定义的时候初始化</p><p>​2、可以在初始化块中初始化，不可以在静态初始化块中初始化</p><p>​3、静态final变量可以在定义时初始化，也可以在静态初始化块中初始化，但不可以在初始化块中初始化</p><p>​4、final变量可以在类的构造器内初始化，但是静态final不可以</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"><span class="comment">//    在定义时初始化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> A1 = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> A2 = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    在初始化块中初始化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> B1;&#123; B1 = <span class="number">10</span>; &#125;</span><br><span class="line"><span class="comment">//    public static final int B2;&#123; B2 = 10; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    在静态初始化块中初始化</span></span><br><span class="line"><span class="comment">//    public final int C1;static &#123; C1 = 10; &#125;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> C2;<span class="keyword">static</span> &#123; C2 = <span class="number">10</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    在构造函数中初始化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> D1;</span><br><span class="line"><span class="comment">//    public static final int D2;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Demo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        D1 = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//        D2 = 10;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">初始化</th><th style="text-align:center">在定义时</th><th style="text-align:center">在初始化块中</th><th style="text-align:center">在静态初始化块中</th><th style="text-align:center">在构造函数中</th></tr></thead><tbody><tr><td style="text-align:center">静态常量</td><td style="text-align:center">√</td><td style="text-align:center"></td><td style="text-align:center">√</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">非静态常量</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center"></td><td style="text-align:center">√</td></tr></tbody></table></li><li><p>修饰方法</p><p>当final修饰一个方法时，表示这个方法不可被子类重写，但还是可以继承的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello World!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"People eat meat"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">eating</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"People eat meat......"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">People</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*public void say()&#123;</span></span><br><span class="line"><span class="comment">        System.out.println("你好");</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Student eat vegetable"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">eating</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Student eat vegetable......"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Student student = <span class="keyword">new</span> Student();</span><br><span class="line"></span><br><span class="line">        student.say();  <span class="comment">//输出结果：Hello World!</span></span><br><span class="line">        student.eat();  <span class="comment">//输出结果：Student eat vegetable</span></span><br><span class="line">        student.eating();   <span class="comment">//输出结果：Student eat vegetable......</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具有private权限的方法也可以用final修饰，但是由于子类无法继承private方法，因此也无法重写。</p><p>编译器在处理private方法时，是按照被final修饰的方法来处理，这样可以提高该方法被调用时的效率。</p><p>子类仍然可以定义与父类中private方法具有同样结构的同名方法，但是这并不是重写，二者并无关联</p></li><li><p>修饰类</p><p>final修饰的类不可被继承，比如String类，就是final修饰的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">String</span></span></span><br><span class="line"><span class="class">    <span class="keyword">implements</span> <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span>, <span class="title">Comparable</span>&lt;<span class="title">String</span>&gt;, <span class="title">CharSequence</span> </span>&#123;</span><br><span class="line">...<span class="comment">//code</span></span><br><span class="line">    ...<span class="comment">//code</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于abstract关键字修饰的类为抽象类，其方法为抽象方法，需要有其子类来重载实现抽象方法，因此abstract关键字和final关键字不可同时用来修饰一个类。</p><p>同理，final也不可用来修饰接口。</p><p>final修饰的类的所有方法都不可被重写，但其中没有被final修饰的变量可以被修改</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Demo demo = <span class="keyword">new</span> Demo();</span><br><span class="line">        demo.a = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//        demo.b = 200;</span></span><br><span class="line">        System.out.println(demo.a);<span class="comment">//输出结果：100</span></span><br><span class="line">        System.out.println(demo.b);<span class="comment">//输出结果：20</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h2 id="finally">finally</h2><p>​finally作为异常处理的一部分，只能用在try…catch语句中，并且附带着一个语句块，表示这段语句最终一定会执行，<strong>经常被用在需要释放资源的情况下</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"程序结束，finally语句块执行"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 输出结果</span></span><br><span class="line"><span class="comment">java.lang.ArithmeticException: / by zero</span></span><br><span class="line"><span class="comment">at com.demo.Demo.main(Demo.java:4)</span></span><br><span class="line"><span class="comment">程序结束，finally语句块执行</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><p>很多人认为finally语句块一定会执行，其实是不一定</p><ol><li><p>try/catch语句块没有执行到，程序就结束了，finally语句块无法执行</p><p>方法被返回，执行了return语句；</p><p>在try/catch之前，出现了异常，程序中断；</p></li><li><p>执行到try/catch，但Java虚拟机被终止运行</p><p>在try语句块内执行了System.exit(0); JVM终止</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//没有执行到try/catch语句块，finally不会执行</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//i = i / 0;</span></span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            i = i/<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"程序结束，finally语句块执行"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Demo demo = <span class="keyword">new</span> Demo();</span><br><span class="line">        <span class="keyword">int</span> test = demo.test(<span class="number">1</span>);</span><br><span class="line">        System.out.println(test);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//程序中止</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.exit(<span class="number">0</span>);<span class="comment">//在try语句块中，中止程序，finally语句块无法执行</span></span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"程序结束，finally语句块执行"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="finalize">finalize</h2><p>finalize是Object类的一个方法，它的方法定义如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">finalize</span><span class="params">()</span> <span class="keyword">throws</span> Throwable </span>&#123; &#125;</span><br></pre></td></tr></table></figure><p>finalize()是GC（ garbagecollector 垃圾回收器）运行机制的一部分。finalize()方法是在GC清理它所丛属的对象时被调用的，如果在执行它的过程中抛出了无法捕获的异常，GC将终止这次对该对象的清理，并且该异常会被忽略，知道下一次GC开始清理这个对象时，会再次调用finalize()方法</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 面试题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java面试题 -- ==和equals的区别</title>
      <link href="/posts/20061501.html/"/>
      <url>/posts/20061501.html/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="“-”的含义">“==”的含义</h3><p>在Java中，主要有两个作用</p><h4 id="比较基本数据类型（byte、short、int、long、float、double、char、boolean）">比较基本数据类型（byte、short、int、long、float、double、char、boolean）</h4><p>比较值是否相等，比如两个int类型，比较的是两个变量值是否相等</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">12</span>;</span><br><span class="line">    System.out.println(a == b);<span class="comment">//输出结果：false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="比较引用数据类型（数组、类、接口）">比较引用数据类型（数组、类、接口）</h4><p>比较的是引用地址是否相同</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">User user1 = <span class="keyword">new</span> User(<span class="string">"张三"</span>, <span class="number">20</span>);</span><br><span class="line">User user2 = <span class="keyword">new</span> User(<span class="string">"张三"</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//System.identityHashCode(Object)方法可以返回对象的内存地址</span></span><br><span class="line">System.out.println(System.identityHashCode(user1));<span class="comment">//输出结果：603742814</span></span><br><span class="line">System.out.println(System.identityHashCode(user2));<span class="comment">//输出结果：1067040082</span></span><br><span class="line"></span><br><span class="line">System.out.println(user1 == user2);<span class="comment">//输出结果：false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="“equals”的含义">“equals”的含义</h3><p>在Java中，Object类里有equals方法，String类里也有equals方法</p><ol><li><p>Object类中的equals</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>   obj   the reference object with which to compare.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>  &#123;<span class="doctag">@code</span> true&#125; if this object is the same as the obj</span></span><br><span class="line"><span class="comment"> *          argument; &#123;<span class="doctag">@code</span> false&#125; otherwise.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span>     #hashCode()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span>     java.util.HashMap</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">this</span> == obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>阅读源码发现，比较的是当前对象的引用和obj的引用是否相同，也就是说<strong>默认比较的是地址</strong>。</p><p>其中<strong>return (this == obj);</strong> 使用的也是**“==”<strong>进行判断，所以，在这里 <strong>==</strong> 比较的是引用的地址，而</strong>equals<strong>也是比较的引用的地址，所以，</strong>==<strong>和</strong>equals**在这里的效果是一样的，都是比较引用的地址。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">User user1 = <span class="keyword">new</span> User(<span class="string">"张三"</span>, <span class="number">20</span>);</span><br><span class="line">    User user2 = <span class="keyword">new</span> User(<span class="string">"张三"</span>, <span class="number">20</span>);</span><br><span class="line"><span class="comment">//  比较的是普通对象User，==和equals的作用是一样的</span></span><br><span class="line">    System.out.println(user1 == user2);<span class="comment">//输出结果：false</span></span><br><span class="line">System.out.println(user1.equals(user2));<span class="comment">//输出结果：false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>String类中的equals</p><p>Object对象里的 == 和 equals 没什么区别，意义不大，所以String在Object的基础上重写了equals。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  anObject</span></span><br><span class="line"><span class="comment"> *         The object to compare this &#123;<span class="doctag">@code</span> String&#125; against</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>  &#123;<span class="doctag">@code</span> true&#125; if the given object represents a &#123;<span class="doctag">@code</span> String&#125;</span></span><br><span class="line"><span class="comment"> *          equivalent to this string, &#123;<span class="doctag">@code</span> false&#125; otherwise</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span>  #compareTo(String)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span>  #equalsIgnoreCase(String)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object anObject)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span> == anObject) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (anObject <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">        String anotherString = (String)anObject;</span><br><span class="line">        <span class="keyword">int</span> n = value.length;</span><br><span class="line">        <span class="keyword">if</span> (n == anotherString.value.length) &#123;</span><br><span class="line">            <span class="keyword">char</span> v1[] = value;</span><br><span class="line">            <span class="keyword">char</span> v2[] = anotherString.value;</span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (n-- != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (v1[i] != v2[i])</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将此字符串与指定对象进行比较。当且仅当参数不是 null 且是一个 String 对象，表示与此对象相同的字符序列时，结果为 true 。</p><p>String类中的equals方法比较的是字符串内容是否一致。</p><p>注意：像String、Date这些重写了equals的类，使用的时候会与Object类的equals不一样</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    String str1 = <span class="string">"Hello"</span>;</span><br><span class="line">    String str2 = <span class="keyword">new</span> String(<span class="string">"Hello"</span>);</span><br><span class="line">    String str3 = str2;</span><br><span class="line"></span><br><span class="line">    System.out.println(str1 == str2);       <span class="comment">//输出结果：false</span></span><br><span class="line">    System.out.println(str1 == str3);       <span class="comment">//输出结果：false</span></span><br><span class="line">    System.out.println(str2 == str3);       <span class="comment">//输出结果：true</span></span><br><span class="line">    System.out.println(str1.equals(str2));  <span class="comment">//输出结果：true</span></span><br><span class="line">    System.out.println(str1.equals(str3));  <span class="comment">//输出结果：true</span></span><br><span class="line">    System.out.println(str2.equals(str3));  <span class="comment">//输出结果：true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>内存解释</p><p>在Java中，一般把对象放在堆区，对象的引用放在栈区。</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200704025413.png" alt=""></p><p>3.1String str1 = “Hello”; 是在堆区存放一个字符串对象<br>3.2String str2 = new String(“Hello”); 是在堆区重新存放一个字符串对象</p><p>3.3String str3 = str2;这个时候str3和str2是不同的引用，但指向的是同一个字符串对象</p></li><li><p>总结</p><ol><li>基础类型比较</li></ol><p>使用 <strong>==</strong> 比较值是否相等</p><ol start="2"><li><p>引用类型比较</p></li><li><p>重写了equals方法，比如String、Date</p><p>第一种情况：使用 == 比较的是String的引用是否指向同一内存地址</p><p>第二种情况：使用 equals 比较的是String的引用的对象内容是否相同</p></li><li><p>没有重写equals方法，比如自定义类User</p><p>== 和 equals 比较的都是引用是否指向同一内存地址</p></li><li><p>特例</p><p>String类型中，会有一个小问题</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    String str1 = <span class="string">"Hello"</span>;</span><br><span class="line">    String str2 = <span class="keyword">new</span> String(<span class="string">"Hello"</span>);</span><br><span class="line">    str2 = str2.intern();</span><br><span class="line"></span><br><span class="line">    System.out.println(str1 == str2);       <span class="comment">//true</span></span><br><span class="line">    System.out.println(str1.equals(str2));  <span class="comment">//true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当调用intern方法时，如果池中已经包含一个由 equals(Object) 方法确定的等于此 String 对象的字符串，则返回来自池的字符串。否则，将此 String 对象添加到池中，并返回对此String 对象的引用。</p><p>意思就是检查字符串池里是否存在，如果存在，就用池里的字符串对象，如果不存在，就重新添加</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 面试题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次Vue面试</title>
      <link href="/posts/20061201.html/"/>
      <url>/posts/20061201.html/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>Vue</h1><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200704034032.png" alt=""></p><h2 id="什么是钩子函数">什么是钩子函数</h2><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200704034112.png" alt=""></p><p>关键字：<strong>在系统级对所有消息和事件进行过滤</strong></p><p>​是说钩子函数是在一个事件触发的时候，在系统级捕获到了它，然后做一些操作。</p><p>关键字：<strong>一段用以处理系统消息的程序</strong></p><p>​钩子函数是用来处理系统消息的</p><p>总结：</p><p>​1、钩子函数，顾名思义是个函数，在系统消息触发时被系统调用</p><p>​2、 不是用户自己触发的</p><h2 id="常见的钩子函数">常见的钩子函数</h2><h3 id="React的生命周期函数">React的生命周期函数</h3><h3 id="Vue的生命周期函数">Vue的生命周期函数</h3><h2 id="Vue的双向绑定">Vue的双向绑定</h2><h3 id="MVC模式">MVC模式</h3><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200704034238.png" alt=""></p><p>以往的MVC模式是单向绑定，即Model绑定到View，当我们用JavaScript代码更新Model时，View就会自动更新</p><pre><code>### 1.3.1、MVVM模式</code></pre><p>​说到Vue的双向绑定首先联系到的就是MVVM(Model-View-ViewModel)模式了，如下图所示，当试图发生改变的时候传递给VM,再让数据得到更新，当数据发生改变的时候传给VM,使得试图发生改变；</p><p>​MVVM模式是通过以下三个核心组件组成，每个都有它自己独特的角色：</p><p>​    <strong>Model</strong> - 包含了业务和验证逻辑的数据模型</p><p>​    <strong>View</strong> - 定义屏幕中View的结构，布局和外观</p><p>​    <strong>ViewModel</strong> - 扮演“View”和“Model”之间的使者，帮忙处理 <strong>View</strong> 的全部业务逻辑</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200704034318.png" alt=""></p><pre><code>### 1.3.2、Vue数据双向绑定原理</code></pre><p>​Vue的双向绑定主要通过 <strong>Object.defineProperty()</strong> 方法来进行<strong>数据劫持</strong>以及<strong>发布者-订阅</strong>模式来实现的。</p><p>​1、 Vue是怎么实现数据劫持的？</p><p>​Vue实例化的时候会去遍历所有属性，给这些属性添加get和set方法进行数据劫持</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200704034342.png" alt=""></p><h3 id="双向绑定的具体实现？">双向绑定的具体实现？</h3><p>​1、实现一个监听器Observer，用来劫持并监听所有属性，如果有变动，就通知订阅者。</p><p>​2、实现一个订阅者Watcher，每一个Watcher都绑定一个更新函数，Watcher可以收到属性的变化通知并执行响应的函数，从而更新视图。</p><p>​3、实现一个解析器Compile，可以扫描和解析每个节点的相关指令（v-model、v-on等指令），如果节点存在v-model, v-on等指令，则解析器Compile初始化这类节点的模板数据，使之可以显示在视图上，然后初始化相应的订阅者Watcher</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/image/20200704034345.png" alt=""></p><h2 id="Vue中class的用法">Vue中class的用法</h2><p>​Vue中的class有 4 种写法，class和style都属于DOM属性，所以在Vue中使用 :class 和 :style表示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--要给id为app的元素添加属性--&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    .green&#123;color:green&#125;</span><br><span class="line">    .red&#123;background-color:red&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--方法一--&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;!--结果为绿色字体，红色背景--&gt;</span><br><span class="line">&lt;span :class&#x3D;&quot;[greens,reds]&quot;&gt;在Vue中使用class&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;!--注意，此处需要自行引入vue.js文件--&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;.&#x2F;node_modules&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;scipt&gt;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">    el: &quot;#app&quot;,</span><br><span class="line">    data:&#123;</span><br><span class="line">    greens:&quot;green&quot;,</span><br><span class="line">    reds:&quot;red&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;&#x2F;scipt&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--方法二--&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;!--结果为绿色字体，背景不是红色--&gt;</span><br><span class="line">&lt;span :class&#x3D;&quot;&#123;green:true,red:false&#125;&quot;&gt;在Vue中使用class&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;.&#x2F;node_modules&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;scipt&gt;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">    el: &quot;#app&quot;,</span><br><span class="line">    data:&#123;&#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;&#x2F;scipt&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--方法三--&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;!--结果为默认颜色字体，背景是红色--&gt;</span><br><span class="line">&lt;span :class&#x3D;&quot;demo&quot;&gt;在Vue中使用class&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;.&#x2F;node_modules&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;scipt&gt;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">    el: &quot;#app&quot;,</span><br><span class="line">    data:&#123;</span><br><span class="line">    demo:&#123;</span><br><span class="line">    green:false,</span><br><span class="line">    red:true</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;&#x2F;scipt&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--方法四--&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;!--结果为绿色字体，背景是红色--&gt;</span><br><span class="line">&lt;span :class&#x3D;&quot;&#123;green:g,red:r&#125;&quot;&gt;在Vue中使用class&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;.&#x2F;node_modules&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;scipt&gt;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">    el: &quot;#app&quot;,</span><br><span class="line">    data:&#123;</span><br><span class="line">    demo:&#123;</span><br><span class="line">    g:true,</span><br><span class="line">    r:true</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;&#x2F;scipt&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 面试题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> java </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue笔记（3）基础入门</title>
      <link href="/posts/20060601.html/"/>
      <url>/posts/20060601.html/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue笔记（2）基础入门</title>
      <link href="/posts/20060501.html/"/>
      <url>/posts/20060501.html/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><div class="note primary icon">    <p>📚Vue笔记目录</p>    <a href="/posts/20060401.html">🚀入门介绍</a> -    <a href="/posts/20060501.html">⚙️基础入门</a> -</div><hr><p>本文参考文档：<a href="https://cn.vuejs.org/v2/guide/instance.html" target="_blank" rel="noopener">Vue.js</a></p><h1>Vue实例</h1><h2 id="创建一个Vue实例">创建一个Vue实例</h2><p>每一个Vue实例都是通过<code>Vue</code>函数创建一个新的<strong>Vue实例</strong>开始的：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="comment">// 选项</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>实例代码块</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"vue.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  &#123;&#123; message &#125;&#125; &#123;&#123;name&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,</span></span><br><span class="line">data: &#123;</span><br><span class="line"><span class="actionscript">message: <span class="string">'Hello Vue!'</span>,</span></span><br><span class="line"><span class="actionscript">name : <span class="string">"Vue"</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="数据与方法">数据与方法</h2><p>当一个Vue实例被创建时，它将<code>data</code>对象中的所有的property加入到Vue的<strong>响应式系统</strong>中，当这些property的值发生改变时，视图将会产生<strong>响应</strong>，即匹配更新为新值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数据对象</span></span><br><span class="line"><span class="keyword">var</span> data = &#123;<span class="attr">a</span> : <span class="number">1</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 该数据对象被加入到一个Vue实例中</span></span><br><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    data: data</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 此时</span></span><br><span class="line">vm.a == data.a <span class="comment">// ==&gt; true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置property也会影响原始数据</span></span><br><span class="line">vm.a = <span class="number">2</span></span><br><span class="line">data.a <span class="comment">// ==&gt; 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 反之亦然</span></span><br><span class="line">data.a = <span class="number">3</span></span><br><span class="line">vm.a <span class="comment">// ==&gt; 3</span></span><br></pre></td></tr></table></figure><p>当这些数据改变时，视图会重新渲染。且只有当实例被创建时就已经存在于<code>data</code>中的property才是<strong>响应式</strong>的。</p><p>比如：新添加一个新的property</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vm.b = <span class="string">"Hello"</span></span><br></pre></td></tr></table></figure><p>对<code>b</code>的改动将不会触发任何视图的更新，但是如果你知道会晚些时候需要一个property，但是一开始它为空或者不存在，那么只需要设置一些初始值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    data:&#123;</span><br><span class="line">        newTodoList: <span class="string">''</span>,</span><br><span class="line">        visitCount: <span class="number">0</span>,</span><br><span class="line">        hideCompletedTodos: <span class="literal">false</span>,</span><br><span class="line">        todos: [],</span><br><span class="line">        error: <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这里还有一个例外，<code>Object.freeze()</code>，这个会阻止修改现有的property，也意味着响应式系统无法再追踪变化</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;foo&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这里的foo不会更细 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"foo = 'Hello Vue!'"</span>&gt;</span>Change<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    foo: <span class="string">'Hello World!'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.freeze(obj)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> vm1 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">"#app-1"</span>,</span><br><span class="line">    data: obj</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>运行结果点击按钮<span style="color: green"> Hello Worl! </span>不会变成 <span style="color: green">Hello Vue!</span></p><head>    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script><meta name="generator" content="Hexo 4.2.1"></head><body><div id="app-1" style="border: 1px solid #eee;padding: 25px 35px">    <p><span v-text="foo" style="color: green"></span></p>    <!-- 这里的foo不会更细 -->    <button @click="foo = 'Hello Vue!'" style="border: 1px solid #eeeeee; padding: 2px;background-color: #c3c3c3">Change</button></div><script type="text/javascript">    var obj = {        foo: 'Hello World!'    }    Object.freeze(obj)    var vm1 = new Vue({        el: "#app-1",        data: obj    })</script></body><ul><li><p>打开控制台，输入<code>vm1.foo</code>会在控制台打印出 Hello World!</p></li><li><p>输入<code>vm1.foo = &quot;Hello&quot;</code>会报错  <span style="color:red">Uncaught TypeError: Cannot assign to read only property ‘foo’ of object ‘#&lt;Object&gt;’</span></p></li></ul><h2 id="实例生命周期钩子">实例生命周期钩子</h2><p>每个Vue实例在被创建时都要经过一系列的初始化过程。例如：需要设置数据监听、编译模板、将实例挂载到DOM、并在数据发生变化时更新DOM等。同时这个过程或产生一些叫做<code>生命周期钩子</code>的函数。</p><ul><li><p>beforeCreate（创建之前）</p><p>此阶段为实例化初始阶段。此时的数据观察和事件机制都尚未形成，不能获得DOM节点。</p></li><li><p>Created（创建完成）</p><p>此阶段，Vue实例已经获取到，但是仍然不可以获取到DOM</p></li><li><p>beforeMount（挂载之前）</p><p>在此阶段，依然获取不到具体的DOM元素，但Vue挂载的根节点已经创建，下面的Vue对DOM的操作都将围绕这个根节点继续进行</p></li><li><p>mounted（挂载完成）</p><p>在此阶段，数据和DOM都已经被渲染出来，一般在此做异步请求操作</p></li><li><p>beforeUpdate（发生改变前）</p><p>在此阶段，Vue遵从数据驱动DOM的原则。beforeUpdate函数在数据更新后虽然没有立即更新数据，但是DOM中的数据会改变，这是Vue的<strong>双向绑定</strong>的作用</p></li><li><p>updated（改变后）</p><p>在此阶段，DOM会更新发生改变的视图内容</p></li><li><p>beforeDestroy（销毁前）</p><p>在上一阶段，Vue已经成功的通过数据驱动DOM更新，当不需要Vue操作DOM时，就需要销毁Vue，也就是清楚Vue与DOM的关联，调用<code>destroy</code>方法可以销毁当前组件。在销毁前，会触发<code>beforeDestroy钩子函数</code></p></li><li><p>destroyed（销毁完成）</p><p>销毁后，触发destroyed钩子函数</p></li></ul><p>比如<code>created</code>钩子可以用在一个实例被创建之后执行的代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    a: <span class="number">1</span></span><br><span class="line">  &#125;,</span><br><span class="line">  created: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// `this` 指向 vm 实例</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'a is: '</span> + <span class="keyword">this</span>.a)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// =&gt; "a is: 1"</span></span><br></pre></td></tr></table></figure><p>也有一些其他的钩子，在实例生命周期的不同阶段被调用，如<code>mounted</code>、<code>updated </code> 和 <code>destroyed</code>，生命周期钩子的<code>this</code>上下文指向调用它的Vue实例</p><div class="snote info">    <p>        不要在选项property或回调上使用箭头函数，比如：<br>        <code>created:() => console.log(this.a)</code> 或 <code>vm.$watch('a',newValue => this.myMathod())</code>。<br>        因为箭头函数并没有<code>this</code>，<code>this</code>会作为变量一直向上级词法作用域查找，直到找到为止，所以经常导致：<br>        <code>Uncaught TypeError: Cannot read property of undefined</code>或<br>        <code>Uncaught TypeError: this.myMethod is not a function</code>之类的错误    <p></div><h2 id="生命周期图解★★★★★">生命周期图解★★★★★</h2><p>每个Vue实例在被创建时都要经过一系列的初始化过程，这个过程就是Vue的生命周期。</p><p>先来看<a href="https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA" target="_blank" rel="noopener">官方文档</a>上的图</p><img src= "/img/loading.gif" data-src="https://cn.vuejs.org/images/lifecycle.png" style="zoom:50%;" /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"vue.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm2 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app-2'</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="actionscript">            message: <span class="string">'Vue的生命周期'</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        beforeCreate: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.group(<span class="string">'------beforeCreate创建前状态------'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"el     : "</span> + <span class="keyword">this</span>.$el); <span class="comment">//undefined</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"data   : "</span> + <span class="keyword">this</span>.$data); <span class="comment">//undefined </span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"message: "</span> + <span class="keyword">this</span>.message)</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        created: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.group(<span class="string">'------created创建完毕状态------'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"el     : "</span> + <span class="keyword">this</span>.$el); <span class="comment">//undefined</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"data   : "</span> + <span class="keyword">this</span>.$data); <span class="comment">//已被初始化 </span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"message: "</span> + <span class="keyword">this</span>.message); <span class="comment">//已被初始化</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        beforeMount: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.group(<span class="string">'------beforeMount挂载前状态------'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"el     : "</span> + (<span class="keyword">this</span>.$el)); <span class="comment">//已被初始化</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.$el);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"data   : "</span> + <span class="keyword">this</span>.$data); <span class="comment">//已被初始化  </span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"message: "</span> + <span class="keyword">this</span>.message); <span class="comment">//已被初始化  </span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        mounted: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.group(<span class="string">'------mounted 挂载结束状态------'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"el     : "</span> + <span class="keyword">this</span>.$el); <span class="comment">//已被初始化</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.$el);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"data   : "</span> + <span class="keyword">this</span>.$data); <span class="comment">//已被初始化</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"message: "</span> + <span class="keyword">this</span>.message); <span class="comment">//已被初始化 </span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        beforeUpdate: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.group(<span class="string">'beforeUpdate 更新前状态===============》'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"el     : "</span> + <span class="keyword">this</span>.$el);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.$el);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"data   : "</span> + <span class="keyword">this</span>.$data);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"message: "</span> + <span class="keyword">this</span>.message);</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        updated: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.group(<span class="string">'updated 更新完成状态===============》'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"el     : "</span> + <span class="keyword">this</span>.$el);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.$el);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"data   : "</span> + <span class="keyword">this</span>.$data);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"message: "</span> + <span class="keyword">this</span>.message);</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        beforeDestroy: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.group(<span class="string">'beforeDestroy 销毁前状态===============》'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"el     : "</span> + <span class="keyword">this</span>.$el);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.$el);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"data   : "</span> + <span class="keyword">this</span>.$data);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"message: "</span> + <span class="keyword">this</span>.message);</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        destroyed: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.group(<span class="string">'destroyed 销毁完成状态===============》'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"el     : "</span> + <span class="keyword">this</span>.$el);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.$el);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"data   : "</span> + <span class="keyword">this</span>.$data);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>, <span class="string">"message: "</span> + <span class="keyword">this</span>.message)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="comment">&lt;!--设置延迟3秒后，更新message的值--&gt;</span></span></span></span><br><span class="line"><span class="actionscript">    setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        vm2.message = <span class="string">"更改了message的值"</span>;</span></span><br><span class="line">    &#125;, 3000);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>上面代码的运行结果，可以刷新页面重新观察此结果</p></blockquote><body>  <div id="app-2" style="border: 1px solid #eee;padding: 25px 35px">    <span v-text="message"></span>  </div></body><script>  var vm2 = new Vue({    el: '#app-2',    data: {      message: 'Vue的生命周期'    },    beforeCreate: function() {      console.group('------beforeCreate创建前状态------');      console.log("%c%s", "color:red" , "el     : " + this.$el); //undefined      console.log("%c%s", "color:red","data   : " + this.$data); //undefined       console.log("%c%s", "color:red","message: " + this.message)     },    created: function() {      console.group('------created创建完毕状态------');      console.log("%c%s", "color:red","el     : " + this.$el); //undefined      console.log("%c%s", "color:red","data   : " + this.$data); //已被初始化       console.log("%c%s", "color:red","message: " + this.message); //已被初始化    },    beforeMount: function() {      console.group('------beforeMount挂载前状态------');      console.log("%c%s", "color:red","el     : " + (this.$el)); //已被初始化      console.log(this.$el);      console.log("%c%s", "color:red","data   : " + this.$data); //已被初始化        console.log("%c%s", "color:red","message: " + this.message); //已被初始化      },    mounted: function() {      console.group('------mounted 挂载结束状态------');      console.log("%c%s", "color:red","el     : " + this.$el); //已被初始化      console.log(this.$el);          console.log("%c%s", "color:red","data   : " + this.$data); //已被初始化      console.log("%c%s", "color:red","message: " + this.message); //已被初始化     },    beforeUpdate: function () {      console.group('beforeUpdate 更新前状态===============》');      console.log("%c%s", "color:red","el     : " + this.$el);      console.log(this.$el);         console.log("%c%s", "color:red","data   : " + this.$data);       console.log("%c%s", "color:red","message: " + this.message);     },    updated: function () {      console.group('updated 更新完成状态===============》');      console.log("%c%s", "color:red","el     : " + this.$el);      console.log(this.$el);       console.log("%c%s", "color:red","data   : " + this.$data);       console.log("%c%s", "color:red","message: " + this.message);     },    beforeDestroy: function () {      console.group('beforeDestroy 销毁前状态===============》');      console.log("%c%s", "color:red","el     : " + this.$el);      console.log(this.$el);          console.log("%c%s", "color:red","data   : " + this.$data);       console.log("%c%s", "color:red","message: " + this.message);     },    destroyed: function () {      console.group('destroyed 销毁完成状态===============》');      console.log("%c%s", "color:red","el     : " + this.$el);      console.log(this.$el);        console.log("%c%s", "color:red","data   : " + this.$data);       console.log("%c%s", "color:red","message: " + this.message)    }  });    setTimeout(function () {        vm2.message = "更改了message的值";    }, 3000);</script></html><p>打开控制台查看</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/04/20200805033915.png" alt=""></p><p>可以看到一个Vue实例在创建过程中调用的几个生命周期钩子。</p><ul><li><p>在beforeCreate和create钩子函数之间的生命周期</p><head>    <meta charset="UTF-8">    <title>Title</title>    <style type="text/css">        .show1{            background: transparent url("https://cn.vuejs.org/images/lifecycle.png") no-repeat scroll -0px -225px;            width: 1200px;            height: 350px;        }    </style></head><body><div class="show1" style="zoom:40%;"></div></body><p>在这个生命周期之间，进行<strong>初始化事件</strong>，进行<strong>数据的观测</strong>，可以看到在<code>created</code>的时候数据已经和<code>data属性</code>绑定（放在data中的属性，当值发生改变的同时，视图也会改变），此时<code>el</code>还没有选项。</p></li><li><p>在created和beforeMount钩子函数之间的生命周期</p><head>    <meta charset="UTF-8">    <title>Title</title>    <style type="text/css">        .show2{            background: transparent url("https://cn.vuejs.org/images/lifecycle.png") no-repeat scroll -0px -486px;            width: 1200px;            height: 1007px;        }    </style></head><body><div class="show2" style="zoom:40%;"></div></body><p>在这个生命周期之间，先<strong>判断是否有el选项</strong>：如果有，则继续向下编译；如果没有el选项，则停止编译，也就意味着停止了生命周期，知道该Vue实例上调用<strong>vm.$mount(el)</strong>。此时注释掉15行代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">el: <span class="string">"#app-2"</span></span><br></pre></td></tr></table></figure><p>然后运行代码可以看到执行完created之后就停止了</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/06/20200806004958.png" alt="image-20200806004958593"></p><p>如果继续在控制台执行<code>vm2.$mount(&quot;#app-2&quot;)</code>，可以发现继续向下执行了</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/06/20200806014007.png" alt="image-20200806012806198"></p><p>继续向下看Vue生命周期图，template参数选项的有无对生命周期的影响</p><ul><li>如果Vue实例对象中有template参数选项，则将其作为模板变异成render函数</li><li>如果Vue实例对象中没有template参数选项，则将外部HTML作为模板编译</li><li>可以看出template的优先级高于外部HTML的优先级</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"vue.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-3"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--在html中修改--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;message + ' 这是outerHTML的内容'&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> vm3 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">"#app-3"</span>,</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//在Vue配置项中修改</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            template: "<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><span class="template-variable">&#123;&#123;message + ' 这是template的内容'&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span>",</span></span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                message: <span class="string">"Hello Vue Lifecycle"</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>执行后的结果显示：👇</p><body><div id="app-3" style="border: 1px solid #eee;padding: 25px 35px"><span v-text="message + ' —— 这是outerHTML的内容'"></span></div><script type="text/javascript">var vm3 = new Vue({el: "#app-3",template: '<div style="border: 1px solid #eeeeee; padding: 25px 35px"><span v-text="message + \' —— 这是template的内容\'"></span></div>',data:{message: "Hello Vue Lifecycle"}})</script></body><p>如果将Vue中template的代码注释掉，显示结果如下：👇</p><body><div id="app-4" style="border: 1px solid #eee;padding: 25px 35px"><span v-text="message + ' —— 这是outerHTML的内容'"></span></div><script type="text/javascript">var vm4 = new Vue({el: "#app-4",//template: '<span v-text="message + \' —— 这是template的内容\'"></span>',data:{message: "Hello Vue Lifecycle"}})</script></body><p>所以：由此可以看出，为什么el的判断要在template之前，因为需要通过el找到对应的outer template。</p><br><p>在Vue对象中，还有一个<code>render</code>函数，它是以<code>createElement</code>作为参数，然后做渲染操作，而且还可以直接嵌入JSX</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">"#app"</span>,</span><br><span class="line">    render: <span class="function"><span class="keyword">function</span>(<span class="params">createElement</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> createElement(<span class="string">'span'</span>,<span class="string">'this is createElement'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>可以看到渲染的页面是：👇</p><body><div style="border: 1px solid #eee;padding: 25px 35px">    <div id="app-5">        <span v-text="message + ' —— 这是outerHTML的内容'"></span>    </div></div><script type="text/javascript">var vm5 = new Vue({el: "#app-5",        render: function(createElement){            return createElement('span','this is createElement')        }})</script></body><p>所以优先级排名为：</p><p>render函数选项  &gt;  template选项  &gt;  outerHTML</p></li><li><p>在beforeMount和mounted钩子函数之间的生命周期</p><head>    <meta charset="UTF-8">    <title>Title</title>    <style type="text/css">        .show3{            background: transparent url("https://cn.vuejs.org/images/lifecycle.png") no-repeat scroll -0px -1377px;            width: 850px;            height: 392px;        }    </style></head><body><div class="show3" style="zoom:40%;"></div></body><p>可以看出此阶段是给Vue添加$el成员，并且替换掉挂载在DOM的元素，因为在之前console打印的结果可以看到<code>beforeMount</code>之前el还是undefined。</p><div><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/06/20200806172148.png"></div></li><li><p>mounted生命周期</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/06/20200806181657.png" alt="image-20200806173010693"></p><p>在<code>mounted</code>生命周期之前，<code>beforeMount</code>阶段时 h1使用****进行占位的，因为此时还没有挂载到页面上，还是JS中的虚拟DOM形式存在的。在，<code>mounted</code>阶段时，h1中内容发生改变</p></li><li><p>在beforeUpdate和updated钩子函数之间的生命周期</p><head>    <meta charset="UTF-8">    <title>Title</title>    <style type="text/css">        .show4{            background: transparent url("https://cn.vuejs.org/images/lifecycle.png") no-repeat scroll -410px -1664px;            width: 793px;            height: 558px;        }    </style></head><body><div class="show4" style="zoom:40%;"></div></body><p>当Vue发现data中的数据发生改变时，会<strong>触发对应组件的重新渲染</strong>，先后调用<code>beforeUpdate</code>和<code>updated</code>钩子函数。</p><p>在控制台输入<code>vm2.message=&quot;更改了message的值&quot;</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vm2.message=<span class="string">"更改了message的值"</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/06/20200806181559.png" alt="image-20200806181559210"></p><p>或者添加<code>setTimeout()</code>方法：（<strong>本例中使用的是此方法</strong>）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--设置延迟<span class="number">3</span>秒后，更新message的值--&gt;</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    vm2.message = <span class="string">"更改了message的值"</span>;</span><br><span class="line">&#125;, <span class="number">3000</span>);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/06/20200806181650.png" alt="image-20200806181650813"></p></li><li><p>在beforeDestroy和destroyed钩子函数之间的生命周期</p><head>  <meta charset="UTF-8">    <title>Title</title>    <style type="text/css">        .show5{            background: transparent url("https://cn.vuejs.org/images/lifecycle.png") no-repeat scroll -0px -2214px;            width: 838px;            height: 579px;        }    </style></head><body><div class="show5" style="zoom:40%;"></div></body><p><code>beforeDestroy</code>钩子函数在实例销毁之前调用，在此阶段，实例仍然可以使用。</p><p><code>destroyed</code>钩子函数在实例销毁后调用。调用后，Vue实例指示的所有东西都会解除绑定，所有事件监听器会被移除，所有实例将会被销毁。</p></li></ul><h1>模板语法</h1><p>Vue.js使用了基于HTML的模板语法，允许开发者声明式地将DOM绑定至底层Vue实例的数据中，所以Vue.js的模板都是合法的HTML，所以能被<strong>遵循规范的浏览器</strong>和<strong>HTML解析器</strong>解析。</p><p>在底层的实现上，Vue将模板编译成虚拟DOM渲染函数。结合响应系统，Vue能够智能地计算出最少需要重新渲染多少组件，并把DOM操作次数减到最少。</p><p>也可以不使用模板，<strong>直接写渲染（render）函数</strong>，使用可选的JSX语法</p><h2 id="插值">插值</h2><h3 id="文本">文本</h3><p>数据绑定最常用的方式就是使用“Mustache”语法，（双大括号）的文本插值，称之为<code>插值表达式</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Message: &#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>双大括号内（插值表达式）的标签将会被替换为对应数据对象对象上message 属性的值。无论何时，绑定的数据对象上的message属性发生改变，插值处的内容都会更新。</p><p>通过使用<code>v-once</code>指令，也可以执行一次性的插值，当数据发生改变，插值处的内容不会更新。但是会影响该节点上的其他数据绑定：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-onxe</span>&gt;</span>这个内容不会改变: &#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>示例代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-6"</span> <span class="attr">style</span>=<span class="string">"border: 1px solid #eee;padding: 25px 35px"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>插值表达式：&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-once</span>&gt;</span>这里的内容不会更新：&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"change"</span>&gt;</span>改变message的值<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm6 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">"#app-6"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            message: <span class="string">"Hello Vue！"</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            change()&#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 以示区分，随机生成2位数</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.message = <span class="string">"更改了message的值"</span> + <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">100</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><body><div id="app-6" style="border: 1px solid #eee;padding: 25px 35px">    <span>插值表达式：</span><span v-text="message"></span><br>    <span>这里的内容不会更新：</span><span v-text="message" v-once></span><br>    <button @click="change" style="border: 1px solid #eeeeee; padding: 2px;background-color: #c3c3c3">改变message的值</button></div><script type="text/javascript">    var vm6 = new Vue({        el: "#app-6",        data:{            message: "Hello Vue！"        },        methods:{            change(){                // 以示区分，随机生成2位数                this.message = "更改了message的值" + Math.floor(Math.random()*100)            }        }    })</script></body><h3 id="原始HTML">原始HTML</h3><p>双大括号内（插值表达式）会将数据解析为普通文本，而非HTML代码。为了输出真正的HTML，需要使用<code>v-html</code>指令：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-7"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>使用插值表达式：&#123;&#123;innerHTML&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>使用v-html指令：<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">"innerHTML"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="keyword">var</span> vm7 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">"#app-7"</span>,</span><br><span class="line">        data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span>&#123;</span><br><span class="line">                innerHTML:<span class="string">"&lt;span style='color: red'&gt;这里应该是红色字体&lt;/span&gt;"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><body><div id="app-7" style="border: 1px solid #eee;padding: 25px 35px">    <p>使用插值表达式：<span v-text="innerHTML"></span></p>    <p>使用v-html指令：<span v-html="innerHTML"></span></p></div><script type="text/javascript">    var vm7 = new Vue({        el: "#app-7",        data: function () {            return{                innerHTML:"<span style='color: red'>这里应该是红色字体</span>"            }        }    })</script></body><p>这个 <code>span</code> 的内容将会被替换成为 property 值 <code>innerHtml</code>，直接作为 HTML——会忽略解析 property 值中的数据绑定。注意，不能使用 <code>v-html</code> 来复合局部模板，因为 Vue 不是基于字符串的模板引擎。反之，对于用户界面 (UI)，组件更适合作为可重用和可组合的基本单位。</p><blockquote><p>你的站点上动态渲染的任意 HTML 可能会非常危险，因为它很容易导致    <a href="https://en.wikipedia.org/wiki/Cross-site_scripting" target="_blank" rel="noopener">XSS 攻击</a>。    请只对可信内容使用 HTML 插值，<strong>绝不要</strong>对用户提供的内容使用插值。<p></blockquote><h3 id="Attribute">Attribute</h3><p>双大括号（插值表达式）语法不能作用在HTML属性上，遇到这种情况可以使用<code>v-bind指令</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">"dynamicId"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">"#app"</span>,</span></span><br><span class="line">        date:&#123;</span><br><span class="line">            dynamicId: 1</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果则为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    // something code</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对于布尔属性（它们只要存在就意味着为<code>true</code>）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-bind:disabled</span>=<span class="string">"isDisabled"</span>&gt;</span>button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果isDisabled的值为null、undefined或false，则<code>disabled</code>属性不会被渲染出来，Button可用</p><h3 id="使用JavaScript表达式">使用JavaScript表达式</h3><p>至此，在我们的模板中，一直都只绑定简单的property值。但实际上，对于所有的数据绑定，Vue.js都提供了完全的JavaScript表达式支持</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--基本运算--&gt;</span></span><br><span class="line">&#123;&#123;number + 1&#125;&#125;</span><br><span class="line"><span class="comment">&lt;!--三元运算--&gt;</span></span><br><span class="line">&#123;&#123;ok ? 'YES' : 'NO'&#125;&#125;</span><br><span class="line"><span class="comment">&lt;!--字符串处理--&gt;</span></span><br><span class="line">&#123;&#123;message.split('').reverse().join('')&#125;&#125;</span><br><span class="line"><span class="comment">&lt;!--动态绑定--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">"'list-' + id"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这些表达式会在所属 Vue 实例的数据作用域下作为 JavaScript 被解析。有个限制就是，每个绑定都只能包含<strong>单个表达式</strong>，所以下面的例子都<strong>不会</strong>生效。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这是语句，不是表达式 --&gt;</span></span><br><span class="line">&#123;&#123; var a = 1 &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 流控制也不会生效，请使用三元表达式 --&gt;</span></span><br><span class="line">&#123;&#123; if (ok) &#123; return message &#125; &#125;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>模板表达式都被放在沙盒中，只能访问全局变量的一个白名单，如 <code>Math</code> 和 <code>Date</code> 。你不应该在模板表达式中试图访问用户定义的全局变量。</p></blockquote><h2 id="指令">指令</h2><p>指令 (Directives) 是带有 <code>v-</code> 前缀的特殊 attribute。指令 attribute 的值预期是<strong>单个 JavaScript 表达式</strong> (<code>v-for</code> 是例外情况)。指令的职责是，当表达式的值改变时，将其产生的连带影响，响应式地作用于 DOM。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"seen"</span>&gt;</span>现在你看到我了<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里，<code>v-if</code> 指令将根据表达式 <code>seen</code> 的值的真假来插入/移除 <code>&lt;p&gt;</code> 元素。</p><h3 id="参数">参数</h3><p>一些指令能够接收一个“参数”，在指令名称之后以冒号表示。例如，<code>v-bind</code> 指令可以用于响应式地更新 HTML attribute：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">"url"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在这里 <code>href</code> 是参数，告知 <code>v-bind</code> 指令将该元素的 <code>href</code> attribute 与表达式 <code>url</code> 的值绑定。</p><p><code>v-on</code> 指令，它用于监听 DOM 事件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click</span>=<span class="string">"doSomething"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="动态参数">动态参数</h3><p><span class="inline-tag blue">2.6.0 新增</span></p><p>从 2.6.0 开始，可以用方括号括起来的 JavaScript 表达式作为一个指令的参数：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:</span>[<span class="attr">attributeName</span>]=<span class="string">"url"</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里的 <code>attributeName</code> 会被作为一个 JavaScript 表达式进行动态求值，求得的值将会作为最终的参数来使用。例如，如果你的 Vue 实例有一个 <code>data</code> property <code>attributeName</code>，其值为 <code>&quot;href&quot;</code>，那么这个绑定将等价于 <code>v-bind:href</code>。</p><p>示例：a标签的最终结果为<code>&lt;a href=&quot;https://www.baidu.com&quot;&gt; ... &lt;/a&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:</span>[<span class="attr">attributeName</span>]=<span class="string">"url"</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">"#app"</span>,</span></span><br><span class="line">        date:&#123;</span><br><span class="line"><span class="actionscript">            attributeName: <span class="string">'href'</span>,</span></span><br><span class="line"><span class="actionscript">            url: <span class="string">'https://www.baidu.com'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>同样地，也可以使用动态参数为一个动态的事件名绑定处理函数：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:</span>[<span class="attr">eventName</span>]=<span class="string">"doSomething"</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当<code>eventName</code>的值为<code>focus</code>时，<code>v-on:[eventName]</code> 等价于 <code>v-on:focus</code></p><ul><li><p>对动态参数的值的约束</p><p>动态参数预期会求出一个字符串，异常情况下值为 <code>null</code>。这个特殊的 <code>null</code> 值可以被显性地用于移除绑定。任何其它非字符串类型的值都将会触发一个警告。</p></li><li><p>对动态参数表达式的约束</p><p>动态参数表达式有一些语法约束，因为某些字符，如空格和引号，放在 HTML attribute 名里是无效的。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这会触发一个编译警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:</span>['<span class="attr">foo</span>' + <span class="attr">bar</span>]=<span class="string">"value"</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>变通的办法是使用没有空格或引号的表达式，或用计算属性替代这种复杂表达式。</p><p>在 DOM 中使用模板时 (直接在一个 HTML 文件里撰写模板)，还需要避免使用大写字符来命名键名，因为浏览器会把 attribute 名全部强制转为小写：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">在 DOM 中使用模板时这段代码会被转换为 `v-bind:[someattr]`。</span></span><br><span class="line"><span class="comment">除非在实例中有一个名为“someattr”的 property，否则代码不会工作。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:</span>[<span class="attr">someAttr</span>]=<span class="string">"value"</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="修饰符">修饰符</h3><p>修饰符 (modifier) 是以半角句号 <code>.</code> 指明的特殊后缀，用于指出一个指令应该以特殊方式绑定。例如，<code>.prevent</code> 修饰符告诉 <code>v-on</code> 指令对于触发的事件调用 <code>event.preventDefault()</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>=<span class="string">"onSubmit"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="缩写">缩写</h2><p><code>v-</code> 前缀作为一种视觉提示，用来识别模板中 Vue 特定的 attribute。当你在使用 Vue.js 为现有标签添加动态行为 (dynamic behavior) 时，<code>v-</code> 前缀很有帮助，然而，对于一些频繁用到的指令来说，就会感到使用繁琐。同时，在构建由 Vue 管理所有模板的<a href="https://en.wikipedia.org/wiki/Single-page_application" target="_blank" rel="noopener">单页面应用程序 (SPA - single page application)</a> 时，<code>v-</code> 前缀也变得没那么重要了。因此，Vue 为 <code>v-bind</code> 和 <code>v-on</code> 这两个最常用的指令，提供了特定简写：</p><h3 id="v-bind缩写">v-bind缩写</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 完整语法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">"url"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 缩写 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">"url"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 动态参数的缩写 (2.6.0+) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">:</span>[<span class="attr">key</span>]=<span class="string">"url"</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-on缩写">v-on缩写</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 完整语法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click</span>=<span class="string">"doSomething"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 缩写 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">"doSomething"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 动态参数的缩写 (2.6.0+) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> @[<span class="attr">event</span>]=<span class="string">"doSomething"</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>它们看起来可能与普通的 HTML 略有不同，但 <code>:</code> 与 <code>@</code> 对于 attribute 名来说都是合法字符，在所有支持 Vue 的浏览器都能被正确地解析。而且，它们不会出现在最终渲染的标记中。缩写语法是完全可选的</p><a class="btn-beautify button--animated pink block right outline larger" href="/posts/20060601.html/" title="📚Vue笔记（3）基础进阶"><i class="far fa-hand-point-right fa-fw"></i> 📚Vue笔记（3）基础进阶 </a>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue笔记（1）入门介绍</title>
      <link href="/posts/20060401.html/"/>
      <url>/posts/20060401.html/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><div class="note primary icon">    <p>📚Vue笔记目录</p>    <a href="/posts/20060401.html">🚀入门介绍</a> -    <a href="/posts/20060501.html">⚙️入门介绍</a> -</div><hr><p>参考文档地址：<a href="https://cn.vuejs.org/v2/guide/index.html#%E8%B5%B7%E6%AD%A5" target="_blank" rel="noopener">Vue.js</a></p><h2 id="开始使用Vue">开始使用Vue</h2><h3 id="直接用-script-引入">直接用<code>&lt;script&gt;</code>引入</h3><p>​直接下载并用<code>&lt;script&gt;</code>引入，<code>Vue</code>会被注册为一个全局变量。</p><div class='tip warning'><p>在开发环境下，不要使用压缩版本，不然就失去了所有常见错误的相关警报。<p></div><div style="padding-left: 8%">    <div>        <a class="btn-beautify button--animated outline green larger" href="https://cn.vuejs.org/js/vue.js" target="_blank" rel="noopener" title="开发版本"><i class="far fa-hand-point-right fa-fw"></i> 开发版本 </a>        <span>包含完整的警告和调试模式</span>    </div>    <div>        <a class="btn-beautify button--animated outline green larger" href="https://cn.vuejs.org/js/vue.min.js" target="_blank" rel="noopener" title="生产版本"><i class="far fa-hand-point-right fa-fw"></i> 生产版本 </a>        <span>删除了警告，33.30KB min+gzip</span>    </div></div><h3 id="CDN">CDN</h3><ul><li><p>对于开发环境和学习，可以使用最新版本</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>对于生产环境，推荐链接到一个明确的版本号和构建文件，以避免新版本造成的不可预期的破坏</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue@2.6.11"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>如果使用原生ES Modules，这里也有一个兼容ES Modules的构建文件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'https://cdn.jsdelivr.net/npm/vue@2.6.11/dist/vue.esm.browser.js'</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以在<a href="https://cdn.jsdelivr.net/npm/vue/" target="_blank" rel="noopener">cdn.jsdelivr.net/npm/vue/</a>浏览NPM包的源代码</p><p>Vue也可以在<a href="https://unpkg.com/vue@2.6.11/dist/vue.js" target="_blank" rel="noopener">unpkg</a>和<a href="https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.11/vue.js" target="_blank" rel="noopener">cdnjs</a>上获取（cdnjs的版本更新可能会延后）</p></li></ul><h3 id="NPM">NPM</h3><p>在使用Vue构建大型项目时推荐使用NPM安装。NPM能更好的和诸如<a href="https://webpack.js.org/" target="_blank" rel="noopener">webpack</a>或<a href="http://browserify.org/" target="_blank" rel="noopener">Browserify</a>模块打包器配合使用。同时Vue也提供配套工具来开发<code>单文件组件</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 最新稳定版</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install vue</span></span><br></pre></td></tr></table></figure><h3 id="命令行工具（CLI）">命令行工具（CLI）</h3><h2 id="起步">起步</h2><h3 id="创建-Hello-Vue-例子">创建 Hello Vue 例子</h3><ul><li><p>创建一个<code>.html</code>文件</p></li><li><p>引入<code>vue.js</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--这里引入了vue.js文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border: 1px solid #eee;padding: 25px 35px"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">                &#123;&#123;message&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> app_1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app-1"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                message:<span class="string">"Hello Vue!"</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="声明式渲染">声明式渲染</h3><ul><li><p>Vue.js的核心是一个允许采用简洁的模板语法来声明式地将数据渲染进DOM</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="keyword">const</span> app_1 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">"#app-1"</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            message:<span class="string">"Hello Vue!"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果</p>  <head>      <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>  <meta name="generator" content="Hexo 4.2.1"></head>  <body>  <div id="app-1" style="border: 1px solid #eee; padding: 25px 35px">      <span v-text="message"></span>  </div>  <script type="text/javascript">      const app_1 = new Vue({          el:"#app-1",          data:{              message:"Hello Vue!"          }      })  </script>  </body><p>可以在浏览器的JavaScript控制台使用<code>app_1.message</code> 来修改message的值</p></li><li><p>除了文本插值，还可以这样来绑定元素attribute(属性)</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-2"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-bind:title</span>=<span class="string">"message"</span>&gt;</span></span><br><span class="line">    鼠标悬停几秒钟查看此处动态绑定的提示信息！</span><br><span class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="keyword">const</span> app_2 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">"#app-2"</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            message: <span class="string">'页面加载于 '</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果：<span style="color: #ff5b22">鼠标悬停会看到结果</span> 👇</p>  <head>      <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>  </head>  <body>  <div id="app-2">      <div style="border: 1px solid #eee;padding: 25px 35px">          <span v-bind:title="message">              🚀鼠标悬停几秒钟查看此处动态绑定的提示信息！          </span>      </div>  </div>  <script type="text/javascript">      const app_2 = new Vue({          el:"#app-2",          data:{              message: '页面加载于 ' + new Date().toLocaleString()          }      })  </script>  </body><p>可以在浏览器的JavaScript控制台使用<code>app_2.message = '新的message'</code> 来修改message的值，再次把鼠标悬停到运行结果上，会看到绑定了<code>titlt</code>的HTML已经更新了</p><ul><li><p>其中 <code>v-bind</code> 被称为<strong>指令</strong>，指令带有前缀<code>v-</code>，以表示它们是Vue提供的attribute。</p><p>缩写：<code>:</code></p><p>修饰符：</p><ul><li><code>.prop</code>：最为一个Dom property 绑定而不是作为 attribute 绑定（<span style="color: #6fff57">有什么区别</span>❓）</li><li><code>.camel</code>：将 kebab-case attribute 名转换为 camelCase。(从 2.1.0 开始支持)</li><li><code>.sync</code>： 语法糖，会扩展成一个更新父组件绑定值的 <code>v-on</code> 侦听器。(从 2.3.0 开始支持)</li></ul><p>用法：</p><ul><li>动态地<strong>绑定</strong>一个或多个attribute，或一个组件prop到表达式。</li><li>在绑定<code>class</code>或<code>style</code> attribute时，支持其他类型的值，如数组或对象。</li><li>在绑定prop时，prop必须在子组件中声明，可以用修饰符指定不同的绑定类型</li></ul></li><li><p>在HTML中，attribute 和 property的区别❓</p><ul><li>attribute：是HTML标签上的某个属性，如id、value、class等以及自定义属性，它的值只能是字符串，关于这个属性一共有3个方法：<ul><li>getAttribute</li><li>setAttribute</li><li>removeAttribute</li></ul></li><li>property：是JS获取的DOM对象上的属性值，可以将它看做一个基本的js对象</li></ul></li></ul></li></ul><h3 id="条件与循环">条件与循环</h3><ul><li><p>控制切换一个元素是否显示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"check"</span>&gt;</span>click<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"seen"</span>&gt;</span></span><br><span class="line">        现在你看到我了。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="keyword">const</span> app_3 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">"#app-3"</span>,</span><br><span class="line">        data: &#123;</span><br><span class="line">            seen: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            check() &#123;</span><br><span class="line">                <span class="keyword">this</span>.seen = !<span class="keyword">this</span>.seen</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><body><div id="app-3">    <div style="border: 1px solid #eee;padding: 25px 35px">        <button @click="check" style="border: 1px solid #eeeeee; padding: 2px;background-color: #c3c3c3">要看我吗？</button>        <span v-if="seen">            现在你看到我了。        </span>    </div></div><script type="text/javascript">    const app_3 = new Vue({        el: "#app-3",        data: {            seen: true        },        methods: {            check() {                this.seen = !this.seen            }        }    })</script></body><p>继续在控制台输入 <code>app_3.seen = false</code>，你会发现之前显示的消息消失了。</p></li><li><p><code>v-for</code> 指令可以绑定数组的数据来渲染一个项目列表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-4"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"todo in todos"</span>&gt;</span></span><br><span class="line">      &#123;&#123; todo.text &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="keyword">const</span> app_4 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">el: <span class="string">'#app-4'</span>,</span><br><span class="line">      data: &#123;</span><br><span class="line">            todos: [</span><br><span class="line">                &#123;<span class="attr">id</span>: <span class="string">"1"</span>, <span class="attr">text</span>: <span class="string">"Java"</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">id</span>: <span class="string">"2"</span>, <span class="attr">text</span>: <span class="string">"Spring"</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">id</span>: <span class="string">"3"</span>, <span class="attr">text</span>: <span class="string">"Maven"</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">id</span>: <span class="string">"4"</span>, <span class="attr">text</span>: <span class="string">"MySQL"</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">id</span>: <span class="string">"5"</span>, <span class="attr">text</span>: <span class="string">"HTML"</span>&#125;</span><br><span class="line">            ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><body><div id="app-4" style="border: 1px solid #eee;padding: 25px 35px">  <ol>    <li v-for="todo in todos">        <span v-text="todo.text"></span>    </li>  </ol></div><script type="text/javascript">    const app_4 = new Vue({el: '#app-4',      data: {            todos: [                {id: "1", text: "Java"},                {id: "2", text: "Spring"},                {id: "3", text: "Maven"},                {id: "4", text: "MySQL"},                {id: "5", text: "HTML"}            ]      }    })</script></body><p>在控制台里，输入 <code>app_4.todos.push({id: &quot;6&quot;, text: &quot;新项目&quot; })</code>，你会发现列表最后添加了一个新项目。</p></li><li><p>点击按钮，切换页面，比如：点击首页按钮，显示首页页面；点击归档按钮，显示归档页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-5"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">"tab == 1"</span>&gt;</span>这是首页页面<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">"tab == 2"</span>&gt;</span>这是归档页面<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">"tab == 3"</span>&gt;</span>这是分类页面<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"checkTab"</span> <span class="attr">data-id</span>=<span class="string">"1"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"checkTab"</span> <span class="attr">data-id</span>=<span class="string">"2"</span>&gt;</span>归档<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"checkTab"</span> <span class="attr">data-id</span>=<span class="string">"3"</span>&gt;</span>分类<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="keyword">const</span> app_5 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">"#app-5"</span>,</span><br><span class="line">        data: &#123;</span><br><span class="line">            tab: <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            checkTab(e) &#123;</span><br><span class="line">                <span class="keyword">this</span>.tab = e.target.dataset.id</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><body><div id="app-5" style="border: 1px solid #eee;padding: 25px 35px">    <p v-show="tab == 1">这是首页页面</p><p v-show="tab == 2">这是归档页面</p><p v-show="tab == 3">这是分类页面</p>    <button @click="checkTab" data-id="1" style="border: 1px solid #eeeeee; padding: 2px;background-color: #c3c3c3">首页</button>    <button @click="checkTab" data-id="2" style="border: 1px solid #eeeeee; padding: 2px;background-color: #c3c3c3">归档</button>    <button @click="checkTab" data-id="3" style="border: 1px solid #eeeeee; padding: 2px;background-color: #c3c3c3">分类</button></div><script type="text/javascript">    const app_5 = new Vue({        el: "#app-5",        data: {            tab: 1        },        methods: {            checkTab(e) {                this.tab = e.target.dataset.id            }        }    })</script></body></li></ul><h3 id="处理用户输入">处理用户输入</h3><ul><li><p>为了让用户与应用进行交互，使用<code>v-on</code>指令添加一个事件监听器，通过它调用在Vue实例中定义的方法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-6"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"reverseMessage"</span>&gt;</span>反转消息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="keyword">const</span> app_6 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">"#app-6"</span>,</span><br><span class="line">        data: &#123;</span><br><span class="line">            message: <span class="string">"ABCDEFG"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            reverseMessage() &#123;</span><br><span class="line">                <span class="keyword">this</span>.message = <span class="keyword">this</span>.message.split(<span class="string">""</span>).reverse().join(<span class="string">""</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><body><div id="app-6" style="border: 1px solid #eee;padding: 25px 35px">  <p><span v-text="message"></span></p>  <button v-on:click="reverseMessage" style="border: 1px solid #eeeeee; padding: 2px;background-color: #c3c3c3">反转消息</button></div><script type="text/javascript">    const app_6 = new Vue({        el: "#app-6",        data: {            message: "ABCDEFG"        },        methods: {            reverseMessage() {                this.message = this.message.split("").reverse().join("")            }        }    })</script></body><p>注意在<code>reverseMessage</code>方法中，更新了应用的状态，但没有触碰DOM——所有的DOM操作都由Vue来处理，编写的代码只需要关注逻辑层面</p></li><li><p>Vue还提供了<code>v-model</code>指令，它能轻松实现表单输入和应用状态之间的绑定</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-7"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"message"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="keyword">const</span> app_7 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">"#app-7"</span>,</span><br><span class="line">        data: &#123;</span><br><span class="line">            message: <span class="string">"Hello Vue!"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><body><div id="app-7" style="border: 1px solid #eee;padding: 25px 35px">    <p><span v-text="message"></span></p>  <input v-model="message"></div><script type="text/javascript">    const app_7 = new Vue({        el: "#app-7",        data: {            message: "Hello Vue!"        }    })</script></body><p>修改文本输入框的内容，同时也会渲染到DOM</p></li></ul><h3 id="组件化应用构建">组件化应用构建</h3><p>组件系统是Vue的另一个要概念，因为它是一种抽象，允许我们使用小型、独立和通常可复用的组件构建大型应用。</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/SevenKiss/imgPicGo/2020/08/04/20200804142156.png" alt=""></p><p>在Vue里，一个组件本质上是一个拥有预定义选项的一个Vue实例。</p><p>组件（component）是Vue.js最强大的功能之一</p><p>组件可以扩展HTML元素，封装可重用的代码。</p><p>注册一个全局组件</p><pre><code>Vue.component(tagName,options)</code></pre><ul><li><p>tag-name：组件名</p><p>组件名不建议使用驼峰命名法，因为HTML属性不区分大小写，会把驼峰命名法转译成 以 <code>-</code> 连接</p><p>比如 tagName —&gt; tag-name</p></li><li><p>options：配置选项</p></li></ul><p>在Vue中注册组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义名为 todo-item 的新组件</span></span><br><span class="line">Vue.component(<span class="string">'todo-item'</span>, &#123;</span><br><span class="line">  template: <span class="string">'&lt;li&gt;这是个待办项&lt;/li&gt;'</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(...)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 创建一个 todo-item 组件的实例 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">todo-item</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>使用 <code>v-bind</code> 指令将待办项传到循环输出的每个组件中：</p><p>1、已经设法将应用分为两个更小的单元。子单元通过<code>props</code>接口与父单元进行了良好的解耦</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      现在我们为每个 todo-item 提供 todo 对象</span></span><br><span class="line"><span class="comment">      todo 对象是变量，即其内容可以是动态的。</span></span><br><span class="line"><span class="comment">      我们也需要为每个组件提供一个“key”，稍后再</span></span><br><span class="line"><span class="comment">      作详细解释。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">todo-item</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-for</span>=<span class="string">"item in groceryList"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-bind:todo</span>=<span class="string">"item"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-bind:key</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">todo-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    Vue.component(<span class="string">'todo-item'</span>, &#123;</span><br><span class="line">        props: [<span class="string">'todo'</span>],</span><br><span class="line">        template: <span class="string">'&lt;li&gt;&#123;&#123; todo.text &#125;&#125;&lt;/li&gt;'</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">var</span> app_8 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">'#app-8'</span>,</span><br><span class="line">        data: &#123;</span><br><span class="line">            groceryList: [</span><br><span class="line">                &#123; <span class="attr">id</span>: <span class="number">0</span>, <span class="attr">text</span>: <span class="string">'蔬菜'</span> &#125;,</span><br><span class="line">                &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">text</span>: <span class="string">'奶酪'</span> &#125;,</span><br><span class="line">                &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">text</span>: <span class="string">'随便其它什么人吃的东西'</span> &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><body><div id="app-8" style="border: 1px solid #eee;padding: 25px 35px">  <ol>    <todo-item      v-for="item in groceryList"      v-bind:todo="item"      v-bind:key="item.id"    ></todo-item>  </ol></div><script type="text/javascript">    Vue.component('todo-item', {    props: ['todo'],      template: '<li><span v-text="todo.text"></span></li>'    })    var app_8 = new Vue({     el: '#app-8',      data: {        groceryList: [                { id: 0, text: '蔬菜' },              { id: 1, text: '奶酪' },              { id: 2, text: '随便其它什么人吃的东西' }        ]      }    })</script></body><p>此时再次打开控制台并输入<code>app_8.groceryList.push = {id:&quot;3&quot;,text:&quot;肉&quot;}</code>结果内容并不会改变</p><p>如果再进一步改进<code>todo-item</code>组件，可以提供更为复杂的模板和逻辑，而不会影响到父单元</p><p>在一个大型应用中，有必要将整个应用程序划分为组件，以使开发便于管理</p></li></ul><a class="btn-beautify button--animated pink block right outline larger" href="https://blog.badcode.icu/posts/20060501.html/" title="📚Vue笔记（2）基础入门"><i class="far fa-hand-point-right fa-fw"></i> 📚Vue笔记（2）基础入门 </a>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
