(function($){
	$.ajaxSetup({cache: false});
	window.__RTE=null;
	$(window).bind("contextmenu",function(){return false;});
    $(window).bind("selectstart",function(){return false;});
	function FindApi(p){
		if(!!p.__ExamIns){
			return p.__ExamIns;
		}else{
			if(!!p.parent){
				return FindApi(p.parent);
			}
		}
		return null;
	};
	
	function changeSubQuestionSerialNo( ques){
		var quesNumber = $('.ui-question-serial-no:first',ques).text();
		$('.ui-question-sub',ques).each(function(){
			var t = $(this);
			var oldNumber = $('.ui-question-serial-no:first',t).text();
			var newNumber = quesNumber+oldNumber.substring(quesNumber.length);
			$('.ui-question-serial-no:first',t).text(newNumber);
		});
	}
	
	function confuseOrderFunc( seed ){
		var random = new Random(seed); 
		$('.ui-question-group').each(function(){  //对所有大题遍历
			var qn = $('.ui-question-independency', this).length;  //大题下的题目数
			var confOrderNum = parseInt(qn);  /*混淆次数*/
			//var confOrderNum = parseInt(qn*0.8);  /*混淆次数*/
			//console.log('confOrderNum===='+confOrderNum);
			for( var i=0; i<confOrderNum; i++){
				var rad1 = random.rand(qn - i - 1) + i + 1;
				var rad2 = i;
				/*
				var rad1 = random.rand(qn);
				var rad2 = random.rand(qn);
				if( rad2==rad1 ){
					if( rad2==0)
						rad2=qn-1;
					else
						rad2=rad1-1;
				}
				console.log('rad1===='+rad1);
				console.log('rad2===='+rad2);*/
				var que1 = $('.ui-question-independency:eq('+rad1+')', this);
				var que2 = $('.ui-question-independency:eq('+rad2+')', this);
				var html1 = que1.html();
				var queId1 = que1.attr("id");
				var code1 = que1.attr("code");
				var order1 = $('.ui-question-serial-no:first', que1).text();
				var order2 = $('.ui-question-serial-no:first', que2).text();
				que1.html( que2.html() );
				que1.attr("id", que2.attr("id"));  //id变
				que1.attr("code", que2.attr("code"));  //code变
				$('.ui-question-serial-no:first', que1).text( order1 ); //order值不变
				que2.html( html1 );
				
				que2.attr("id", queId1 );
				que2.attr("code", code1 );
				$('.ui-question-serial-no:first', que2).text( order2 );
				
				changeSubQuestionSerialNo(que1);
				changeSubQuestionSerialNo(que2);
			}				
			
		});
	};
	function confuseChoiceFunc( confuseChoiceIndex ){
		$('.ui-question .ui-question-options').each(function(){ //遍历有选项的题目
			var cn = $('li', this).length;  //选项数					
			var confChoiceNum = parseInt(cn*confuseChoiceIndex);  //混淆次数
			for( var i=0; i<confChoiceNum; i++){
				var rad1 = parseInt(Math.random()*cn);
				var rad2 = parseInt(Math.random()*cn);
				if( rad2==rad1 ){
					if( rad2==0)
						rad2=cn-1;
					else
						rad2=rad1-1;
				}
				var choice1 = $('li:eq('+rad1+')', this);
				var choice2 = $('li:eq('+rad2+')', this);
				var code1 = choice1.attr('code');
				var code2 = choice2.attr('code');
				var order1 = $('.ui-question-options-order', choice1).text();
				var order2 = $('.ui-question-options-order', choice2).text();
				var html1 = choice1.html();
				choice1.html( choice2.html() );
				choice1.attr('code', code2); //code值交换
				$('.ui-question-options-order', choice1).text( order1 ); //order值不变
				choice2.html( html1 );
				choice2.attr('code', code1);
				$('.ui-question-options-order', choice2).text( order2 );
			}
		});
	};
	function showAudioPlayers(){

		var jp='<div class="jp-type-single">';
		jp+='<div class="jp-gui jp-interface">';
		jp+='<ul class="jp-controls">';
		jp+='<li><a href="javascript:;" class="jp-play" tabindex="1">play</a></li>';
		jp+='<li><a href="javascript:;" class="jp-pause" tabindex="1" style="display:none">pause</a></li>';
		jp+='<li><a href="javascript:;" class="jp-stop" tabindex="1">stop</a></li>';
		jp+='<li><a href="javascript:;" class="jp-mute" tabindex="1" title="mute">mute</a></li>';
		jp+='<li><a href="javascript:;" class="jp-unmute" tabindex="1" title="unmute"  style="display:none">unmute</a></li>';
		jp+='<li><a href="javascript:;" class="jp-volume-max" tabindex="1" title="max volume">max volume</a></li>';
		jp+='</ul>';
		jp+='<div class="jp-time-holder">';
		jp+='<div class="jp-current-time"></div>';
		jp+='</div>';
		jp+='<div class="jp-volume-bar">';
		jp+='<div class="jp-volume-bar-value"></div>';
		jp+='</div>';
		jp+='</div>';
		jp+='</div>';
		var hrefs=new Array();
		var num=0;
		$('a').each(function(){
			var a = $(this),href=a.attr('href'),reg=new RegExp("\\.mp3$");			
			if(!!href && reg.test(href.toLowerCase())){
				hrefs.push(href);				
				var jplayer='<div id="jplayer_'+num+'" class="jp-jplayer" data-url="'+href+'"></div>';
				jplayer+='<div id="jp_container_'+num+'" class="jp-audio">';
				jplayer+=jp;
				jplayer+='</div>';
				a.replaceWith( jplayer);
				num++;
			}			
		});
		if( num > 0 ){
			$.getScript('jquery.jplayer.min.js',function(){
				for(var i=0; i<num; i++){
					var player = $('#jplayer_'+i);
					player.jPlayer({
						ready: function () {
							$(this).jPlayer("setMedia", {						
								mp3: player.attr('data-url')
							});
						},
						play: function() { // To avoid multiple jPlayers playing together.
							$(this).jPlayer("pauseOthers");
						},
						swfPath: "../../../../../../statics/scripts",   // ../../../../../../statics/scripts
						supplied: "mp3",
						cssSelectorAncestor: "#jp_container_"+i,
						wmode: "window",
						smoothPlayBar: true,
						keyEnabled: true
					});			
				}
			});
		}
	};
	
	window.__OnInited=function(answers){
		if(!!answers&&$.isArray(answers)){
			var len=answers.length,i;
			for(i=0;i<len;i++){
				var answer=answers[i],qid='q_'+answer.id,question=$('#'+qid);
				if(question&&question.length>0){
					if(question.hasClass('ui-question-1')){
						$('.ui-question-options>li[code="'+answer.answer+'"]',question).addClass('ui-option-selected');
					}else if(question.hasClass('ui-question-2')){
						$('.ui-question-options>li',question).each(function(){
							var t=$(this);
							if(answer.answer.indexOf(t.attr('code'))!=-1){
								t.addClass('ui-option-selected');
							}
						});
					}else if(question.hasClass('ui-question-3')){   /*问答题*/
						$('.ui-question-textarea',question).val(answer.answer);
					}
				}
			}
		}
		$('.ui-overflow').hide();
	};
	window.__ShowAnswerAndHint=function(answers){
		if(!!answers&&$.isArray(answers)){
			len=answers.length;
			for(var i=0;i<len;i++){
				var answer=answers[i],question=$('#q_'+answer.questionId);
				if(!!question && question.length>0 ){
					if( question.hasClass('ui-question-1') || question.hasClass('ui-question-2') ){
						for(var j=0; j<answer.answer.length; j++){
							var c = answer.answer.charAt(j);
							$('.ui-question-options>li[code="'+c+'"]', question).addClass('ui-correct-answer');
						}
					}else if( !question.hasClass('ui-question-4') ){  //非复合题
						question.append('<div class="ui-question-answer">答案：'+answer.answer+'</div>');
					}			
					if(!!answer.hint){
						question.append('<div class="ui-question-hint">'+answer.hint+'</div>');
						//显示解析中的公式
						reTranslate($('.ui-question-hint',question)[0]);
					} 
				}
			}
			
		}
	};
	function appendAnswerEmptyStatus( qt ){
		qt.append('<span class="ui-question-answer-error">您没有作答</span>');
	};
	function appendAnswerRightStatus( qt ){
		qt.append('<span class="ui-question-answer-right">您答对了</span>');
	};
	function appendAnswerErrorStatus( qt ){
		qt.append('<span class="ui-question-answer-error">您答错了</span>');
	};
	window.__ShowUserAnswerRightStatus=function( rightAnswers ){
		if(!!rightAnswers&&$.isArray(rightAnswers)){
			len=rightAnswers.length;
			for(var i=0;i<len;i++){
				var answer=rightAnswers[i],question=$('#q_'+answer.questionId),qt=$(".ui-question-title",question);
				if(question&&question.length==1){
					if(answer.type==1){/*单选题*/
						var sel=$('.ui-question-options>li.ui-option-selected',question);
						if( !sel || sel.length==0 ){
							appendAnswerEmptyStatus( qt );
						}
						else if( sel.attr("code")==answer.answer){
							appendAnswerRightStatus( qt );
						}else{
							appendAnswerErrorStatus( qt );
						}
							
					}
					else if( answer.type==2 ){
						var temp = answer.answer;
						var sel=$('.ui-question-options>li.ui-option-selected',question);
						if( !sel || sel.length==0 ){
							appendAnswerEmptyStatus( qt );
						}else{
							sel.each(function(){
								var c = $(this).attr('code');	
								if(temp.indexOf(c)<0){
									temp += c;
									return;
								}else{
									temp=temp.replace(c,'');
								}
							});
							if(temp.length==0){
								appendAnswerRightStatus( qt );
							}else{
								appendAnswerErrorStatus( qt );
							}
						}
					}
				}
			}
		}
	};
	window.__ClientJudge=function(answers){/*客户端判卷*/
		var score=0,len,hash={},complexArr=[];
		if(!!answers&&$.isArray(answers)){
			len=answers.length;
			for(var i=0;i<len;i++){
				var answer=answers[i],question=$('#q_'+answer.questionId);
				if(question&&question.length==1){
					var tmpScore=0;
					if(answer.type==1){/*单选题*/
						var sel=$('.ui-question-options>li.ui-option-selected',question);
						if(sel&&sel.attr('code')){
							if(answer.answer==sel.attr('code')){tmpScore=answer.score;}
						}
					}else if(answer.type==2){/*多选替*/
						var sel=$('.ui-question-options>li.ui-option-selected',question),tmpAnswer=answer.answer;
						sel.each(function(){tmpAnswer.replace($(this).attr('code'),'');});
						if(tmpAnswer.length==0){tmpScore=answer.score;}
					}else if(answer.type==4){/*复合题*/
						var tmpId='a_'+answer.questionId;
						if(!hash[tmpId]){hash[tmpId]={subs:[],totalScore:0};complexArr.push(hash[tmpId]);}
						hash[tmpId].answer=answer;
					}
					if(answer.sub){
						var tmpId='a_'+answer.parentId;
						if(!hash[tmpId]){hash[tmpId]={subs:[],totalScore:0};complexArr.push(hash[tmpId]);}
						hash[tmpId].subs.push(tmpScore);
						hash[tmpId].totalScore=hash[tmpId].totalScore+answer.score;
					}else{score=score+tmpScore;}
				}
			}
			len=complexArr.length;
			for(var i=0;i<len;i++){
				var complex=complexArr[i],subs=complex.subs,totalScore=complex.answer.score,tmpScore=0,subLen=subs.length;
				for(var j=0;j<subLen;j++){
					if(complext.totalScore>0){
						tmpScore=tmpScore+(subs[j]/complex.totalScore)*totalScore;
					}
				}
				score=tmpScore+score;
			}
		}
		return score;
	};
	window.__CheckUndone=function(){
		var count=0,firstId=null;
		$('.ui-question').each(function(){
			var t=$(this);
			if(t.hasClass('ui-question-1')||t.hasClass('ui-question-2')){
				if($('li.ui-option-selected',t).length==0){
					count++;
					if(firstId==null){
						firstId=t.attr('id');
					}
					t.addClass('undone');
				}
			}else if(t.hasClass('ui-question-3')){
				var txt=$('.ui-question-textarea',t),c=txt.val();
				if(!c||c.length==0){
					count++;
					if(firstId==null){
						firstId=t.attr('id');
					}
					t.addClass('undone');
				}
			}
		});
		return {count:count,firstId:firstId};
	};
	window.__Checkdone=function(){
		var count=0,firstId=null,totalCount=0;
		$('.ui-question').each(function(){
			totalCount++;
			var t=$(this);
			if(t.hasClass('ui-question-1')||t.hasClass('ui-question-2')){
				if($('li.ui-option-selected',t).length!=0){
					count++;
				}
			}else if(t.hasClass('ui-question-3')){
				var txt=$('.ui-question-textarea',t),c=txt.val();
				if(c&&c.length!=0){
					count++;
				}
			}
		});
		return {count:count,firstId:firstId,totalCount:totalCount};
	};
	window.__Exam_PaperInit=function(){
		var uiOverflow=$('.ui-overflow'),win=$(window);
		uiOverflow.width(win.width());uiOverflow.height(win.height());
		uiOverflow.html('<p>正在加载试卷...</p>');
		window.__RTE=FindApi(window);
		var exam=window.__RTE;
		if(!exam){
			uiOverflow.html('<p>考试初始化失败，请确认您用正确的方式打开考试！</p>');
		}else{			
			if(exam.confuseOrder){
				confuseOrderFunc( exam.getUserExamId() );  //0.5为混淆因子
			}
			if(exam.confuseChoice){
				confuseChoiceFunc( 0.5 ); 
			}
			/*try{
				showAudioPlayers();
			}catch(e){				
			}*/			
			if(exam.enterTime){  //是考试
				
				$('.ui-question-options>li .ui-question-options-order').on('click',function(){
					var t=$(this).parent(),parent=t.parent().parent(),answer='',isChanged=false;
					while(!!parent){
						if(parent.hasClass('ui-question')){
							break;
						}else{
							parent=parent.parent();
						}
					}
					if(!!parent){
						if(parent.hasClass('undone')){
							parent.removeClass('undone');
						}
						if(parent.hasClass('ui-question-1')){
							if(!t.hasClass('ui-option-selected')){
								$('.ui-question-options>li.ui-option-selected', parent).removeClass('ui-option-selected');
								t.addClass('ui-option-selected');
								answer=t.attr('code');
								isChanged=true;
							}
						}else if(parent.hasClass('ui-question-2')){
							isChanged=true;
							t.toggleClass('ui-option-selected');
							$('.ui-question-options>li.ui-option-selected',parent).each(function(){
								answer=answer+$(this).attr('code');
							});
						}
						if(isChanged){exam.SaveItem(parent.prop('id').substring(2), parent.attr('code').substring(4),answer);}
					}
					
				});
				$('.ui-question-textarea').on('paste',function(){return false});
				$('.ui-question-textarea').on('change',function(){
					var parent=$(this).parent();
					if(!!parent){
						if(parent.hasClass('undone')){
							parent.removeClass('undone');
						}
						var answer=$(this).val();
						exam.SaveItem(parent.prop('id').substring(2), parent.attr('code').substring(4),answer);
					}
				});
			}
			exam.Init(window); //显示用户的答案
		}
	};
	/**
     * 生成随机数的类，参数为随机数的种子，如果种子相同，则生成的随机数序列一样。
     *
     * @param {String} seed 字符串的随机数种子
     */
    function Random(seed) {
        this.seed = this.hashCode(seed);
    }
    Random.prototype.hashCode = function(str) {
        str = str + '';
        var hash = 0;
        if (str.length == 0) return hash;
        for (i = 0; i < str.length; i++) {
            char = str.charCodeAt(i);
            hash = ((hash << 5) - hash) + char;
            hash = hash & hash; // Convert to 32bit integer
        }
        return hash;
    }
    Random.prototype.rand = function(max) {
        this.seed = (this.seed * 9301 + 49297) % 233280;
        var t = this.seed / (233280.0);
        var r= Math.floor(Math.abs(t * max));
        if(r>=max){
        	r--;
        }
        return r
    }
})(jQuery);